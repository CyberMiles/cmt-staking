{"id":"0240e0de0b6d8436b2b321dd46d8dcf7","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate that the this implementation remains valid after an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248) {\n        require(value >= type(int248).min && value <= type(int248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return int248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240) {\n        require(value >= type(int240).min && value <= type(int240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return int240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232) {\n        require(value >= type(int232).min && value <= type(int232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return int232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224) {\n        require(value >= type(int224).min && value <= type(int224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return int224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216) {\n        require(value >= type(int216).min && value <= type(int216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return int216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208) {\n        require(value >= type(int208).min && value <= type(int208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return int208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200) {\n        require(value >= type(int200).min && value <= type(int200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return int200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192) {\n        require(value >= type(int192).min && value <= type(int192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return int192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184) {\n        require(value >= type(int184).min && value <= type(int184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return int184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176) {\n        require(value >= type(int176).min && value <= type(int176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return int176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168) {\n        require(value >= type(int168).min && value <= type(int168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return int168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160) {\n        require(value >= type(int160).min && value <= type(int160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return int160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152) {\n        require(value >= type(int152).min && value <= type(int152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return int152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144) {\n        require(value >= type(int144).min && value <= type(int144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return int144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136) {\n        require(value >= type(int136).min && value <= type(int136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return int136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120) {\n        require(value >= type(int120).min && value <= type(int120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return int120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112) {\n        require(value >= type(int112).min && value <= type(int112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return int112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104) {\n        require(value >= type(int104).min && value <= type(int104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return int104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96) {\n        require(value >= type(int96).min && value <= type(int96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return int96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88) {\n        require(value >= type(int88).min && value <= type(int88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return int88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80) {\n        require(value >= type(int80).min && value <= type(int80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return int80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72) {\n        require(value >= type(int72).min && value <= type(int72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return int72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56) {\n        require(value >= type(int56).min && value <= type(int56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return int56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48) {\n        require(value >= type(int48).min && value <= type(int48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return int48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40) {\n        require(value >= type(int40).min && value <= type(int40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return int40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24) {\n        require(value >= type(int24).min && value <= type(int24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return int24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/DoubleEndedQueue.sol)\npragma solidity ^0.8.4;\n\nimport \"../math/SafeCast.sol\";\n\n/**\n * @dev A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of\n * the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and\n * FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that\n * the existing queue contents are left in storage.\n *\n * The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be\n * used in storage, and not in memory.\n * ```\n * DoubleEndedQueue.Bytes32Deque queue;\n * ```\n *\n * _Available since v4.6._\n */\nlibrary DoubleEndedQueue {\n    /**\n     * @dev An operation (e.g. {front}) couldn't be completed due to the queue being empty.\n     */\n    error Empty();\n\n    /**\n     * @dev An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\n     */\n    error OutOfBounds();\n\n    /**\n     * @dev Indices are signed integers because the queue can grow in any direction. They are 128 bits so begin and end\n     * are packed in a single storage slot for efficient access. Since the items are added one at a time we can safely\n     * assume that these 128-bit indices will not overflow, and use unchecked arithmetic.\n     *\n     * Struct members have an underscore prefix indicating that they are \"private\" and should not be read or written to\n     * directly. Use the functions provided below instead. Modifying the struct manually may violate assumptions and\n     * lead to unexpected behavior.\n     *\n     * Indices are in the range [begin, end) which means the first item is at data[begin] and the last item is at\n     * data[end - 1].\n     */\n    struct Bytes32Deque {\n        int128 _begin;\n        int128 _end;\n        mapping(int128 => bytes32) _data;\n    }\n\n    /**\n     * @dev Inserts an item at the end of the queue.\n     */\n    function pushBack(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 backIndex = deque._end;\n        deque._data[backIndex] = value;\n        unchecked {\n            deque._end = backIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Removes the item at the end of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popBack(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        value = deque._data[backIndex];\n        delete deque._data[backIndex];\n        deque._end = backIndex;\n    }\n\n    /**\n     * @dev Inserts an item at the beginning of the queue.\n     */\n    function pushFront(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 frontIndex;\n        unchecked {\n            frontIndex = deque._begin - 1;\n        }\n        deque._data[frontIndex] = value;\n        deque._begin = frontIndex;\n    }\n\n    /**\n     * @dev Removes the item at the beginning of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popFront(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        value = deque._data[frontIndex];\n        delete deque._data[frontIndex];\n        unchecked {\n            deque._begin = frontIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Returns the item at the beginning of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function front(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        return deque._data[frontIndex];\n    }\n\n    /**\n     * @dev Returns the item at the end of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function back(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        return deque._data[backIndex];\n    }\n\n    /**\n     * @dev Return the item at a position in the queue given by `index`, with the first item at 0 and last item at\n     * `length(deque) - 1`.\n     *\n     * Reverts with `OutOfBounds` if the index is out of bounds.\n     */\n    function at(Bytes32Deque storage deque, uint256 index) internal view returns (bytes32 value) {\n        // int256(deque._begin) is a safe upcast\n        int128 idx = SafeCast.toInt128(int256(deque._begin) + SafeCast.toInt256(index));\n        if (idx >= deque._end) revert OutOfBounds();\n        return deque._data[idx];\n    }\n\n    /**\n     * @dev Resets the queue back to being empty.\n     *\n     * NOTE: The current items are left behind in storage. This does not affect the functioning of the queue, but misses\n     * out on potential gas refunds.\n     */\n    function clear(Bytes32Deque storage deque) internal {\n        deque._begin = 0;\n        deque._end = 0;\n    }\n\n    /**\n     * @dev Returns the number of items in the queue.\n     */\n    function length(Bytes32Deque storage deque) internal view returns (uint256) {\n        // The interface preserves the invariant that begin <= end so we assume this will not overflow.\n        // We also assume there are at most int256.max items in the queue.\n        unchecked {\n            return uint256(int256(deque._end) - int256(deque._begin));\n        }\n    }\n\n    /**\n     * @dev Returns true if the queue is empty.\n     */\n    function empty(Bytes32Deque storage deque) internal view returns (bool) {\n        return deque._end <= deque._begin;\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/CMTStaking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\n\ncontract CMTStaking is\n    Initializable,\n    // not necessary now but we add ReentrancyGuard in advance to improve security of future updates\n    ReentrancyGuardUpgradeable,\n    PausableUpgradeable,\n    OwnableUpgradeable,\n    UUPSUpgradeable\n{\n    using DoubleEndedQueue for DoubleEndedQueue.Bytes32Deque;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    struct Pool {\n        uint256 lastAUR;\n        uint256 updateBlock;\n    }\n\n    struct StakeInfo {\n        uint256 stakeAmount;\n        uint256 rewardDebt;\n        uint256 pendingReward;\n        uint256 updateBlock;\n    }\n\n    struct Withdrawal {\n        uint256 amount;\n        uint256 timestamp;\n    }\n\n    address public keeper;\n\n    EnumerableSet.AddressSet private _validators;\n\n    Pool public validatorPool;\n    Pool public stakerPool;\n    mapping(address => Pool) public inactivePools;\n\n    // validator => staker => stake info\n    mapping(address => mapping(address => StakeInfo)) public stakeTable;\n\n    mapping(address => DoubleEndedQueue.Bytes32Deque) public withdrawTable;\n\n    uint32 public validatorLimit;\n\n    uint32 public lockPeriod;\n\n    uint256 public validatorRewardPerBlock;\n    uint256 public stakerRewardPerBlock;\n\n    uint256 public totalStakeAmount;\n    uint256 public activeStakeAmount;\n    uint256 public constant AUR_PREC = 1e18;\n\n    uint256 public immutable MIN_STAKE_AMOUNT;\n    uint256 public immutable MIN_WITHDRAW_AMOUNT;\n\n    event Received(address indexed sender, uint256 amount);\n    event RewardPerBlockChanged(uint256 validatorReward, uint256 stakerReward);\n    event LockPeriodChanged(uint32 newLockPeriod);\n    event ValidatorChanged(address validator, bool isValid);\n    event Stake(address indexed staker, address indexed validator, uint256 amount);\n    event Unstake(address indexed staker, address indexed validator, uint256 unstakeAmount, uint256 claimedReward);\n    event WithdrawalInitiated(address indexed account, uint256 amount);\n    event WithdrawalCompleted(address indexed account, address indexed recipient, uint256 amount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(uint256 minStakeAmount, uint256 minWithdrawAmount) {\n        _disableInitializers();\n        require(minStakeAmount >= 10 ** 9, \"Invalid minimal stake amount.\");\n        MIN_STAKE_AMOUNT = minStakeAmount;\n        MIN_WITHDRAW_AMOUNT = minWithdrawAmount;\n    }\n\n    function initialize(address owner, address validator) external initializer {\n        __ReentrancyGuard_init();\n        __Pausable_init();\n        _transferOwnership(owner);\n        __UUPSUpgradeable_init();\n\n        keeper = msg.sender;\n\n        // default maximum 21 validators\n        validatorLimit = 21;\n\n        // default amount of rewards per block\n        _setRewardPerBlock(5 ether);\n\n        // default 7 days withdrawal lock period\n        _setLockPeriod(7 days);\n\n        // minimum 1 validator\n        _addValidator(validator);\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    function getVersion() external pure returns (uint256) {\n        return 1;\n    }\n\n    /////////////////////////////////\n    //            Owner            //\n    /////////////////////////////////\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // set amount of rewards per block\n    function setRewardPerBlock(uint256 amount) external onlyOwner {\n        require(amount > 0, \"Invalid reward per block.\");\n        _updatePools();\n        _setRewardPerBlock(amount);\n    }\n\n    function setLockPeriod(uint32 period) external onlyOwner {\n        require(period >= 1 days, \"Invalid lock period.\");\n        _setLockPeriod(period);\n    }\n\n    function setKeeper(address newKeeper) external onlyOwner {\n        require(newKeeper != address(0), \"Invalid keeper address.\");\n        keeper = newKeeper;\n    }\n\n    // set maximum num of validators\n    function setValidatorLimit(uint32 limit) external onlyOwner {\n        require(limit >= _validators.length(), \"Invalid limit value.\");\n        validatorLimit = limit;\n    }\n\n    // add validator\n    function addValidator(address validator) external onlyOwner {\n        _addValidator(validator);\n    }\n\n    // deactivate validator\n    function removeValidator(address validator) external onlyOwner {\n        require(_validators.length() > 1, \"Cannot remove the only validator.\");\n        require(isActiveValidator(validator), \"Validator not exist or has been removed.\");\n\n        (Pool memory vPool, Pool memory sPool) = _updatePools();\n        StakeInfo memory info = stakeTable[address(0)][validator];\n        _updateRewards(vPool, info);\n        _updateRewardDebt(vPool, info);\n        info.updateBlock = block.number;\n        stakeTable[address(0)][validator] = info;\n\n        _validators.remove(validator);\n        inactivePools[validator] = sPool;\n\n        activeStakeAmount -= info.stakeAmount;\n\n        emit ValidatorChanged(validator, false);\n    }\n\n    /////////////////////////////////\n    //          Validator          //\n    /////////////////////////////////\n\n    // validator withdraw its rewards\n    function validatorWithdraw(uint256 amount) external nonReentrant whenNotPaused {\n        (Pool memory vPool, ) = _updatePools();\n        StakeInfo memory info = stakeTable[address(0)][msg.sender];\n        if (isActiveValidator(msg.sender)) {\n            _updateRewards(vPool, info);\n            _updateRewardDebt(vPool, info);\n        }\n\n        require(amount > 0 && amount <= info.pendingReward, \"Invalid amount or insufficient balance.\");\n        info.pendingReward -= amount;\n        info.updateBlock = block.number;\n        stakeTable[address(0)][msg.sender] = info;\n\n        _initiateWithdrawal(msg.sender, amount);\n    }\n\n    //////////////////////////////\n    //          Staker          //\n    //////////////////////////////\n\n    // stake into a valid validator\n    function stake(address validator) external payable whenNotPaused {\n        require(msg.value >= MIN_STAKE_AMOUNT, \"Stake amount must >= MIN_STAKE_AMOUNT.\");\n\n        require(isActiveValidator(validator), \"Validator not exist or has been removed.\");\n\n        (Pool memory vPool, Pool memory sPool) = _updatePools();\n        StakeInfo memory vInfo = stakeTable[address(0)][validator];\n        StakeInfo memory sInfo = stakeTable[validator][msg.sender];\n        _updateRewards(vPool, vInfo);\n        _updateRewards(sPool, sInfo);\n        vInfo.stakeAmount += msg.value;\n        sInfo.stakeAmount += msg.value;\n        _updateRewardDebt(vPool, vInfo);\n        _updateRewardDebt(sPool, sInfo);\n        vInfo.updateBlock = block.number;\n        sInfo.updateBlock = block.number;\n        stakeTable[address(0)][validator] = vInfo;\n        stakeTable[validator][msg.sender] = sInfo;\n\n        // update staking amounts\n        activeStakeAmount += msg.value;\n        totalStakeAmount += msg.value;\n\n        emit Stake(msg.sender, validator, msg.value);\n    }\n\n    // can only initiate delayed reward withdrawal\n    function unstake(address validator, uint256 amount) external nonReentrant whenNotPaused {\n        (Pool memory vPool, Pool memory sPool) = _updatePools();\n        StakeInfo memory vInfo = stakeTable[address(0)][validator];\n        StakeInfo memory sInfo = stakeTable[validator][msg.sender];\n\n        require(validator != address(0) && sInfo.updateBlock != 0, \"Stake record not found.\");\n\n        uint256 unstaked;\n        uint256 reward;\n\n        if (isActiveValidator(validator)) {\n            _updateRewards(vPool, vInfo);\n            _updateRewards(sPool, sInfo);\n            (unstaked, reward) = _unstake(vInfo, sInfo, amount);\n            _updateRewardDebt(vPool, vInfo);\n            _updateRewardDebt(sPool, sInfo);\n            activeStakeAmount -= unstaked;\n        } else {\n            sPool = inactivePools[validator];\n            _updateRewards(sPool, sInfo);\n            (unstaked, reward) = _unstake(vInfo, sInfo, amount);\n            _updateRewardDebt(sPool, sInfo);\n        }\n\n        vInfo.updateBlock = block.number;\n        sInfo.updateBlock = block.number;\n        stakeTable[address(0)][validator] = vInfo;\n        stakeTable[validator][msg.sender] = sInfo;\n\n        totalStakeAmount -= unstaked;\n\n        emit Unstake(msg.sender, validator, unstaked, reward);\n\n        _initiateWithdrawal(msg.sender, unstaked + reward);\n    }\n\n    function completeWithdraw(address payable recipient, uint256 amount) external {\n        _completeWithdrawal(msg.sender, recipient, amount);\n    }\n\n    function pendingReward(address validator, address staker) external view returns (uint256) {\n        StakeInfo memory info = stakeTable[validator][staker];\n        Pool memory pool;\n        if (validator == address(0)) {\n            if (isActiveValidator(staker)) {\n                pool = validatorPool;\n                _updatePool(pool, validatorRewardPerBlock, activeStakeAmount);\n                _updateRewards(pool, info);\n            }\n            return info.pendingReward;\n        }\n        if (isActiveValidator(validator)) {\n            pool = stakerPool;\n            _updatePool(pool, stakerRewardPerBlock, activeStakeAmount);\n        } else {\n            pool = inactivePools[validator];\n        }\n        _updateRewards(pool, info);\n        return info.pendingReward;\n    }\n\n    function pendingWithdrawals(address account) external view returns (Withdrawal[] memory withdrawals) {\n        DoubleEndedQueue.Bytes32Deque storage queue = withdrawTable[account];\n        uint256 length = queue.length();\n        withdrawals = new Withdrawal[](length);\n        for (uint256 i = 0; i < length; ++i) {\n            (uint256 amount, uint256 timestamp) = _decodeWithdrawal(queue.at(i));\n            withdrawals[i] = Withdrawal(amount, timestamp);\n        }\n    }\n\n    function dueWithdrawalAmount(address account) external view returns (uint256) {\n        return dueWithdrawalAmount(account, block.timestamp);\n    }\n\n    function dueWithdrawalAmount(address account, uint256 timestamp) public view returns (uint256) {\n        DoubleEndedQueue.Bytes32Deque storage queue = withdrawTable[account];\n        uint256 amount = 0;\n        uint256 length = queue.length();\n        for (uint256 i = 0; i < length; ++i) {\n            (uint256 available, uint256 recordTimestamp) = _decodeWithdrawal(queue.at(i));\n            if (recordTimestamp + lockPeriod > timestamp) {\n                break;\n            }\n            amount += available;\n        }\n        return amount;\n    }\n\n    function isActiveValidator(address validator) public view returns (bool) {\n        return _validators.contains(validator);\n    }\n\n    function activeValidators() public view returns (address[] memory) {\n        return _validators.values();\n    }\n\n    function _encodeWithdrawal(uint256 amount, uint256 timestamp) internal pure returns (bytes32 value) {\n        require(amount <= type(uint224).max && timestamp <= type(uint32).max, \"Invalid withdrawal\");\n        value = bytes32((amount << 32) | timestamp);\n    }\n\n    function _decodeWithdrawal(bytes32 value) internal pure returns (uint256 amount, uint256 timestamp) {\n        uint256 temp = uint256(value);\n        amount = temp >> 32;\n        timestamp = temp & (2 ** 32 - 1);\n    }\n\n    function _initiateWithdrawal(address account, uint256 amount) internal {\n        require(amount >= MIN_WITHDRAW_AMOUNT, \"withdraw amount must >= MIN_WITHDRAW_AMOUNT\");\n        withdrawTable[account].pushBack(_encodeWithdrawal(amount, block.timestamp));\n        emit WithdrawalInitiated(account, amount);\n    }\n\n    function _completeWithdrawal(address account, address payable recipient, uint256 amount) internal {\n        DoubleEndedQueue.Bytes32Deque storage queue = withdrawTable[account];\n        uint256 sum = 0;\n        while (!queue.empty()) {\n            (uint256 available, uint256 timestamp) = _decodeWithdrawal(queue.front());\n            if (timestamp + lockPeriod > block.timestamp) {\n                break;\n            }\n            sum += available;\n            queue.popFront();\n            if (sum > amount) {\n                queue.pushFront(_encodeWithdrawal(sum - amount, timestamp));\n                sum = amount;\n                break;\n            }\n        }\n        require(sum == amount, \"Insufficient withdrawable amount.\");\n        emit WithdrawalCompleted(account, recipient, amount);\n        _sendValue(recipient, amount);\n    }\n\n    function _updatePools() internal returns (Pool memory vPool, Pool memory sPool) {\n        vPool = _updatePool(validatorPool, validatorRewardPerBlock, activeStakeAmount);\n        sPool = _updatePool(stakerPool, stakerRewardPerBlock, activeStakeAmount);\n        validatorPool = vPool;\n        stakerPool = sPool;\n    }\n\n    function _updatePool(\n        Pool memory pool,\n        uint256 rewardPerBlock,\n        uint256 stakeAmount\n    ) internal view returns (Pool memory) {\n        if (stakeAmount == 0) {\n            pool.updateBlock = block.number;\n            return pool;\n        }\n        uint256 reward = (block.number - pool.updateBlock) * rewardPerBlock;\n        pool.lastAUR += (reward * AUR_PREC) / stakeAmount;\n        pool.updateBlock = block.number;\n        return pool;\n    }\n\n    function _updateRewards(Pool memory pool, StakeInfo memory info) internal pure {\n        if (info.updateBlock == 0) {\n            return;\n        }\n        info.pendingReward += (info.stakeAmount * pool.lastAUR) / AUR_PREC - info.rewardDebt;\n    }\n\n    function _updateRewardDebt(Pool memory pool, StakeInfo memory info) internal pure {\n        info.rewardDebt = (info.stakeAmount * pool.lastAUR) / AUR_PREC;\n    }\n\n    function _unstake(\n        StakeInfo memory vInfo,\n        StakeInfo memory sInfo,\n        uint256 amount\n    ) internal pure returns (uint256 unstaked, uint256 reward) {\n        uint256 maxAmount = sInfo.stakeAmount + sInfo.pendingReward;\n        require(amount <= maxAmount, \"Insufficient balance.\");\n        reward = sInfo.pendingReward;\n        if (amount == 0) {\n            amount = maxAmount;\n        } else if (amount <= reward) {\n            sInfo.pendingReward -= amount;\n            return (0, amount);\n        }\n        sInfo.pendingReward = 0;\n        unstaked = amount - reward;\n        vInfo.stakeAmount -= unstaked;\n        sInfo.stakeAmount -= unstaked;\n    }\n\n    function _sendValue(address payable to, uint256 amount) internal {\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"Failed to send native token.\");\n    }\n\n    function _setRewardPerBlock(uint256 amount) internal {\n        validatorRewardPerBlock = amount / 5;\n        stakerRewardPerBlock = amount - validatorRewardPerBlock;\n        emit RewardPerBlockChanged(validatorRewardPerBlock, stakerRewardPerBlock);\n    }\n\n    function _setLockPeriod(uint32 period) internal {\n        lockPeriod = period;\n        emit LockPeriodChanged(period);\n    }\n\n    function _addValidator(address validator) internal {\n        require(validator != address(0), \"Invalid address.\");\n        require(_validators.length() < validatorLimit, \"Validators are full.\");\n        require(\n            !isActiveValidator(validator) && inactivePools[validator].updateBlock == 0,\n            \"Validator had been added.\"\n        );\n        _validators.add(validator);\n        emit ValidatorChanged(validator, true);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal view override {\n        require(msg.sender == keeper, \"Only keeper can upgrade contract.\");\n    }\n}\n"},"contracts/mock/CMTStakingMock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\n\ncontract CMTStakingMock is\n    Initializable,\n    // not necessary now but we add ReentrancyGuard in advance to improve security of future updates\n    ReentrancyGuardUpgradeable,\n    PausableUpgradeable,\n    OwnableUpgradeable,\n    UUPSUpgradeable\n{\n    using DoubleEndedQueue for DoubleEndedQueue.Bytes32Deque;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    struct Pool {\n        uint256 lastAUR;\n        uint256 updateBlock;\n    }\n\n    struct StakeInfo {\n        uint256 stakeAmount;\n        uint256 rewardDebt;\n        uint256 pendingReward;\n        uint256 updateBlock;\n    }\n\n    struct Withdrawal {\n        uint256 amount;\n        uint256 timestamp;\n    }\n\n    address public keeper;\n\n    EnumerableSet.AddressSet private _validators;\n\n    Pool public validatorPool;\n    Pool public stakerPool;\n    mapping(address => Pool) public inactivePools;\n\n    // validator => staker => stake info\n    mapping(address => mapping(address => StakeInfo)) public stakeTable;\n\n    mapping(address => DoubleEndedQueue.Bytes32Deque) public withdrawTable;\n\n    uint32 public validatorLimit;\n\n    uint32 public lockPeriod;\n\n    uint256 public validatorRewardPerBlock;\n    uint256 public stakerRewardPerBlock;\n\n    uint256 public totalStakeAmount;\n    uint256 public activeStakeAmount;\n    uint256 public constant AUR_PREC = 1e18;\n\n    uint256 public immutable MIN_STAKE_AMOUNT;\n    uint256 public immutable MIN_WITHDRAW_AMOUNT;\n\n    event Received(address indexed sender, uint256 amount);\n    event RewardPerBlockChanged(uint256 validatorReward, uint256 stakerReward);\n    event LockPeriodChanged(uint32 newLockPeriod);\n    event ValidatorChanged(address validator, bool isValid);\n    event Stake(address indexed staker, address indexed validator, uint256 amount);\n    event Unstake(address indexed staker, address indexed validator, uint256 unstakeAmount, uint256 claimedReward);\n    event WithdrawalInitiated(address indexed account, uint256 amount);\n    event WithdrawalCompleted(address indexed account, address indexed recipient, uint256 amount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(uint256 minStakeAmount, uint256 minWithdrawAmount) {\n        _disableInitializers();\n        require(minStakeAmount >= 10 ** 9, \"Invalid minimal stake amount.\");\n        MIN_STAKE_AMOUNT = minStakeAmount;\n        MIN_WITHDRAW_AMOUNT = minWithdrawAmount;\n    }\n\n    function initialize(address owner, address validator) external initializer {\n        __ReentrancyGuard_init();\n        __Pausable_init();\n        _transferOwnership(owner);\n        __UUPSUpgradeable_init();\n\n        keeper = msg.sender;\n\n        // default maximum 21 validators\n        validatorLimit = 21;\n\n        // default amount of rewards per block\n        _setRewardPerBlock(5 ether);\n\n        // default 7 days withdrawal lock period\n        _setLockPeriod(7 days);\n\n        // minimum 1 validator\n        _addValidator(validator);\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    function getVersion() external pure returns (uint256) {\n        return 2;\n    }\n\n    /////////////////////////////////\n    //            Owner            //\n    /////////////////////////////////\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // set amount of rewards per block\n    function setRewardPerBlock(uint256 amount) external onlyOwner {\n        require(amount > 0, \"Invalid reward per block.\");\n        _updatePools();\n        _setRewardPerBlock(amount);\n    }\n\n    function setLockPeriod(uint32 period) external onlyOwner {\n        require(period >= 1 days, \"Invalid lock period.\");\n        _setLockPeriod(period);\n    }\n\n    function setKeeper(address newKeeper) external onlyOwner {\n        require(newKeeper != address(0), \"Invalid keeper address.\");\n        keeper = newKeeper;\n    }\n\n    // set maximum num of validators\n    function setValidatorLimit(uint32 limit) external onlyOwner {\n        require(limit >= _validators.length(), \"Invalid limit value.\");\n        validatorLimit = limit;\n    }\n\n    // add validator\n    function addValidator(address validator) external onlyOwner {\n        _addValidator(validator);\n    }\n\n    // deactivate validator\n    function removeValidator(address validator) external onlyOwner {\n        require(_validators.length() > 1, \"Cannot remove the only validator.\");\n        require(isActiveValidator(validator), \"Validator not exist or has been removed.\");\n\n        (Pool memory vPool, Pool memory sPool) = _updatePools();\n        StakeInfo memory info = stakeTable[address(0)][validator];\n        _updateRewards(vPool, info);\n        _updateRewardDebt(vPool, info);\n        info.updateBlock = block.number;\n        stakeTable[address(0)][validator] = info;\n\n        _validators.remove(validator);\n        inactivePools[validator] = sPool;\n\n        activeStakeAmount -= info.stakeAmount;\n\n        emit ValidatorChanged(validator, false);\n    }\n\n    /////////////////////////////////\n    //          Validator          //\n    /////////////////////////////////\n\n    // validator withdraw its rewards\n    function validatorWithdraw(uint256 amount) external nonReentrant whenNotPaused {\n        (Pool memory vPool, ) = _updatePools();\n        StakeInfo memory info = stakeTable[address(0)][msg.sender];\n        if (isActiveValidator(msg.sender)) {\n            _updateRewards(vPool, info);\n            _updateRewardDebt(vPool, info);\n        }\n\n        require(amount > 0 && amount <= info.pendingReward, \"Invalid amount or insufficient balance.\");\n        info.pendingReward -= amount;\n        info.updateBlock = block.number;\n        stakeTable[address(0)][msg.sender] = info;\n\n        _initiateWithdrawal(msg.sender, amount);\n    }\n\n    //////////////////////////////\n    //          Staker          //\n    //////////////////////////////\n\n    // stake into a valid validator\n    function stake(address validator) external payable whenNotPaused {\n        require(msg.value >= MIN_STAKE_AMOUNT, \"Stake amount must >= MIN_STAKE_AMOUNT.\");\n\n        require(isActiveValidator(validator), \"Validator not exist or has been removed.\");\n\n        (Pool memory vPool, Pool memory sPool) = _updatePools();\n        StakeInfo memory vInfo = stakeTable[address(0)][validator];\n        StakeInfo memory sInfo = stakeTable[validator][msg.sender];\n        _updateRewards(vPool, vInfo);\n        _updateRewards(sPool, sInfo);\n        vInfo.stakeAmount += msg.value;\n        sInfo.stakeAmount += msg.value;\n        _updateRewardDebt(vPool, vInfo);\n        _updateRewardDebt(sPool, sInfo);\n        vInfo.updateBlock = block.number;\n        sInfo.updateBlock = block.number;\n        stakeTable[address(0)][validator] = vInfo;\n        stakeTable[validator][msg.sender] = sInfo;\n\n        // update staking amounts\n        activeStakeAmount += msg.value;\n        totalStakeAmount += msg.value;\n\n        emit Stake(msg.sender, validator, msg.value);\n    }\n\n    // can only initiate delayed reward withdrawal\n    function unstake(address validator, uint256 amount) external nonReentrant whenNotPaused {\n        (Pool memory vPool, Pool memory sPool) = _updatePools();\n        StakeInfo memory vInfo = stakeTable[address(0)][validator];\n        StakeInfo memory sInfo = stakeTable[validator][msg.sender];\n\n        require(validator != address(0) && sInfo.updateBlock != 0, \"Stake record not found.\");\n\n        uint256 unstaked;\n        uint256 reward;\n\n        if (isActiveValidator(validator)) {\n            _updateRewards(vPool, vInfo);\n            _updateRewards(sPool, sInfo);\n            (unstaked, reward) = _unstake(vInfo, sInfo, amount);\n            _updateRewardDebt(vPool, vInfo);\n            _updateRewardDebt(sPool, sInfo);\n            activeStakeAmount -= unstaked;\n        } else {\n            sPool = inactivePools[validator];\n            _updateRewards(sPool, sInfo);\n            (unstaked, reward) = _unstake(vInfo, sInfo, amount);\n            _updateRewardDebt(sPool, sInfo);\n        }\n\n        vInfo.updateBlock = block.number;\n        sInfo.updateBlock = block.number;\n        stakeTable[address(0)][validator] = vInfo;\n        stakeTable[validator][msg.sender] = sInfo;\n\n        totalStakeAmount -= unstaked;\n\n        emit Unstake(msg.sender, validator, unstaked, reward);\n\n        _initiateWithdrawal(msg.sender, unstaked + reward);\n    }\n\n    function completeWithdraw(address payable recipient, uint256 amount) external {\n        _completeWithdrawal(msg.sender, recipient, amount);\n    }\n\n    function pendingReward(address validator, address staker) external view returns (uint256) {\n        StakeInfo memory info = stakeTable[validator][staker];\n        Pool memory pool;\n        if (validator == address(0)) {\n            if (isActiveValidator(staker)) {\n                pool = validatorPool;\n                _updatePool(pool, validatorRewardPerBlock, activeStakeAmount);\n                _updateRewards(pool, info);\n            }\n            return info.pendingReward;\n        }\n        if (isActiveValidator(validator)) {\n            pool = stakerPool;\n            _updatePool(pool, stakerRewardPerBlock, activeStakeAmount);\n        } else {\n            pool = inactivePools[validator];\n        }\n        _updateRewards(pool, info);\n        return info.pendingReward;\n    }\n\n    function pendingWithdrawals(address account) external view returns (Withdrawal[] memory withdrawals) {\n        DoubleEndedQueue.Bytes32Deque storage queue = withdrawTable[account];\n        uint256 length = queue.length();\n        withdrawals = new Withdrawal[](length);\n        for (uint256 i = 0; i < length; ++i) {\n            (uint256 amount, uint256 timestamp) = _decodeWithdrawal(queue.at(i));\n            withdrawals[i] = Withdrawal(amount, timestamp);\n        }\n    }\n\n    function dueWithdrawalAmount(address account) external view returns (uint256) {\n        return dueWithdrawalAmount(account, block.timestamp);\n    }\n\n    function dueWithdrawalAmount(address account, uint256 timestamp) public view returns (uint256) {\n        DoubleEndedQueue.Bytes32Deque storage queue = withdrawTable[account];\n        uint256 amount = 0;\n        uint256 length = queue.length();\n        for (uint256 i = 0; i < length; ++i) {\n            (uint256 available, uint256 recordTimestamp) = _decodeWithdrawal(queue.at(i));\n            if (recordTimestamp + lockPeriod > timestamp) {\n                break;\n            }\n            amount += available;\n        }\n        return amount;\n    }\n\n    function isActiveValidator(address validator) public view returns (bool) {\n        return _validators.contains(validator);\n    }\n\n    function activeValidators() public view returns (address[] memory) {\n        return _validators.values();\n    }\n\n    function _encodeWithdrawal(uint256 amount, uint256 timestamp) internal pure returns (bytes32 value) {\n        require(amount <= type(uint224).max && timestamp <= type(uint32).max, \"Invalid withdrawal\");\n        value = bytes32((amount << 32) | timestamp);\n    }\n\n    function _decodeWithdrawal(bytes32 value) internal pure returns (uint256 amount, uint256 timestamp) {\n        uint256 temp = uint256(value);\n        amount = temp >> 32;\n        timestamp = temp & (2 ** 32 - 1);\n    }\n\n    function _initiateWithdrawal(address account, uint256 amount) internal {\n        require(amount >= MIN_WITHDRAW_AMOUNT, \"withdraw amount must >= MIN_WITHDRAW_AMOUNT\");\n        withdrawTable[account].pushBack(_encodeWithdrawal(amount, block.timestamp));\n        emit WithdrawalInitiated(account, amount);\n    }\n\n    function _completeWithdrawal(address account, address payable recipient, uint256 amount) internal {\n        DoubleEndedQueue.Bytes32Deque storage queue = withdrawTable[account];\n        uint256 sum = 0;\n        while (!queue.empty()) {\n            (uint256 available, uint256 timestamp) = _decodeWithdrawal(queue.front());\n            if (timestamp + lockPeriod > block.timestamp) {\n                break;\n            }\n            sum += available;\n            queue.popFront();\n            if (sum > amount) {\n                queue.pushFront(_encodeWithdrawal(sum - amount, timestamp));\n                sum = amount;\n                break;\n            }\n        }\n        require(sum == amount, \"Insufficient withdrawable amount.\");\n        emit WithdrawalCompleted(account, recipient, amount);\n        _sendValue(recipient, amount);\n    }\n\n    function _updatePools() internal returns (Pool memory vPool, Pool memory sPool) {\n        vPool = _updatePool(validatorPool, validatorRewardPerBlock, activeStakeAmount);\n        sPool = _updatePool(stakerPool, stakerRewardPerBlock, activeStakeAmount);\n        validatorPool = vPool;\n        stakerPool = sPool;\n    }\n\n    function _updatePool(\n        Pool memory pool,\n        uint256 rewardPerBlock,\n        uint256 stakeAmount\n    ) internal view returns (Pool memory) {\n        if (stakeAmount == 0) {\n            pool.updateBlock = block.number;\n            return pool;\n        }\n        uint256 reward = (block.number - pool.updateBlock) * rewardPerBlock;\n        pool.lastAUR += (reward * AUR_PREC) / stakeAmount;\n        pool.updateBlock = block.number;\n        return pool;\n    }\n\n    function _updateRewards(Pool memory pool, StakeInfo memory info) internal pure {\n        if (info.updateBlock == 0) {\n            return;\n        }\n        info.pendingReward += (info.stakeAmount * pool.lastAUR) / AUR_PREC - info.rewardDebt;\n    }\n\n    function _updateRewardDebt(Pool memory pool, StakeInfo memory info) internal pure {\n        info.rewardDebt = (info.stakeAmount * pool.lastAUR) / AUR_PREC;\n    }\n\n    function _unstake(\n        StakeInfo memory vInfo,\n        StakeInfo memory sInfo,\n        uint256 amount\n    ) internal pure returns (uint256 unstaked, uint256 reward) {\n        uint256 maxAmount = sInfo.stakeAmount + sInfo.pendingReward;\n        require(amount <= maxAmount, \"Insufficient balance.\");\n        reward = sInfo.pendingReward;\n        if (amount == 0) {\n            amount = maxAmount;\n        } else if (amount <= reward) {\n            sInfo.pendingReward -= amount;\n            return (0, amount);\n        }\n        sInfo.pendingReward = 0;\n        unstaked = amount - reward;\n        vInfo.stakeAmount -= unstaked;\n        sInfo.stakeAmount -= unstaked;\n    }\n\n    function _sendValue(address payable to, uint256 amount) internal {\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"Failed to send native token.\");\n    }\n\n    function _setRewardPerBlock(uint256 amount) internal {\n        validatorRewardPerBlock = amount / 5;\n        stakerRewardPerBlock = amount - validatorRewardPerBlock;\n        emit RewardPerBlockChanged(validatorRewardPerBlock, stakerRewardPerBlock);\n    }\n\n    function _setLockPeriod(uint32 period) internal {\n        lockPeriod = period;\n        emit LockPeriodChanged(period);\n    }\n\n    function _addValidator(address validator) internal {\n        require(validator != address(0), \"Invalid address.\");\n        require(_validators.length() < validatorLimit, \"Validators are full.\");\n        require(\n            !isActiveValidator(validator) && inactivePools[validator].updateBlock == 0,\n            \"Validator had been added.\"\n        );\n        _validators.add(validator);\n        emit ValidatorChanged(validator, true);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal view override {\n        require(msg.sender == keeper, \"Only keeper can upgrade contract.\");\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/CMTStaking.sol:441:32:\n    |\n441 |     function _authorizeUpgrade(address newImplementation) internal view override {\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":15999,"file":"contracts/CMTStaking.sol","start":15974},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/mock/CMTStakingMock.sol:441:32:\n    |\n441 |     function _authorizeUpgrade(address newImplementation) internal view override {\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":16003,"file":"contracts/mock/CMTStakingMock.sol","start":15978},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1236],"ContextUpgradeable":[1278],"Initializable":[671],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":1279,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":672,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1278,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,1278,671],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2125:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2135:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2135:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2115:9:0"},"nodeType":"ModifierInvocation","src":"2115:9:0"}],"name":"renounceOwnership","nameLocation":"2080:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2097:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2125:0:0"},"scope":131,"src":"2071:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2391:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2409:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2401:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2503:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2484:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2178:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2381:9:0"},"nodeType":"ModifierInvocation","src":"2381:9:0"}],"name":"transferOwnership","nameLocation":"2330:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2348:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2391:0:0"},"scope":131,"src":"2321:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2736:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2746:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2765:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2781:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2781:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2834:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2844:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2813:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2808:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2525:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2701:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2736:0:0"},"scope":131,"src":"2673:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2866:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3125:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2445:0","usedErrors":[]}],"src":"102:3052:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[141]},"id":142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"138:203:1","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":141,"linearizedBaseContracts":[141],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"387:438:1","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":140,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:1","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"852:2:1"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":140,"src":"878:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:1"},"scope":141,"src":"830:57:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":142,"src":"342:547:1","usedErrors":[]}],"src":"113:777:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1236],"ERC1967UpgradeUpgradeable":[510],"IBeaconUpgradeable":[520],"IERC1822ProxiableUpgradeable":[141],"Initializable":[671],"StorageSlotUpgradeable":[1338]},"id":511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":143,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":521,"src":"141:42:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":142,"src":"184:56:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":1237,"src":"241:44:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":1339,"src":"286:48:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":511,"sourceUnit":672,"src":"335:36:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":150,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"657:13:2"},"id":151,"nodeType":"InheritanceSpecifier","src":"657:13:2"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"373:236:2","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":510,"linearizedBaseContracts":[510,671],"name":"ERC1967UpgradeUpgradeable","nameLocation":"628:25:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":156,"nodeType":"Block","src":"736:7:2","statements":[]},"id":157,"implemented":true,"kind":"function","modifiers":[{"id":154,"kind":"modifierInvocation","modifierName":{"id":153,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"719:16:2"},"nodeType":"ModifierInvocation","src":"719:16:2"}],"name":"__ERC1967Upgrade_init","nameLocation":"686:21:2","nodeType":"FunctionDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[],"src":"707:2:2"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"736:0:2"},"scope":510,"src":"677:66:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":162,"nodeType":"Block","src":"818:7:2","statements":[]},"id":163,"implemented":true,"kind":"function","modifiers":[{"id":160,"kind":"modifierInvocation","modifierName":{"id":159,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"801:16:2"},"nodeType":"ModifierInvocation","src":"801:16:2"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"758:31:2","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"789:2:2"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"818:0:2"},"scope":510,"src":"749:76:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":166,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"934:14:2","nodeType":"VariableDeclaration","scope":510,"src":"909:108:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"909:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:66:2","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"1024:214:2","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":170,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1269:20:2","nodeType":"VariableDeclaration","scope":510,"src":"1243:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1243:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:66:2","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1365:68:2","text":" @dev Emitted when the implementation is upgraded."},"id":175,"name":"Upgraded","nameLocation":"1444:8:2","nodeType":"EventDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1469:14:2","nodeType":"VariableDeclaration","scope":175,"src":"1453:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"1453:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1452:32:2"},"src":"1438:47:2"},{"body":{"id":187,"nodeType":"Block","src":"1625:89:2","statements":[{"expression":{"expression":{"arguments":[{"id":183,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1680:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":181,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"1642:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1338_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"1642:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1284_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1642:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"1642:65:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":180,"id":186,"nodeType":"Return","src":"1635:72:2"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"1491:67:2","text":" @dev Returns the current implementation address."},"id":188,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1572:18:2","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"1590:2:2"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":188,"src":"1616:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:9:2"},"scope":510,"src":"1563:151:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":211,"nodeType":"Block","src":"1868:218:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":197,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1916:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":195,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"1886:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1236_$","typeString":"type(library AddressUpgradeable)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"1886:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:47:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1878:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1878:106:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"ExpressionStatement","src":"1878:106:2"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":205,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2032:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":202,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"1994:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1338_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"1994:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1284_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1994:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"1994:65:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2062:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1994:85:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":210,"nodeType":"ExpressionStatement","src":"1994:85:2"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1720:80:2","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":212,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1814:18:2","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"newImplementation","nameLocation":"1841:17:2","nodeType":"VariableDeclaration","scope":212,"src":"1833:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:27:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"1868:0:2"},"scope":510,"src":"1805:281:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":226,"nodeType":"Block","src":"2248:96:2","statements":[{"expression":{"arguments":[{"id":219,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2277:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":218,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"2258:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2258:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"2258:37:2"},{"eventCall":{"arguments":[{"id":223,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2319:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":222,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2310:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2310:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"EmitStatement","src":"2305:32:2"}]},"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2092:95:2","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2201:10:2","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"newImplementation","nameLocation":"2220:17:2","nodeType":"VariableDeclaration","scope":227,"src":"2212:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2211:27:2"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2248:0:2"},"scope":510,"src":"2192:152:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"2606:160:2","statements":[{"expression":{"arguments":[{"id":238,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2627:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2616:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"2616:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2659:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2659:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2659:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":245,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2678:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2659:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":253,"nodeType":"IfStatement","src":"2655:105:2","trueBody":{"id":252,"nodeType":"Block","src":"2689:71:2","statements":[{"expression":{"arguments":[{"id":248,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2725:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":249,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2744:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":247,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"2703:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2703:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":251,"nodeType":"ExpressionStatement","src":"2703:46:2"}]}}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2350:123:2","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2487:17:2","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"newImplementation","nameLocation":"2522:17:2","nodeType":"VariableDeclaration","scope":255,"src":"2514:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"data","nameLocation":"2562:4:2","nodeType":"VariableDeclaration","scope":255,"src":"2549:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":231,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"forceCall","nameLocation":"2581:9:2","nodeType":"VariableDeclaration","scope":255,"src":"2576:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":233,"name":"bool","nodeType":"ElementaryTypeName","src":"2576:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2504:92:2"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"2606:0:2"},"scope":510,"src":"2478:288:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":307,"nodeType":"Block","src":"3070:842:2","statements":[{"condition":{"expression":{"arguments":[{"id":267,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"3422:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":265,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3384:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1338_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"3384:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1287_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3384:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1287_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1286,"src":"3384:59:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":305,"nodeType":"Block","src":"3513:393:2","statements":[{"clauses":[{"block":{"id":290,"nodeType":"Block","src":"3618:115:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":284,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3644:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":285,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"3652:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3644:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3674:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3636:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"3636:82:2"}]},"errorName":"","id":291,"nodeType":"TryCatchClause","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"slot","nameLocation":"3612:4:2","nodeType":"VariableDeclaration","scope":291,"src":"3604:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3604:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3603:14:2"},"src":"3595:138:2"},{"block":{"id":296,"nodeType":"Block","src":"3740:89:2","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3765:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":292,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3758:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3758:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"3758:56:2"}]},"errorName":"","id":297,"nodeType":"TryCatchClause","src":"3734:95:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":276,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3560:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":275,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3531:28:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$141_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$141","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":140,"src":"3531:61:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:63:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":298,"nodeType":"TryStatement","src":"3527:302:2"},{"expression":{"arguments":[{"id":300,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3860:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":301,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3879:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":302,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3885:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":299,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3842:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3842:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"3842:53:2"}]},"id":306,"nodeType":"IfStatement","src":"3380:526:2","trueBody":{"id":274,"nodeType":"Block","src":"3445:62:2","statements":[{"expression":{"arguments":[{"id":271,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3478:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":270,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3459:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3459:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"ExpressionStatement","src":"3459:37:2"}]}}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"2772:161:2","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":308,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2947:21:2","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"newImplementation","nameLocation":"2986:17:2","nodeType":"VariableDeclaration","scope":308,"src":"2978:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"2978:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"data","nameLocation":"3026:4:2","nodeType":"VariableDeclaration","scope":308,"src":"3013:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":259,"name":"bytes","nodeType":"ElementaryTypeName","src":"3013:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"forceCall","nameLocation":"3045:9:2","nodeType":"VariableDeclaration","scope":308,"src":"3040:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":261,"name":"bool","nodeType":"ElementaryTypeName","src":"3040:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2968:92:2"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"3070:0:2"},"scope":510,"src":"2938:974:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"3918:189:2","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":312,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4138:11:2","nodeType":"VariableDeclaration","scope":510,"src":"4112:106:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4112:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4152:66:2","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"4225:67:2","text":" @dev Emitted when the admin account has changed."},"id":319,"name":"AdminChanged","nameLocation":"4303:12:2","nodeType":"EventDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"4324:13:2","nodeType":"VariableDeclaration","scope":319,"src":"4316:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4316:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"4347:8:2","nodeType":"VariableDeclaration","scope":319,"src":"4339:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"4339:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4315:41:2"},"src":"4297:60:2"},{"body":{"id":331,"nodeType":"Block","src":"4471:80:2","statements":[{"expression":{"expression":{"arguments":[{"id":327,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4526:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":325,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4488:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1338_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"4488:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1284_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4488:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"4488:56:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":324,"id":330,"nodeType":"Return","src":"4481:63:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"4363:50:2","text":" @dev Returns the current admin."},"id":332,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4427:9:2","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"4436:2:2"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"4462:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4461:9:2"},"scope":510,"src":"4418:133:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":357,"nodeType":"Block","src":"4678:167:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4696:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4708:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:2","typeDescriptions":{}}},"id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4696:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4720:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4688:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4688:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4688:73:2"},{"expression":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":351,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4809:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":348,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4771:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1338_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"4771:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1284_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"4771:56:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":354,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4830:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4771:67:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":356,"nodeType":"ExpressionStatement","src":"4771:67:2"}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"4557:71:2","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":358,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4642:9:2","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"newAdmin","nameLocation":"4660:8:2","nodeType":"VariableDeclaration","scope":358,"src":"4652:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4651:18:2"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"4678:0:2"},"scope":510,"src":"4633:212:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":374,"nodeType":"Block","src":"5005:86:2","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":365,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5033:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5033:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":367,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5046:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":364,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"5020:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5020:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"EmitStatement","src":"5015:40:2"},{"expression":{"arguments":[{"id":371,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5075:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":370,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5065:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5065:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"5065:19:2"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"4851:100:2","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4965:12:2","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"newAdmin","nameLocation":"4986:8:2","nodeType":"VariableDeclaration","scope":375,"src":"4978:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4977:18:2"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"5005:0:2"},"scope":510,"src":"4956:135:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"5097:232:2","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":379,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5360:12:2","nodeType":"VariableDeclaration","scope":510,"src":"5334:107:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5334:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5375:66:2","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"5448:60:2","text":" @dev Emitted when the beacon is upgraded."},"id":384,"name":"BeaconUpgraded","nameLocation":"5519:14:2","nodeType":"EventDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"5550:6:2","nodeType":"VariableDeclaration","scope":384,"src":"5534:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"5534:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5533:24:2"},"src":"5513:45:2"},{"body":{"id":396,"nodeType":"Block","src":"5674:81:2","statements":[{"expression":{"expression":{"arguments":[{"id":392,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5729:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":390,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"5691:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1338_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"5691:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1284_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5691:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"5691:57:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":389,"id":395,"nodeType":"Return","src":"5684:64:2"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"5564:51:2","text":" @dev Returns the current beacon."},"id":397,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5629:10:2","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"5639:2:2"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"5665:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"5665:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5664:9:2"},"scope":510,"src":"5620:135:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":432,"nodeType":"Block","src":"5884:368:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":406,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"5932:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":404,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5902:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1236_$","typeString":"type(library AddressUpgradeable)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"5902:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5902:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5944:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5894:90:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"5894:90:2"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":415,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"6064:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":414,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6045:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$520_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$520","typeString":"contract IBeaconUpgradeable"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":519,"src":"6045:44:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":412,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6015:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1236_$","typeString":"type(library AddressUpgradeable)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"6015:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6106:50:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5994:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5994:172:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"5994:172:2"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":426,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6214:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":423,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"6176:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1338_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"6176:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1284_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6176:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"6176:57:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":429,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"6236:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6176:69:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":431,"nodeType":"ExpressionStatement","src":"6176:69:2"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"5761:71:2","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":433,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5846:10:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"newBeacon","nameLocation":"5865:9:2","nodeType":"VariableDeclaration","scope":433,"src":"5857:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5856:19:2"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"5884:0:2"},"scope":510,"src":"5837:415:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":468,"nodeType":"Block","src":"6681:221:2","statements":[{"expression":{"arguments":[{"id":444,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6702:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":443,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"6691:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6691:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"6691:21:2"},{"eventCall":{"arguments":[{"id":448,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6742:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":447,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6727:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6727:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"EmitStatement","src":"6722:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":451,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6766:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6766:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6766:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":455,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6785:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6766:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":467,"nodeType":"IfStatement","src":"6762:134:2","trueBody":{"id":466,"nodeType":"Block","src":"6796:100:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":459,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"6851:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":458,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6832:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$520_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$520","typeString":"contract IBeaconUpgradeable"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":519,"src":"6832:44:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6880:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":457,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6810:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6810:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"nodeType":"ExpressionStatement","src":"6810:75:2"}]}}]},"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"6258:292:2","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":469,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6564:23:2","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"newBeacon","nameLocation":"6605:9:2","nodeType":"VariableDeclaration","scope":469,"src":"6597:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"6597:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"data","nameLocation":"6637:4:2","nodeType":"VariableDeclaration","scope":469,"src":"6624:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":437,"name":"bytes","nodeType":"ElementaryTypeName","src":"6624:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"forceCall","nameLocation":"6656:9:2","nodeType":"VariableDeclaration","scope":469,"src":"6651:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":439,"name":"bool","nodeType":"ElementaryTypeName","src":"6651:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6587:84:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"6681:0:2"},"scope":510,"src":"6555:347:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"7185:358:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":482,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7233:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":480,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"7203:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1236_$","typeString":"type(library AddressUpgradeable)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"7203:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7242:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7195:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7195:88:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"ExpressionStatement","src":"7195:88:2"},{"assignments":[488,490],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"success","nameLocation":"7359:7:2","nodeType":"VariableDeclaration","scope":503,"src":"7354:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":487,"name":"bool","nodeType":"ElementaryTypeName","src":"7354:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"returndata","nameLocation":"7381:10:2","nodeType":"VariableDeclaration","scope":503,"src":"7368:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":489,"name":"bytes","nodeType":"ElementaryTypeName","src":"7368:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":495,"initialValue":{"arguments":[{"id":493,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"7415:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":491,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"7395:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7395:19:2","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7395:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7353:67:2"},{"expression":{"arguments":[{"id":498,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"7473:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":499,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"7482:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7494:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"expression":{"id":496,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"7437:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1236_$","typeString":"type(library AddressUpgradeable)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"7437:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7437:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":478,"id":502,"nodeType":"Return","src":"7430:106:2"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"6908:175:2","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"_functionDelegateCall","nameLocation":"7097:21:2","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"target","nameLocation":"7127:6:2","nodeType":"VariableDeclaration","scope":504,"src":"7119:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"7119:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"data","nameLocation":"7148:4:2","nodeType":"VariableDeclaration","scope":504,"src":"7135:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"7135:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7118:35:2"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"7171:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":476,"name":"bytes","nodeType":"ElementaryTypeName","src":"7171:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7170:14:2"},"scope":510,"src":"7088:455:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"7549:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":509,"mutability":"mutable","name":"__gap","nameLocation":"7828:5:2","nodeType":"VariableDeclaration","scope":510,"src":"7808:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"7808:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"length":{"hexValue":"3530","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:2:2","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"7808:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":511,"src":"610:7226:2","usedErrors":[]}],"src":"116:7721:2"},"id":2},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[520]},"id":521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":512,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"118:79:3","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":520,"linearizedBaseContracts":[520],"name":"IBeaconUpgradeable","nameLocation":"208:18:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"233:162:3","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":519,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"423:2:3"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":519,"src":"449:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:3"},"scope":520,"src":"400:58:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":521,"src":"198:262:3","usedErrors":[]}],"src":"93:368:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1236],"Initializable":[671]},"id":672,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":522,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":672,"sourceUnit":1237,"src":"138:44:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"184:2198:4","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":671,"linearizedBaseContracts":[671],"name":"Initializable","nameLocation":"2401:13:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"2421:109:4","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":527,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:4","nodeType":"VariableDeclaration","scope":671,"src":"2535:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":526,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"2568:91:4","text":" @dev Indicates that the contract is in the process of being initialized."},"id":530,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:4","nodeType":"VariableDeclaration","scope":671,"src":"2664:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2697:90:4","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":535,"name":"Initialized","nameLocation":"2798:11:4","nodeType":"EventDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:4","nodeType":"VariableDeclaration","scope":535,"src":"2810:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":532,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:4"},"src":"2792:33:4"},{"body":{"id":590,"nodeType":"Block","src":"3101:483:4","statements":[{"assignments":[539],"declarations":[{"constant":false,"id":539,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3116:14:4","nodeType":"VariableDeclaration","scope":590,"src":"3111:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":538,"name":"bool","nodeType":"ElementaryTypeName","src":"3111:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":542,"initialValue":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3133:14:4","subExpression":{"id":540,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3134:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3111:36:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":544,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3179:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3197:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3197:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3178:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3219:45:4","subExpression":{"arguments":[{"arguments":[{"id":554,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3258:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$671","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$671","typeString":"contract Initializable"}],"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3250:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"3250:7:4","typeDescriptions":{}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":550,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"3220:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1236_$","typeString":"type(library AddressUpgradeable)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"3220:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3268:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3268:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3218:68:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3178:108:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3300:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3157:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3157:201:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"ExpressionStatement","src":"3157:201:4"},{"expression":{"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":567,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3368:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3368:16:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":570,"nodeType":"ExpressionStatement","src":"3368:16:4"},{"condition":{"id":571,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3398:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":577,"nodeType":"IfStatement","src":"3394:65:4","trueBody":{"id":576,"nodeType":"Block","src":"3414:45:4","statements":[{"expression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":572,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3428:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3444:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3428:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":575,"nodeType":"ExpressionStatement","src":"3428:20:4"}]}},{"id":578,"nodeType":"PlaceholderStatement","src":"3468:1:4"},{"condition":{"id":579,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3483:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"IfStatement","src":"3479:99:4","trueBody":{"id":588,"nodeType":"Block","src":"3499:79:4","statements":[{"expression":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":580,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3513:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3529:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3513:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"ExpressionStatement","src":"3513:21:4"},{"eventCall":{"arguments":[{"hexValue":"31","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":584,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"3553:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3553:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"EmitStatement","src":"3548:19:4"}]}}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"2831:242:4","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":591,"name":"initializer","nameLocation":"3087:11:4","nodeType":"ModifierDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"3098:2:4"},"src":"3078:506:4","virtual":false,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"4399:255:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4417:14:4","subExpression":{"id":597,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4418:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4435:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":600,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4450:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4435:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4417:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4459:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4409:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"4409:99:4"},{"expression":{"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":606,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4518:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":607,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4533:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4518:22:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":609,"nodeType":"ExpressionStatement","src":"4518:22:4"},{"expression":{"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":610,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4550:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4566:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4550:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":613,"nodeType":"ExpressionStatement","src":"4550:20:4"},{"id":614,"nodeType":"PlaceholderStatement","src":"4580:1:4"},{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":615,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4591:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4607:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4591:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":618,"nodeType":"ExpressionStatement","src":"4591:21:4"},{"eventCall":{"arguments":[{"id":620,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4639:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":619,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4627:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4627:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"EmitStatement","src":"4622:25:4"}]},"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"3590:766:4","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":624,"name":"reinitializer","nameLocation":"4370:13:4","nodeType":"ModifierDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"version","nameLocation":"4390:7:4","nodeType":"VariableDeclaration","scope":624,"src":"4384:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":593,"name":"uint8","nodeType":"ElementaryTypeName","src":"4384:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4383:15:4"},"src":"4361:293:4","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"4892:97:4","statements":[{"expression":{"arguments":[{"id":628,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4910:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4902:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4902:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"4902:69:4"},{"id":632,"nodeType":"PlaceholderStatement","src":"4981:1:4"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"4660:199:4","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":634,"name":"onlyInitializing","nameLocation":"4873:16:4","nodeType":"ModifierDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"4889:2:4"},"src":"4864:125:4","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"5437:230:4","statements":[{"expression":{"arguments":[{"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:14:4","subExpression":{"id":639,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5456:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5471:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5447:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"5447:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"5527:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5547:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":646,"name":"uint8","nodeType":"ElementaryTypeName","src":"5547:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":645,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5542:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5542:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5527:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":668,"nodeType":"IfStatement","src":"5523:138:4","trueBody":{"id":667,"nodeType":"Block","src":"5559:102:4","statements":[{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":651,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"5573:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":653,"name":"uint8","nodeType":"ElementaryTypeName","src":"5593:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":652,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5588:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5588:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5588:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5573:30:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":658,"nodeType":"ExpressionStatement","src":"5573:30:4"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5639:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":661,"name":"uint8","nodeType":"ElementaryTypeName","src":"5639:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5634:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5634:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":659,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5622:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5622:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"EmitStatement","src":"5617:33:4"}]}}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"4995:388:4","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":670,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5397:20:4","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"5417:2:4"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"5437:0:4"},"scope":671,"src":"5388:279:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":672,"src":"2383:3286:4","usedErrors":[]}],"src":"113:5557:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1236],"ERC1967UpgradeUpgradeable":[510],"IBeaconUpgradeable":[520],"IERC1822ProxiableUpgradeable":[141],"Initializable":[671],"StorageSlotUpgradeable":[1338],"UUPSUpgradeable":[807]},"id":808,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":673,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":142,"src":"140:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":675,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":511,"src":"197:50:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":672,"src":"248:29:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":678,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"965:13:5"},"id":679,"nodeType":"InheritanceSpecifier","src":"965:13:5"},{"baseName":{"id":680,"name":"IERC1822ProxiableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":141,"src":"980:28:5"},"id":681,"nodeType":"InheritanceSpecifier","src":"980:28:5"},{"baseName":{"id":682,"name":"ERC1967UpgradeUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":510,"src":"1010:25:5"},"id":683,"nodeType":"InheritanceSpecifier","src":"1010:25:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"279:648:5","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":807,"linearizedBaseContracts":[807,510,141,671],"name":"UUPSUpgradeable","nameLocation":"946:15:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":688,"nodeType":"Block","src":"1102:7:5","statements":[]},"id":689,"implemented":true,"kind":"function","modifiers":[{"id":686,"kind":"modifierInvocation","modifierName":{"id":685,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"1085:16:5"},"nodeType":"ModifierInvocation","src":"1085:16:5"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:5","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"1073:2:5"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"1102:0:5"},"scope":807,"src":"1042:67:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":694,"nodeType":"Block","src":"1185:7:5","statements":[]},"id":695,"implemented":true,"kind":"function","modifiers":[{"id":692,"kind":"modifierInvocation","modifierName":{"id":691,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"1168:16:5"},"nodeType":"ModifierInvocation","src":"1168:16:5"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:5","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"1156:2:5"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"1185:0:5"},"scope":807,"src":"1115:77:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"1197:87:5","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":702,"mutability":"immutable","name":"__self","nameLocation":"1315:6:5","nodeType":"VariableDeclaration","scope":807,"src":"1289:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":700,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$807","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$807","typeString":"contract UUPSUpgradeable"}],"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:5","typeDescriptions":{}}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1324:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":724,"nodeType":"Block","src":"1863:205:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":708,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$807","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$807","typeString":"contract UUPSUpgradeable"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:5","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1881:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":710,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"1898:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1873:80:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"ExpressionStatement","src":"1873:80:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":716,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"1971:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":718,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"1995:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1963:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"1963:87:5"},{"id":723,"nodeType":"PlaceholderStatement","src":"2060:1:5"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"1344:493:5","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":725,"name":"onlyProxy","nameLocation":"1851:9:5","nodeType":"ModifierDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"1860:2:5"},"src":"1842:226:5","virtual":false,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"2298:120:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":731,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$807","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$807","typeString":"contract UUPSUpgradeable"}],"id":730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:5","typeDescriptions":{}}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2316:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":733,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2333:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2308:92:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"2308:92:5"},{"id":738,"nodeType":"PlaceholderStatement","src":"2410:1:5"}]},"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"2074:195:5","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":740,"name":"notDelegated","nameLocation":"2283:12:5","nodeType":"ModifierDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"2295:2:5"},"src":"2274:144:5","virtual":false,"visibility":"internal"},{"baseFunctions":[140],"body":{"id":751,"nodeType":"Block","src":"3091:44:5","statements":[{"expression":{"id":749,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"3108:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":748,"id":750,"nodeType":"Return","src":"3101:27:5"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"2424:575:5","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate that the this implementation remains valid after an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":752,"implemented":true,"kind":"function","modifiers":[{"id":745,"kind":"modifierInvocation","modifierName":{"id":744,"name":"notDelegated","nodeType":"IdentifierPath","referencedDeclaration":740,"src":"3060:12:5"},"nodeType":"ModifierInvocation","src":"3060:12:5"}],"name":"proxiableUUID","nameLocation":"3013:13:5","nodeType":"FunctionDefinition","overrides":{"id":743,"nodeType":"OverrideSpecifier","overrides":[],"src":"3051:8:5"},"parameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"3026:2:5"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":752,"src":"3082:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3081:9:5"},"scope":807,"src":"3004:131:5","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":773,"nodeType":"Block","src":"3388:124:5","statements":[{"expression":{"arguments":[{"id":761,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"3416:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"3398:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3398:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"ExpressionStatement","src":"3398:36:5"},{"expression":{"arguments":[{"id":765,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"3466:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3495:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3485:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":766,"name":"bytes","nodeType":"ElementaryTypeName","src":"3489:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3485:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":764,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3444:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3444:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"3444:61:5"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"3141:169:5","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"3659cfe6","id":774,"implemented":true,"kind":"function","modifiers":[{"id":758,"kind":"modifierInvocation","modifierName":{"id":757,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":725,"src":"3378:9:5"},"nodeType":"ModifierInvocation","src":"3378:9:5"}],"name":"upgradeTo","nameLocation":"3324:9:5","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"newImplementation","nameLocation":"3342:17:5","nodeType":"VariableDeclaration","scope":774,"src":"3334:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3333:27:5"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"3388:0:5"},"scope":807,"src":"3315:197:5","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":794,"nodeType":"Block","src":"3868:115:5","statements":[{"expression":{"arguments":[{"id":785,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3896:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":784,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"3878:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3878:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"3878:36:5"},{"expression":{"arguments":[{"id":789,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3946:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3965:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3971:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":788,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3924:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3924:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"3924:52:5"}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"3518:238:5","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"4f1ef286","id":795,"implemented":true,"kind":"function","modifiers":[{"id":782,"kind":"modifierInvocation","modifierName":{"id":781,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":725,"src":"3858:9:5"},"nodeType":"ModifierInvocation","src":"3858:9:5"}],"name":"upgradeToAndCall","nameLocation":"3770:16:5","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"newImplementation","nameLocation":"3795:17:5","nodeType":"VariableDeclaration","scope":795,"src":"3787:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"3787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"data","nameLocation":"3827:4:5","nodeType":"VariableDeclaration","scope":795,"src":"3814:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":778,"name":"bytes","nodeType":"ElementaryTypeName","src":"3814:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:46:5"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"3868:0:5"},"scope":807,"src":"3761:222:5","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"3989:397:5","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":801,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4400:17:5","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"newImplementation","nameLocation":"4426:17:5","nodeType":"VariableDeclaration","scope":801,"src":"4418:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4417:27:5"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[],"src":"4461:0:5"},"scope":807,"src":"4391:71:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"4468:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":806,"mutability":"mutable","name":"__gap","nameLocation":"4747:5:5","nodeType":"VariableDeclaration","scope":807,"src":"4727:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"length":{"hexValue":"3530","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4735:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4727:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":808,"src":"928:3827:5","usedErrors":[]}],"src":"115:4641:5"},"id":5},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1236],"ContextUpgradeable":[1278],"Initializable":[671],"PausableUpgradeable":[934]},"id":935,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":809,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":935,"sourceUnit":1279,"src":"130:41:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":935,"sourceUnit":672,"src":"172:42:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":813,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"697:13:6"},"id":814,"nodeType":"InheritanceSpecifier","src":"697:13:6"},{"baseName":{"id":815,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1278,"src":"712:18:6"},"id":816,"nodeType":"InheritanceSpecifier","src":"712:18:6"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"216:439:6","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":934,"linearizedBaseContracts":[934,1278,671],"name":"PausableUpgradeable","nameLocation":"674:19:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"737:73:6","text":" @dev Emitted when the pause is triggered by `account`."},"id":821,"name":"Paused","nameLocation":"821:6:6","nodeType":"EventDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:6","nodeType":"VariableDeclaration","scope":821,"src":"828:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:6"},"src":"815:30:6"},{"anonymous":false,"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"851:70:6","text":" @dev Emitted when the pause is lifted by `account`."},"id":826,"name":"Unpaused","nameLocation":"932:8:6","nodeType":"EventDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:6","nodeType":"VariableDeclaration","scope":826,"src":"941:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:6"},"src":"926:32:6"},{"constant":false,"id":828,"mutability":"mutable","name":"_paused","nameLocation":"977:7:6","nodeType":"VariableDeclaration","scope":934,"src":"964:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":837,"nodeType":"Block","src":"1116:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":834,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"1126:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"1126:27:6"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"991:67:6","text":" @dev Initializes the contract in unpaused state."},"id":838,"implemented":true,"kind":"function","modifiers":[{"id":832,"kind":"modifierInvocation","modifierName":{"id":831,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"1099:16:6"},"nodeType":"ModifierInvocation","src":"1099:16:6"}],"name":"__Pausable_init","nameLocation":"1072:15:6","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"1087:2:6"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"1116:0:6"},"scope":934,"src":"1063:97:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":847,"nodeType":"Block","src":"1229:32:6","statements":[{"expression":{"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":843,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"1239:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":846,"nodeType":"ExpressionStatement","src":"1239:15:6"}]},"id":848,"implemented":true,"kind":"function","modifiers":[{"id":841,"kind":"modifierInvocation","modifierName":{"id":840,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"1212:16:6"},"nodeType":"ModifierInvocation","src":"1212:16:6"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:6","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"1200:2:6"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"1229:0:6"},"scope":934,"src":"1166:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":855,"nodeType":"Block","src":"1472:47:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":851,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1482:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"ExpressionStatement","src":"1482:19:6"},{"id":854,"nodeType":"PlaceholderStatement","src":"1511:1:6"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"1267:175:6","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":856,"name":"whenNotPaused","nameLocation":"1456:13:6","nodeType":"ModifierDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"1469:2:6"},"src":"1447:72:6","virtual":false,"visibility":"internal"},{"body":{"id":863,"nodeType":"Block","src":"1719:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":859,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1729:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"1729:16:6"},{"id":862,"nodeType":"PlaceholderStatement","src":"1755:1:6"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"1525:167:6","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":864,"name":"whenPaused","nameLocation":"1706:10:6","nodeType":"ModifierDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"1716:2:6"},"src":"1697:66:6","virtual":false,"visibility":"internal"},{"body":{"id":872,"nodeType":"Block","src":"1911:31:6","statements":[{"expression":{"id":870,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"1928:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":869,"id":871,"nodeType":"Return","src":"1921:14:6"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"1769:84:6","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":873,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:6","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"1873:2:6"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":873,"src":"1905:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":867,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:6"},"scope":934,"src":"1858:84:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":884,"nodeType":"Block","src":"2061:55:6","statements":[{"expression":{"arguments":[{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:6","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":878,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2080:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"2071:38:6"}]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"1948:57:6","text":" @dev Throws if the contract is paused."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:6","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"2036:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"2061:0:6"},"scope":934,"src":"2010:106:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"2236:58:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":890,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2254:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"2246:41:6"}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"2122:61:6","text":" @dev Throws if the contract is not paused."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:6","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"2211:2:6"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"2236:0:6"},"scope":934,"src":"2188:106:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"2478:66:6","statements":[{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":902,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2488:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":905,"nodeType":"ExpressionStatement","src":"2488:14:6"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":907,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2524:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":906,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"2517:6:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"EmitStatement","src":"2512:25:6"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"2300:124:6","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":912,"implemented":true,"kind":"function","modifiers":[{"id":900,"kind":"modifierInvocation","modifierName":{"id":899,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":856,"src":"2464:13:6"},"nodeType":"ModifierInvocation","src":"2464:13:6"}],"name":"_pause","nameLocation":"2438:6:6","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"2444:2:6"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"2478:0:6"},"scope":934,"src":"2429:115:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":927,"nodeType":"Block","src":"2724:69:6","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":918,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2734:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":921,"nodeType":"ExpressionStatement","src":"2734:15:6"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":923,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2773:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":922,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2764:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2759:27:6"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"2550:121:6","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":928,"implemented":true,"kind":"function","modifiers":[{"id":916,"kind":"modifierInvocation","modifierName":{"id":915,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"2713:10:6"},"nodeType":"ModifierInvocation","src":"2713:10:6"}],"name":"_unpause","nameLocation":"2685:8:6","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"2693:2:6"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"2724:0:6"},"scope":934,"src":"2676:117:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"2799:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":933,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:6","nodeType":"VariableDeclaration","scope":934,"src":"3058:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"length":{"hexValue":"3439","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":935,"src":"656:2430:6","usedErrors":[]}],"src":"105:2982:6"},"id":6},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1236],"Initializable":[671],"ReentrancyGuardUpgradeable":[993]},"id":994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":936,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":672,"src":"121:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":939,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"964:13:7"},"id":940,"nodeType":"InheritanceSpecifier","src":"964:13:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"165:750:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":993,"linearizedBaseContracts":[993,671],"name":"ReentrancyGuardUpgradeable","nameLocation":"934:26:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":943,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1757:12:7","nodeType":"VariableDeclaration","scope":993,"src":"1732:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":946,"mutability":"constant","name":"_ENTERED","nameLocation":"1804:8:7","nodeType":"VariableDeclaration","scope":993,"src":"1779:37:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1815:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":948,"mutability":"mutable","name":"_status","nameLocation":"1839:7:7","nodeType":"VariableDeclaration","scope":993,"src":"1823:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1823:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":956,"nodeType":"Block","src":"1913:51:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":953,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"1923:32:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"1923:34:7"}]},"id":957,"implemented":true,"kind":"function","modifiers":[{"id":951,"kind":"modifierInvocation","modifierName":{"id":950,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"1896:16:7"},"nodeType":"ModifierInvocation","src":"1896:16:7"}],"name":"__ReentrancyGuard_init","nameLocation":"1862:22:7","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1884:2:7"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"1913:0:7"},"scope":993,"src":"1853:111:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"2040:39:7","statements":[{"expression":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":962,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2050:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":963,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2060:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2050:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"nodeType":"ExpressionStatement","src":"2050:22:7"}]},"id":967,"implemented":true,"kind":"function","modifiers":[{"id":960,"kind":"modifierInvocation","modifierName":{"id":959,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"2023:16:7"},"nodeType":"ModifierInvocation","src":"2023:16:7"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1979:32:7","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"2011:2:7"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"2040:0:7"},"scope":993,"src":"1970:109:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"2480:421:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":971,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2569:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":972,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2580:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2569:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2590:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2561:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2561:63:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"ExpressionStatement","src":"2561:63:7"},{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":977,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2699:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":978,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"2709:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2699:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":980,"nodeType":"ExpressionStatement","src":"2699:18:7"},{"id":981,"nodeType":"PlaceholderStatement","src":"2728:1:7"},{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":982,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2872:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":983,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"2882:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":985,"nodeType":"ExpressionStatement","src":"2872:22:7"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"2085:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":987,"name":"nonReentrant","nameLocation":"2465:12:7","nodeType":"ModifierDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"2477:2:7"},"src":"2456:445:7","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"2907:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":992,"mutability":"mutable","name":"__gap","nameLocation":"3186:5:7","nodeType":"VariableDeclaration","scope":993,"src":"3166:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"length":{"hexValue":"3439","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3174:2:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3166:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":994,"src":"916:2278:7","usedErrors":[]}],"src":"97:3098:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1236]},"id":1237,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":995,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1236,"linearizedBaseContracts":[1236],"name":"AddressUpgradeable","nameLocation":"202:18:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1010,"nodeType":"Block","src":"1252:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1004,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1476:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1003,"id":1009,"nodeType":"Return","src":"1469:30:8"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"227:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:8","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"account","nameLocation":"1214:7:8","nodeType":"VariableDeclaration","scope":1011,"src":"1206:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:8"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"1246:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1001,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:8"},"scope":1236,"src":"1186:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1044,"nodeType":"Block","src":"2494:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1022,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1236","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1236","typeString":"library AddressUpgradeable"}],"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:8","typeDescriptions":{}}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2537:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"2504:73:8"},{"assignments":[1031,null],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"success","nameLocation":"2594:7:8","nodeType":"VariableDeclaration","scope":1044,"src":"2589:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1030,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1038,"initialValue":{"arguments":[{"hexValue":"","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1032,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2607:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1034,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2629:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:8"},{"expression":{"arguments":[{"id":1040,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2658:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"2650:78:8"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"1512:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:8","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:8","nodeType":"VariableDeclaration","scope":1045,"src":"2442:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"amount","nameLocation":"2477:6:8","nodeType":"VariableDeclaration","scope":1045,"src":"2469:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:8"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"2494:0:8"},"scope":1236,"src":"2423:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1061,"nodeType":"Block","src":"3566:84:8","statements":[{"expression":{"arguments":[{"id":1056,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"3596:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1057,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3604:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1055,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1062,1082],"referencedDeclaration":1082,"src":"3583:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1054,"id":1060,"nodeType":"Return","src":"3576:67:8"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"2741:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:8","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"target","nameLocation":"3507:6:8","nodeType":"VariableDeclaration","scope":1062,"src":"3499:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"data","nameLocation":"3528:4:8","nodeType":"VariableDeclaration","scope":1062,"src":"3515:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1049,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:8"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"3552:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:8"},"scope":1236,"src":"3477:173:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1081,"nodeType":"Block","src":"4019:76:8","statements":[{"expression":{"arguments":[{"id":1075,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"4058:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1076,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"4066:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1078,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"4075:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1074,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1102,1152],"referencedDeclaration":1152,"src":"4036:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1073,"id":1080,"nodeType":"Return","src":"4029:59:8"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"3656:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:8","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"target","nameLocation":"3911:6:8","nodeType":"VariableDeclaration","scope":1082,"src":"3903:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"data","nameLocation":"3940:4:8","nodeType":"VariableDeclaration","scope":1082,"src":"3927:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1066,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:8","nodeType":"VariableDeclaration","scope":1082,"src":"3954:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1068,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:8"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"4005:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:8"},"scope":1236,"src":"3872:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"4600:111:8","statements":[{"expression":{"arguments":[{"id":1095,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4639:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"4647:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4653:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1094,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1102,1152],"referencedDeclaration":1152,"src":"4617:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1093,"id":1100,"nodeType":"Return","src":"4610:94:8"}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"4101:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:8","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"target","nameLocation":"4505:6:8","nodeType":"VariableDeclaration","scope":1102,"src":"4497:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"data","nameLocation":"4534:4:8","nodeType":"VariableDeclaration","scope":1102,"src":"4521:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"value","nameLocation":"4556:5:8","nodeType":"VariableDeclaration","scope":1102,"src":"4548:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:8"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"4586:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:8"},"scope":1236,"src":"4457:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1151,"nodeType":"Block","src":"5138:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1119,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1236","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1236","typeString":"library AddressUpgradeable"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:8","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5156:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5156:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"5181:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"5148:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1129,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"5258:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1128,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5247:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"5239:60:8"},{"assignments":[1135,1137],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"success","nameLocation":"5316:7:8","nodeType":"VariableDeclaration","scope":1151,"src":"5311:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1134,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:8","nodeType":"VariableDeclaration","scope":1151,"src":"5325:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1136,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1144,"initialValue":{"arguments":[{"id":1142,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"5378:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1138,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"5352:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5352:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"5371:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5352:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:8"},{"expression":{"arguments":[{"id":1146,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"5417:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1147,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"5426:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1148,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"5438:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1145,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"5400:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1115,"id":1150,"nodeType":"Return","src":"5393:58:8"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"4717:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:8","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"target","nameLocation":"5007:6:8","nodeType":"VariableDeclaration","scope":1152,"src":"4999:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"data","nameLocation":"5036:4:8","nodeType":"VariableDeclaration","scope":1152,"src":"5023:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"value","nameLocation":"5058:5:8","nodeType":"VariableDeclaration","scope":1152,"src":"5050:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:8","nodeType":"VariableDeclaration","scope":1152,"src":"5073:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1110,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:8"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"5124:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1113,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:8"},"scope":1236,"src":"4959:499:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"5735:97:8","statements":[{"expression":{"arguments":[{"id":1163,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"5771:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5779:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1162,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1169,1204],"referencedDeclaration":1204,"src":"5752:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1161,"id":1167,"nodeType":"Return","src":"5745:80:8"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"5464:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:8","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"target","nameLocation":"5671:6:8","nodeType":"VariableDeclaration","scope":1169,"src":"5663:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"data","nameLocation":"5692:4:8","nodeType":"VariableDeclaration","scope":1169,"src":"5679:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"5721:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1159,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:8"},"scope":1236,"src":"5635:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"6174:228:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1183,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"6203:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1182,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"6192:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"6184:67:8"},{"assignments":[1189,1191],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"success","nameLocation":"6268:7:8","nodeType":"VariableDeclaration","scope":1203,"src":"6263:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1188,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:8","nodeType":"VariableDeclaration","scope":1203,"src":"6277:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1196,"initialValue":{"arguments":[{"id":1194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6322:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1192,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"6304:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:8"},{"expression":{"arguments":[{"id":1198,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6361:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1199,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6370:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1200,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"6382:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1197,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"6344:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1180,"id":1202,"nodeType":"Return","src":"6337:58:8"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"5838:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:8","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"target","nameLocation":"6061:6:8","nodeType":"VariableDeclaration","scope":1204,"src":"6053:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"data","nameLocation":"6090:4:8","nodeType":"VariableDeclaration","scope":1204,"src":"6077:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:8","nodeType":"VariableDeclaration","scope":1204,"src":"6104:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:8"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1204,"src":"6160:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1178,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:8"},"scope":1236,"src":"6016:386:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1234,"nodeType":"Block","src":"6782:582:8","statements":[{"condition":{"id":1216,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"6796:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1232,"nodeType":"Block","src":"6853:505:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1220,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6937:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6937:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1230,"nodeType":"Block","src":"7295:53:8","statements":[{"expression":{"arguments":[{"id":1227,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"7320:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1226,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7313:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7313:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1229,"nodeType":"ExpressionStatement","src":"7313:20:8"}]},"id":1231,"nodeType":"IfStatement","src":"6933:415:8","trueBody":{"id":1225,"nodeType":"Block","src":"6960:329:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7130:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7152:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7181:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7175:5:8"},"nodeType":"YulFunctionCall","src":"7175:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7156:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7224:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7228:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:8"},"nodeType":"YulFunctionCall","src":"7220:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7241:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7213:6:8"},"nodeType":"YulFunctionCall","src":"7213:44:8"},"nodeType":"YulExpressionStatement","src":"7213:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1209,"isOffset":false,"isSlot":false,"src":"7181:10:8","valueSize":1},{"declaration":1209,"isOffset":false,"isSlot":false,"src":"7228:10:8","valueSize":1}],"id":1224,"nodeType":"InlineAssembly","src":"7121:154:8"}]}}]},"id":1233,"nodeType":"IfStatement","src":"6792:566:8","trueBody":{"id":1219,"nodeType":"Block","src":"6805:42:8","statements":[{"expression":{"id":1217,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6826:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1215,"id":1218,"nodeType":"Return","src":"6819:17:8"}]}}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"6408:209:8","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1235,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:8","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"success","nameLocation":"6662:7:8","nodeType":"VariableDeclaration","scope":1235,"src":"6657:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1206,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:8","nodeType":"VariableDeclaration","scope":1235,"src":"6679:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1208,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:8","nodeType":"VariableDeclaration","scope":1235,"src":"6712:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1210,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:8"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"6768:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:8"},"scope":1236,"src":"6622:742:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1237,"src":"194:7172:8","usedErrors":[]}],"src":"101:7266:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1236],"ContextUpgradeable":[1278],"Initializable":[671]},"id":1279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1238,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1279,"sourceUnit":672,"src":"110:42:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1241,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"691:13:9"},"id":1242,"nodeType":"InheritanceSpecifier","src":"691:13:9"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"154:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1278,"linearizedBaseContracts":[1278,671],"name":"ContextUpgradeable","nameLocation":"669:18:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1247,"nodeType":"Block","src":"763:7:9","statements":[]},"id":1248,"implemented":true,"kind":"function","modifiers":[{"id":1245,"kind":"modifierInvocation","modifierName":{"id":1244,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"746:16:9"},"nodeType":"ModifierInvocation","src":"746:16:9"}],"name":"__Context_init","nameLocation":"720:14:9","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[],"src":"734:2:9"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[],"src":"763:0:9"},"scope":1278,"src":"711:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"838:7:9","statements":[]},"id":1254,"implemented":true,"kind":"function","modifiers":[{"id":1251,"kind":"modifierInvocation","modifierName":{"id":1250,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":634,"src":"821:16:9"},"nodeType":"ModifierInvocation","src":"821:16:9"}],"name":"__Context_init_unchained","nameLocation":"785:24:9","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"809:2:9"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"838:0:9"},"scope":1278,"src":"776:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"912:34:9","statements":[{"expression":{"expression":{"id":1259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1258,"id":1261,"nodeType":"Return","src":"922:17:9"}]},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:9","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"869:2:9"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1263,"src":"903:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:9"},"scope":1278,"src":"850:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1271,"nodeType":"Block","src":"1019:32:9","statements":[{"expression":{"expression":{"id":1268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1267,"id":1270,"nodeType":"Return","src":"1029:15:9"}]},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:9","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"969:2:9"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1272,"src":"1003:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1265,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:9"},"scope":1278,"src":"952:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"1057:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1277,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:9","nodeType":"VariableDeclaration","scope":1278,"src":"1316:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1276,"length":{"hexValue":"3530","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1279,"src":"651:693:9","usedErrors":[]}],"src":"86:1259:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1338]},"id":1339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1280,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"130:1148:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":1338,"linearizedBaseContracts":[1338],"name":"StorageSlotUpgradeable","nameLocation":"1287:22:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1284,"members":[{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"1353:5:10","nodeType":"VariableDeclaration","scope":1284,"src":"1345:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1323:11:10","nodeType":"StructDefinition","scope":1338,"src":"1316:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1287,"members":[{"constant":false,"id":1286,"mutability":"mutable","name":"value","nameLocation":"1405:5:10","nodeType":"VariableDeclaration","scope":1287,"src":"1400:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1378:11:10","nodeType":"StructDefinition","scope":1338,"src":"1371:46:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1290,"members":[{"constant":false,"id":1289,"mutability":"mutable","name":"value","nameLocation":"1460:5:10","nodeType":"VariableDeclaration","scope":1290,"src":"1452:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1452:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1430:11:10","nodeType":"StructDefinition","scope":1338,"src":"1423:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1293,"members":[{"constant":false,"id":1292,"mutability":"mutable","name":"value","nameLocation":"1515:5:10","nodeType":"VariableDeclaration","scope":1293,"src":"1507:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1485:11:10","nodeType":"StructDefinition","scope":1338,"src":"1478:49:10","visibility":"public"},{"body":{"id":1303,"nodeType":"Block","src":"1709:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1771:38:10","statements":[{"nodeType":"YulAssignment","src":"1785:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"1795:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1785:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1300,"isOffset":false,"isSlot":true,"src":"1785:6:10","suffix":"slot","valueSize":1},{"declaration":1296,"isOffset":false,"isSlot":false,"src":"1795:4:10","valueSize":1}],"id":1302,"nodeType":"InlineAssembly","src":"1762:47:10"}]},"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"1533:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1304,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1634:14:10","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"slot","nameLocation":"1657:4:10","nodeType":"VariableDeclaration","scope":1304,"src":"1649:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1649:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1648:14:10"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"r","nameLocation":"1706:1:10","nodeType":"VariableDeclaration","scope":1304,"src":"1686:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1299,"nodeType":"UserDefinedTypeName","pathNode":{"id":1298,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":1284,"src":"1686:11:10"},"referencedDeclaration":1284,"src":"1686:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1284_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1685:23:10"},"scope":1338,"src":"1625:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"1997:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2059:38:10","statements":[{"nodeType":"YulAssignment","src":"2073:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2083:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2073:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1311,"isOffset":false,"isSlot":true,"src":"2073:6:10","suffix":"slot","valueSize":1},{"declaration":1307,"isOffset":false,"isSlot":false,"src":"2083:4:10","valueSize":1}],"id":1313,"nodeType":"InlineAssembly","src":"2050:47:10"}]},"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"1821:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1922:14:10","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"slot","nameLocation":"1945:4:10","nodeType":"VariableDeclaration","scope":1315,"src":"1937:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1937:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1936:14:10"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"r","nameLocation":"1994:1:10","nodeType":"VariableDeclaration","scope":1315,"src":"1974:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1287_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1310,"nodeType":"UserDefinedTypeName","pathNode":{"id":1309,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":1287,"src":"1974:11:10"},"referencedDeclaration":1287,"src":"1974:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1287_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"1973:23:10"},"scope":1338,"src":"1913:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"2285:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2347:38:10","statements":[{"nodeType":"YulAssignment","src":"2361:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2371:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2361:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1322,"isOffset":false,"isSlot":true,"src":"2361:6:10","suffix":"slot","valueSize":1},{"declaration":1318,"isOffset":false,"isSlot":false,"src":"2371:4:10","valueSize":1}],"id":1324,"nodeType":"InlineAssembly","src":"2338:47:10"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"2109:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2210:14:10","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"slot","nameLocation":"2233:4:10","nodeType":"VariableDeclaration","scope":1326,"src":"2225:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:14:10"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"r","nameLocation":"2282:1:10","nodeType":"VariableDeclaration","scope":1326,"src":"2262:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1290_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1321,"nodeType":"UserDefinedTypeName","pathNode":{"id":1320,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":1290,"src":"2262:11:10"},"referencedDeclaration":1290,"src":"2262:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1290_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2261:23:10"},"scope":1338,"src":"2201:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"2573:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2635:38:10","statements":[{"nodeType":"YulAssignment","src":"2649:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2659:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2649:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":1333,"isOffset":false,"isSlot":true,"src":"2649:6:10","suffix":"slot","valueSize":1},{"declaration":1329,"isOffset":false,"isSlot":false,"src":"2659:4:10","valueSize":1}],"id":1335,"nodeType":"InlineAssembly","src":"2626:47:10"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"2397:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2498:14:10","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"slot","nameLocation":"2521:4:10","nodeType":"VariableDeclaration","scope":1337,"src":"2513:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2513:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2512:14:10"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"r","nameLocation":"2570:1:10","nodeType":"VariableDeclaration","scope":1337,"src":"2550:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1293_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1332,"nodeType":"UserDefinedTypeName","pathNode":{"id":1331,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"2550:11:10"},"referencedDeclaration":1293,"src":"2550:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1293_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2549:23:10"},"scope":1338,"src":"2489:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1339,"src":"1279:1402:10","usedErrors":[]}],"src":"105:2577:10"},"id":10},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[3189]},"id":3190,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1340,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"132:709:11","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":3189,"linearizedBaseContracts":[3189],"name":"SafeCast","nameLocation":"850:8:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1365,"nodeType":"Block","src":"1254:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"1272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1352,"name":"uint248","nodeType":"ElementaryTypeName","src":"1286:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":1351,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1281:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1281:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1281:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1272:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1300:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":1349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1264:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1264:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"ExpressionStatement","src":"1264:78:11"},{"expression":{"arguments":[{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"1367:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1359:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1360,"name":"uint248","nodeType":"ElementaryTypeName","src":"1359:7:11","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1359:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":1348,"id":1364,"nodeType":"Return","src":"1352:21:11"}]},"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"865:318:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1197:9:11","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"value","nameLocation":"1215:5:11","nodeType":"VariableDeclaration","scope":1366,"src":"1207:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1206:15:11"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"1245:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":1346,"name":"uint248","nodeType":"ElementaryTypeName","src":"1245:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1244:9:11"},"scope":3189,"src":"1188:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1390,"nodeType":"Block","src":"1775:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"1793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1807:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1377,"name":"uint240","nodeType":"ElementaryTypeName","src":"1807:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":1376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1802:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1802:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1802:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1793:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":1374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1785:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1785:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1384,"nodeType":"ExpressionStatement","src":"1785:78:11"},{"expression":{"arguments":[{"id":1387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"1888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1880:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1385,"name":"uint240","nodeType":"ElementaryTypeName","src":"1880:7:11","typeDescriptions":{}}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1880:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":1373,"id":1389,"nodeType":"Return","src":"1873:21:11"}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"1386:318:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1718:9:11","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"1736:5:11","nodeType":"VariableDeclaration","scope":1391,"src":"1728:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:15:11"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1391,"src":"1766:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1371,"name":"uint240","nodeType":"ElementaryTypeName","src":"1766:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1765:9:11"},"scope":3189,"src":"1709:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1415,"nodeType":"Block","src":"2296:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2314:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2328:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1402,"name":"uint232","nodeType":"ElementaryTypeName","src":"2328:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":1401,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2323:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2323:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2314:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2342:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":1399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2306:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2306:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"2306:78:11"},{"expression":{"arguments":[{"id":1412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2409:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2401:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1410,"name":"uint232","nodeType":"ElementaryTypeName","src":"2401:7:11","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":1398,"id":1414,"nodeType":"Return","src":"2394:21:11"}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"1907:318:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2239:9:11","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"value","nameLocation":"2257:5:11","nodeType":"VariableDeclaration","scope":1416,"src":"2249:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2249:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2248:15:11"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"2287:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":1396,"name":"uint232","nodeType":"ElementaryTypeName","src":"2287:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2286:9:11"},"scope":3189,"src":"2230:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1440,"nodeType":"Block","src":"2817:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1427,"name":"uint224","nodeType":"ElementaryTypeName","src":"2849:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2844:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2844:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2835:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":1424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2827:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2827:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1434,"nodeType":"ExpressionStatement","src":"2827:78:11"},{"expression":{"arguments":[{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2930:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2922:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1435,"name":"uint224","nodeType":"ElementaryTypeName","src":"2922:7:11","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1423,"id":1439,"nodeType":"Return","src":"2915:21:11"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"2428:318:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2760:9:11","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"value","nameLocation":"2778:5:11","nodeType":"VariableDeclaration","scope":1441,"src":"2770:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2770:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2769:15:11"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1441,"src":"2808:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1421,"name":"uint224","nodeType":"ElementaryTypeName","src":"2808:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2807:9:11"},"scope":3189,"src":"2751:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1465,"nodeType":"Block","src":"3338:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"3356:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3370:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1452,"name":"uint216","nodeType":"ElementaryTypeName","src":"3370:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":1451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3365:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3365:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3365:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3356:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3384:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":1449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3348:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3348:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"ExpressionStatement","src":"3348:78:11"},{"expression":{"arguments":[{"id":1462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"3451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3443:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1460,"name":"uint216","nodeType":"ElementaryTypeName","src":"3443:7:11","typeDescriptions":{}}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":1448,"id":1464,"nodeType":"Return","src":"3436:21:11"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"2949:318:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":1466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3281:9:11","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"value","nameLocation":"3299:5:11","nodeType":"VariableDeclaration","scope":1466,"src":"3291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3290:15:11"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"3329:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":1446,"name":"uint216","nodeType":"ElementaryTypeName","src":"3329:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3328:9:11"},"scope":3189,"src":"3272:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"3859:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3877:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3891:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1477,"name":"uint208","nodeType":"ElementaryTypeName","src":"3891:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3886:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3886:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3886:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3877:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3905:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":1474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3869:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3869:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1484,"nodeType":"ExpressionStatement","src":"3869:78:11"},{"expression":{"arguments":[{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3972:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3964:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1485,"name":"uint208","nodeType":"ElementaryTypeName","src":"3964:7:11","typeDescriptions":{}}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3964:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1473,"id":1489,"nodeType":"Return","src":"3957:21:11"}]},"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"3470:318:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3802:9:11","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"value","nameLocation":"3820:5:11","nodeType":"VariableDeclaration","scope":1491,"src":"3812:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3812:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3811:15:11"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"3850:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1471,"name":"uint208","nodeType":"ElementaryTypeName","src":"3850:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3849:9:11"},"scope":3189,"src":"3793:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1515,"nodeType":"Block","src":"4380:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4398:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4412:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1502,"name":"uint200","nodeType":"ElementaryTypeName","src":"4412:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":1501,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4407:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4407:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4407:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4398:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4426:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":1499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4390:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4390:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"ExpressionStatement","src":"4390:78:11"},{"expression":{"arguments":[{"id":1512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4493:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4485:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1510,"name":"uint200","nodeType":"ElementaryTypeName","src":"4485:7:11","typeDescriptions":{}}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4485:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":1498,"id":1514,"nodeType":"Return","src":"4478:21:11"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"3991:318:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4323:9:11","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"value","nameLocation":"4341:5:11","nodeType":"VariableDeclaration","scope":1516,"src":"4333:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4333:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4332:15:11"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"4371:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":1496,"name":"uint200","nodeType":"ElementaryTypeName","src":"4371:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4370:9:11"},"scope":3189,"src":"4314:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1540,"nodeType":"Block","src":"4901:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"4919:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4933:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1527,"name":"uint192","nodeType":"ElementaryTypeName","src":"4933:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":1526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4928:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4928:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4928:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"4919:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4947:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":1524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4911:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4911:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"ExpressionStatement","src":"4911:78:11"},{"expression":{"arguments":[{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"5014:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5006:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1535,"name":"uint192","nodeType":"ElementaryTypeName","src":"5006:7:11","typeDescriptions":{}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5006:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":1523,"id":1539,"nodeType":"Return","src":"4999:21:11"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"4512:318:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4844:9:11","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"value","nameLocation":"4862:5:11","nodeType":"VariableDeclaration","scope":1541,"src":"4854:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4854:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:15:11"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"4892:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1521,"name":"uint192","nodeType":"ElementaryTypeName","src":"4892:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4891:9:11"},"scope":3189,"src":"4835:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1565,"nodeType":"Block","src":"5422:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5440:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1552,"name":"uint184","nodeType":"ElementaryTypeName","src":"5454:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":1551,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5449:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5449:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5440:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5468:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":1549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5432:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5432:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1559,"nodeType":"ExpressionStatement","src":"5432:78:11"},{"expression":{"arguments":[{"id":1562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5535:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5527:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1560,"name":"uint184","nodeType":"ElementaryTypeName","src":"5527:7:11","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5527:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":1548,"id":1564,"nodeType":"Return","src":"5520:21:11"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"5033:318:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":1566,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5365:9:11","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"value","nameLocation":"5383:5:11","nodeType":"VariableDeclaration","scope":1566,"src":"5375:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5374:15:11"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1566,"src":"5413:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":1546,"name":"uint184","nodeType":"ElementaryTypeName","src":"5413:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5412:9:11"},"scope":3189,"src":"5356:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"5943:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"5961:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5975:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1577,"name":"uint176","nodeType":"ElementaryTypeName","src":"5975:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":1576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5970:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5970:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"5961:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":1574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5953:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"5953:78:11"},{"expression":{"arguments":[{"id":1587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"6056:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6048:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1585,"name":"uint176","nodeType":"ElementaryTypeName","src":"6048:7:11","typeDescriptions":{}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6048:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":1573,"id":1589,"nodeType":"Return","src":"6041:21:11"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"5554:318:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5886:9:11","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"value","nameLocation":"5904:5:11","nodeType":"VariableDeclaration","scope":1591,"src":"5896:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5895:15:11"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"5934:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":1571,"name":"uint176","nodeType":"ElementaryTypeName","src":"5934:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"5933:9:11"},"scope":3189,"src":"5877:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1615,"nodeType":"Block","src":"6464:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"6482:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6496:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1602,"name":"uint168","nodeType":"ElementaryTypeName","src":"6496:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":1601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6491:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6491:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6491:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6482:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6510:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":1599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6474:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6474:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"6474:78:11"},{"expression":{"arguments":[{"id":1612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"6577:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6569:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1610,"name":"uint168","nodeType":"ElementaryTypeName","src":"6569:7:11","typeDescriptions":{}}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6569:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":1598,"id":1614,"nodeType":"Return","src":"6562:21:11"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"6075:318:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6407:9:11","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"value","nameLocation":"6425:5:11","nodeType":"VariableDeclaration","scope":1616,"src":"6417:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"6417:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6416:15:11"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"6455:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":1596,"name":"uint168","nodeType":"ElementaryTypeName","src":"6455:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6454:9:11"},"scope":3189,"src":"6398:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1640,"nodeType":"Block","src":"6985:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"7003:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7017:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1627,"name":"uint160","nodeType":"ElementaryTypeName","src":"7017:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":1626,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7012:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7012:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7012:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7003:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7031:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":1624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6995:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"ExpressionStatement","src":"6995:78:11"},{"expression":{"arguments":[{"id":1637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"7098:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7090:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1635,"name":"uint160","nodeType":"ElementaryTypeName","src":"7090:7:11","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7090:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":1623,"id":1639,"nodeType":"Return","src":"7083:21:11"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"6596:318:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"6928:9:11","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"value","nameLocation":"6946:5:11","nodeType":"VariableDeclaration","scope":1641,"src":"6938:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6937:15:11"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"6976:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1621,"name":"uint160","nodeType":"ElementaryTypeName","src":"6976:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6975:9:11"},"scope":3189,"src":"6919:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1665,"nodeType":"Block","src":"7506:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"7524:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7538:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1652,"name":"uint152","nodeType":"ElementaryTypeName","src":"7538:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":1651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7533:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7533:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7533:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7524:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7552:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":1649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7516:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7516:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"7516:78:11"},{"expression":{"arguments":[{"id":1662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"7619:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7611:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1660,"name":"uint152","nodeType":"ElementaryTypeName","src":"7611:7:11","typeDescriptions":{}}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7611:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":1648,"id":1664,"nodeType":"Return","src":"7604:21:11"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"7117:318:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7449:9:11","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"value","nameLocation":"7467:5:11","nodeType":"VariableDeclaration","scope":1666,"src":"7459:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7458:15:11"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"7497:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":1646,"name":"uint152","nodeType":"ElementaryTypeName","src":"7497:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7496:9:11"},"scope":3189,"src":"7440:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"8027:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"8045:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8059:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1677,"name":"uint144","nodeType":"ElementaryTypeName","src":"8059:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":1676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8054:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8054:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8054:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8045:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8073:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":1674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8037:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8037:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"8037:78:11"},{"expression":{"arguments":[{"id":1687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"8140:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8132:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1685,"name":"uint144","nodeType":"ElementaryTypeName","src":"8132:7:11","typeDescriptions":{}}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":1673,"id":1689,"nodeType":"Return","src":"8125:21:11"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"7638:318:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"7970:9:11","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"value","nameLocation":"7988:5:11","nodeType":"VariableDeclaration","scope":1691,"src":"7980:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7980:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:15:11"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"8018:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":1671,"name":"uint144","nodeType":"ElementaryTypeName","src":"8018:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8017:9:11"},"scope":3189,"src":"7961:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1715,"nodeType":"Block","src":"8548:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"8566:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8580:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1702,"name":"uint136","nodeType":"ElementaryTypeName","src":"8580:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":1701,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8575:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8575:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8575:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8566:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8594:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":1699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8558:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8558:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"8558:78:11"},{"expression":{"arguments":[{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"8661:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8653:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1710,"name":"uint136","nodeType":"ElementaryTypeName","src":"8653:7:11","typeDescriptions":{}}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8653:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":1698,"id":1714,"nodeType":"Return","src":"8646:21:11"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"8159:318:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8491:9:11","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"value","nameLocation":"8509:5:11","nodeType":"VariableDeclaration","scope":1716,"src":"8501:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"8501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8500:15:11"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"8539:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":1696,"name":"uint136","nodeType":"ElementaryTypeName","src":"8539:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8538:9:11"},"scope":3189,"src":"8482:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"9069:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"9087:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9101:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1727,"name":"uint128","nodeType":"ElementaryTypeName","src":"9101:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":1726,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9096:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9096:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9096:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9087:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9115:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":1724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9079:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"ExpressionStatement","src":"9079:78:11"},{"expression":{"arguments":[{"id":1737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"9182:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1735,"name":"uint128","nodeType":"ElementaryTypeName","src":"9174:7:11","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9174:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1723,"id":1739,"nodeType":"Return","src":"9167:21:11"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"8680:318:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9012:9:11","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"value","nameLocation":"9030:5:11","nodeType":"VariableDeclaration","scope":1741,"src":"9022:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"9022:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9021:15:11"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"9060:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1721,"name":"uint128","nodeType":"ElementaryTypeName","src":"9060:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9059:9:11"},"scope":3189,"src":"9003:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"9590:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9608:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9622:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1752,"name":"uint120","nodeType":"ElementaryTypeName","src":"9622:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":1751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9617:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9617:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9617:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9608:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9636:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":1749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9600:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9600:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"9600:78:11"},{"expression":{"arguments":[{"id":1762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9703:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9695:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1760,"name":"uint120","nodeType":"ElementaryTypeName","src":"9695:7:11","typeDescriptions":{}}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9695:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":1748,"id":1764,"nodeType":"Return","src":"9688:21:11"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"9201:318:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9533:9:11","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"value","nameLocation":"9551:5:11","nodeType":"VariableDeclaration","scope":1766,"src":"9543:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9542:15:11"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"9581:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":1746,"name":"uint120","nodeType":"ElementaryTypeName","src":"9581:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9580:9:11"},"scope":3189,"src":"9524:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1790,"nodeType":"Block","src":"10111:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"10129:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10143:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1777,"name":"uint112","nodeType":"ElementaryTypeName","src":"10143:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":1776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10138:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10138:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10138:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10129:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10157:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":1774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10121:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10121:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"ExpressionStatement","src":"10121:78:11"},{"expression":{"arguments":[{"id":1787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"10224:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10216:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1785,"name":"uint112","nodeType":"ElementaryTypeName","src":"10216:7:11","typeDescriptions":{}}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10216:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":1773,"id":1789,"nodeType":"Return","src":"10209:21:11"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"9722:318:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":1791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10054:9:11","nodeType":"FunctionDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"value","nameLocation":"10072:5:11","nodeType":"VariableDeclaration","scope":1791,"src":"10064:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"10064:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10063:15:11"},"returnParameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1791,"src":"10102:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1771,"name":"uint112","nodeType":"ElementaryTypeName","src":"10102:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10101:9:11"},"scope":3189,"src":"10045:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"10632:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"10650:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1802,"name":"uint104","nodeType":"ElementaryTypeName","src":"10664:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":1801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10659:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10659:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10650:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10678:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":1799,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10642:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10642:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"10642:78:11"},{"expression":{"arguments":[{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"10745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10737:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1810,"name":"uint104","nodeType":"ElementaryTypeName","src":"10737:7:11","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10737:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":1798,"id":1814,"nodeType":"Return","src":"10730:21:11"}]},"documentation":{"id":1792,"nodeType":"StructuredDocumentation","src":"10243:318:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10575:9:11","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"value","nameLocation":"10593:5:11","nodeType":"VariableDeclaration","scope":1816,"src":"10585:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10584:15:11"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"10623:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":1796,"name":"uint104","nodeType":"ElementaryTypeName","src":"10623:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10622:9:11"},"scope":3189,"src":"10566:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1840,"nodeType":"Block","src":"11147:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"11165:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11179:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1827,"name":"uint96","nodeType":"ElementaryTypeName","src":"11179:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1826,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11174:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11174:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11174:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11165:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11192:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":1824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11157:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11157:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1834,"nodeType":"ExpressionStatement","src":"11157:76:11"},{"expression":{"arguments":[{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"11257:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11250:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1835,"name":"uint96","nodeType":"ElementaryTypeName","src":"11250:6:11","typeDescriptions":{}}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11250:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1823,"id":1839,"nodeType":"Return","src":"11243:20:11"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"10764:314:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11092:8:11","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"value","nameLocation":"11109:5:11","nodeType":"VariableDeclaration","scope":1841,"src":"11101:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"11101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11100:15:11"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"11139:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1821,"name":"uint96","nodeType":"ElementaryTypeName","src":"11139:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11138:8:11"},"scope":3189,"src":"11083:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1865,"nodeType":"Block","src":"11659:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"11677:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11691:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1852,"name":"uint88","nodeType":"ElementaryTypeName","src":"11691:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":1851,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11686:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11686:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11686:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11677:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11704:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":1849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11669:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11669:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1859,"nodeType":"ExpressionStatement","src":"11669:76:11"},{"expression":{"arguments":[{"id":1862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"11769:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11762:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1860,"name":"uint88","nodeType":"ElementaryTypeName","src":"11762:6:11","typeDescriptions":{}}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11762:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":1848,"id":1864,"nodeType":"Return","src":"11755:20:11"}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"11276:314:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":1866,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11604:8:11","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"value","nameLocation":"11621:5:11","nodeType":"VariableDeclaration","scope":1866,"src":"11613:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"11613:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11612:15:11"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1866,"src":"11651:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":1846,"name":"uint88","nodeType":"ElementaryTypeName","src":"11651:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11650:8:11"},"scope":3189,"src":"11595:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"12171:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"12189:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12203:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1877,"name":"uint80","nodeType":"ElementaryTypeName","src":"12203:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":1876,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12198:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12198:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12198:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12189:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12216:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":1874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12181:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12181:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1884,"nodeType":"ExpressionStatement","src":"12181:76:11"},{"expression":{"arguments":[{"id":1887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"12281:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12274:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1885,"name":"uint80","nodeType":"ElementaryTypeName","src":"12274:6:11","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12274:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":1873,"id":1889,"nodeType":"Return","src":"12267:20:11"}]},"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"11788:314:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12116:8:11","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"value","nameLocation":"12133:5:11","nodeType":"VariableDeclaration","scope":1891,"src":"12125:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12124:15:11"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"12163:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1871,"name":"uint80","nodeType":"ElementaryTypeName","src":"12163:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12162:8:11"},"scope":3189,"src":"12107:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1915,"nodeType":"Block","src":"12683:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"12701:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12715:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1902,"name":"uint72","nodeType":"ElementaryTypeName","src":"12715:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":1901,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12710:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12710:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12710:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12701:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12728:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":1899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12693:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12693:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1909,"nodeType":"ExpressionStatement","src":"12693:76:11"},{"expression":{"arguments":[{"id":1912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"12793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12786:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1910,"name":"uint72","nodeType":"ElementaryTypeName","src":"12786:6:11","typeDescriptions":{}}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12786:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":1898,"id":1914,"nodeType":"Return","src":"12779:20:11"}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"12300:314:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":1916,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12628:8:11","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"value","nameLocation":"12645:5:11","nodeType":"VariableDeclaration","scope":1916,"src":"12637:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"12637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12636:15:11"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"12675:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":1896,"name":"uint72","nodeType":"ElementaryTypeName","src":"12675:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12674:8:11"},"scope":3189,"src":"12619:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1940,"nodeType":"Block","src":"13195:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"13213:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13227:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1927,"name":"uint64","nodeType":"ElementaryTypeName","src":"13227:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1926,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13222:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13222:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13222:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13213:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13240:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":1924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13205:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13205:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"13205:76:11"},{"expression":{"arguments":[{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"13305:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13298:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1935,"name":"uint64","nodeType":"ElementaryTypeName","src":"13298:6:11","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13298:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1923,"id":1939,"nodeType":"Return","src":"13291:20:11"}]},"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"12812:314:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":1941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13140:8:11","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"value","nameLocation":"13157:5:11","nodeType":"VariableDeclaration","scope":1941,"src":"13149:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"13149:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13148:15:11"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1941,"src":"13187:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1921,"name":"uint64","nodeType":"ElementaryTypeName","src":"13187:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13186:8:11"},"scope":3189,"src":"13131:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1965,"nodeType":"Block","src":"13707:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"13725:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13739:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1952,"name":"uint56","nodeType":"ElementaryTypeName","src":"13739:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":1951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13734:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13734:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13734:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13725:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13752:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":1949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13717:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13717:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"ExpressionStatement","src":"13717:76:11"},{"expression":{"arguments":[{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"13817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13810:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1960,"name":"uint56","nodeType":"ElementaryTypeName","src":"13810:6:11","typeDescriptions":{}}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13810:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":1948,"id":1964,"nodeType":"Return","src":"13803:20:11"}]},"documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"13324:314:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13652:8:11","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"value","nameLocation":"13669:5:11","nodeType":"VariableDeclaration","scope":1966,"src":"13661:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"13661:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13660:15:11"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1966,"src":"13699:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":1946,"name":"uint56","nodeType":"ElementaryTypeName","src":"13699:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13698:8:11"},"scope":3189,"src":"13643:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1990,"nodeType":"Block","src":"14219:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"14237:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14251:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1977,"name":"uint48","nodeType":"ElementaryTypeName","src":"14251:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":1976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14246:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14246:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14246:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14237:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14264:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":1974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14229:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14229:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1984,"nodeType":"ExpressionStatement","src":"14229:76:11"},{"expression":{"arguments":[{"id":1987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"14329:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14322:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1985,"name":"uint48","nodeType":"ElementaryTypeName","src":"14322:6:11","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14322:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1973,"id":1989,"nodeType":"Return","src":"14315:20:11"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"13836:314:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14164:8:11","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"value","nameLocation":"14181:5:11","nodeType":"VariableDeclaration","scope":1991,"src":"14173:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"14173:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14172:15:11"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1991,"src":"14211:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1971,"name":"uint48","nodeType":"ElementaryTypeName","src":"14211:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14210:8:11"},"scope":3189,"src":"14155:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2015,"nodeType":"Block","src":"14731:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"14749:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14763:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2002,"name":"uint40","nodeType":"ElementaryTypeName","src":"14763:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":2001,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14758:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14758:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14758:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14749:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14776:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":1999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14741:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14741:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"14741:76:11"},{"expression":{"arguments":[{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"14841:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14834:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2010,"name":"uint40","nodeType":"ElementaryTypeName","src":"14834:6:11","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14834:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":1998,"id":2014,"nodeType":"Return","src":"14827:20:11"}]},"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"14348:314:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":2016,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14676:8:11","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"value","nameLocation":"14693:5:11","nodeType":"VariableDeclaration","scope":2016,"src":"14685:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"14685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14684:15:11"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2016,"src":"14723:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1996,"name":"uint40","nodeType":"ElementaryTypeName","src":"14723:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14722:8:11"},"scope":3189,"src":"14667:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"15243:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"15261:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15275:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2027,"name":"uint32","nodeType":"ElementaryTypeName","src":"15275:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":2026,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15270:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15270:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15270:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15261:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15288:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":2024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15253:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15253:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2034,"nodeType":"ExpressionStatement","src":"15253:76:11"},{"expression":{"arguments":[{"id":2037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"15353:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15346:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2035,"name":"uint32","nodeType":"ElementaryTypeName","src":"15346:6:11","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15346:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2023,"id":2039,"nodeType":"Return","src":"15339:20:11"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"14860:314:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15188:8:11","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"value","nameLocation":"15205:5:11","nodeType":"VariableDeclaration","scope":2041,"src":"15197:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"15197:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15196:15:11"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"15235:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2021,"name":"uint32","nodeType":"ElementaryTypeName","src":"15235:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15234:8:11"},"scope":3189,"src":"15179:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2065,"nodeType":"Block","src":"15755:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"15773:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15787:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2052,"name":"uint24","nodeType":"ElementaryTypeName","src":"15787:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":2051,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15782:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15782:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15782:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15773:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15800:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":2049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15765:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15765:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2059,"nodeType":"ExpressionStatement","src":"15765:76:11"},{"expression":{"arguments":[{"id":2062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"15865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15858:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2060,"name":"uint24","nodeType":"ElementaryTypeName","src":"15858:6:11","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15858:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":2048,"id":2064,"nodeType":"Return","src":"15851:20:11"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"15372:314:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":2066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15700:8:11","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"value","nameLocation":"15717:5:11","nodeType":"VariableDeclaration","scope":2066,"src":"15709:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"15709:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15708:15:11"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2066,"src":"15747:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2046,"name":"uint24","nodeType":"ElementaryTypeName","src":"15747:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15746:8:11"},"scope":3189,"src":"15691:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"16267:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"16285:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16299:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2077,"name":"uint16","nodeType":"ElementaryTypeName","src":"16299:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":2076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16294:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16294:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16294:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16285:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16312:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":2074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16277:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16277:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"16277:76:11"},{"expression":{"arguments":[{"id":2087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"16377:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16370:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2085,"name":"uint16","nodeType":"ElementaryTypeName","src":"16370:6:11","typeDescriptions":{}}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":2073,"id":2089,"nodeType":"Return","src":"16363:20:11"}]},"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"15884:314:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16212:8:11","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"value","nameLocation":"16229:5:11","nodeType":"VariableDeclaration","scope":2091,"src":"16221:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"16221:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16220:15:11"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"16259:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2071,"name":"uint16","nodeType":"ElementaryTypeName","src":"16259:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16258:8:11"},"scope":3189,"src":"16203:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"16773:120:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"16791:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16805:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2102,"name":"uint8","nodeType":"ElementaryTypeName","src":"16805:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2101,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16800:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16800:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16800:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16791:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16817:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":2099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16783:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16783:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"ExpressionStatement","src":"16783:74:11"},{"expression":{"arguments":[{"id":2112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"16880:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16874:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2110,"name":"uint8","nodeType":"ElementaryTypeName","src":"16874:5:11","typeDescriptions":{}}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16874:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2098,"id":2114,"nodeType":"Return","src":"16867:19:11"}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"16396:310:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16720:7:11","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"value","nameLocation":"16736:5:11","nodeType":"VariableDeclaration","scope":2116,"src":"16728:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"16728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16727:15:11"},"returnParameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2116,"src":"16766:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2096,"name":"uint8","nodeType":"ElementaryTypeName","src":"16766:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16765:7:11"},"scope":3189,"src":"16711:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"17167:103:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"17185:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17194:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17185:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17197:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":2124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17177:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17177:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2130,"nodeType":"ExpressionStatement","src":"17177:55:11"},{"expression":{"arguments":[{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"17257:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"17249:7:11","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17249:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2123,"id":2135,"nodeType":"Return","src":"17242:21:11"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"16899:198:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17111:9:11","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"value","nameLocation":"17128:5:11","nodeType":"VariableDeclaration","scope":2137,"src":"17121:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2118,"name":"int256","nodeType":"ElementaryTypeName","src":"17121:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17120:14:11"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"17158:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"17158:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17157:9:11"},"scope":3189,"src":"17102:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2169,"nodeType":"Block","src":"17694:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"17712:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17726:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2148,"name":"int248","nodeType":"ElementaryTypeName","src":"17726:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":2147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17721:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17721:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"17721:16:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17712:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"17741:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17755:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2155,"name":"int248","nodeType":"ElementaryTypeName","src":"17755:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"}],"id":2154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17750:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17750:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int248","typeString":"type(int248)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"17750:16:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17741:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17712:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17768:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":2145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17704:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17704:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"ExpressionStatement","src":"17704:106:11"},{"expression":{"arguments":[{"id":2166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"17834:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17827:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2164,"name":"int248","nodeType":"ElementaryTypeName","src":"17827:6:11","typeDescriptions":{}}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17827:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"functionReturnParameters":2144,"id":2168,"nodeType":"Return","src":"17820:20:11"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"17276:350:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17640:8:11","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"value","nameLocation":"17656:5:11","nodeType":"VariableDeclaration","scope":2170,"src":"17649:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2139,"name":"int256","nodeType":"ElementaryTypeName","src":"17649:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17648:14:11"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2170,"src":"17686:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":2142,"name":"int248","nodeType":"ElementaryTypeName","src":"17686:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17685:8:11"},"scope":3189,"src":"17631:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"18271:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"18289:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18303:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2181,"name":"int240","nodeType":"ElementaryTypeName","src":"18303:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":2180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18298:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18298:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18298:16:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18289:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"18318:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18332:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2188,"name":"int240","nodeType":"ElementaryTypeName","src":"18332:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"}],"id":2187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18327:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18327:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int240","typeString":"type(int240)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18327:16:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18289:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18345:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":2178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18281:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18281:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"18281:106:11"},{"expression":{"arguments":[{"id":2199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"18411:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18404:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2197,"name":"int240","nodeType":"ElementaryTypeName","src":"18404:6:11","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18404:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"functionReturnParameters":2177,"id":2201,"nodeType":"Return","src":"18397:20:11"}]},"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"17853:350:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18217:8:11","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"value","nameLocation":"18233:5:11","nodeType":"VariableDeclaration","scope":2203,"src":"18226:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2172,"name":"int256","nodeType":"ElementaryTypeName","src":"18226:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18225:14:11"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2203,"src":"18263:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2175,"name":"int240","nodeType":"ElementaryTypeName","src":"18263:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18262:8:11"},"scope":3189,"src":"18208:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"18848:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"18866:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18880:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2214,"name":"int232","nodeType":"ElementaryTypeName","src":"18880:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":2213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18875:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18875:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"18875:16:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18866:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"18895:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18909:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2221,"name":"int232","nodeType":"ElementaryTypeName","src":"18909:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"}],"id":2220,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"18904:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18904:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int232","typeString":"type(int232)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"18904:16:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18895:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18866:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18922:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":2211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18858:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18858:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"ExpressionStatement","src":"18858:106:11"},{"expression":{"arguments":[{"id":2232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"18988:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18981:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2230,"name":"int232","nodeType":"ElementaryTypeName","src":"18981:6:11","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18981:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"functionReturnParameters":2210,"id":2234,"nodeType":"Return","src":"18974:20:11"}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"18430:350:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18794:8:11","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"value","nameLocation":"18810:5:11","nodeType":"VariableDeclaration","scope":2236,"src":"18803:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2205,"name":"int256","nodeType":"ElementaryTypeName","src":"18803:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18802:14:11"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"18840:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2208,"name":"int232","nodeType":"ElementaryTypeName","src":"18840:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18839:8:11"},"scope":3189,"src":"18785:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2268,"nodeType":"Block","src":"19425:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"19443:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19457:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2247,"name":"int224","nodeType":"ElementaryTypeName","src":"19457:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":2246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19452:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19452:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"19452:16:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19443:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"19472:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19486:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2254,"name":"int224","nodeType":"ElementaryTypeName","src":"19486:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"}],"id":2253,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"19481:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19481:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int224","typeString":"type(int224)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"19481:16:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19472:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19443:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19499:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":2244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19435:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19435:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"19435:106:11"},{"expression":{"arguments":[{"id":2265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"19565:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19558:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2263,"name":"int224","nodeType":"ElementaryTypeName","src":"19558:6:11","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19558:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"functionReturnParameters":2243,"id":2267,"nodeType":"Return","src":"19551:20:11"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"19007:350:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19371:8:11","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"value","nameLocation":"19387:5:11","nodeType":"VariableDeclaration","scope":2269,"src":"19380:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2238,"name":"int256","nodeType":"ElementaryTypeName","src":"19380:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19379:14:11"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"19417:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2241,"name":"int224","nodeType":"ElementaryTypeName","src":"19417:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19416:8:11"},"scope":3189,"src":"19362:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2301,"nodeType":"Block","src":"20002:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"20020:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20034:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2280,"name":"int216","nodeType":"ElementaryTypeName","src":"20034:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":2279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20029:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20029:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20029:16:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20020:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"20049:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20063:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2287,"name":"int216","nodeType":"ElementaryTypeName","src":"20063:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"}],"id":2286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20058:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20058:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int216","typeString":"type(int216)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20058:16:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20049:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20020:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20076:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":2277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20012:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20012:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2295,"nodeType":"ExpressionStatement","src":"20012:106:11"},{"expression":{"arguments":[{"id":2298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"20142:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20135:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2296,"name":"int216","nodeType":"ElementaryTypeName","src":"20135:6:11","typeDescriptions":{}}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20135:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"functionReturnParameters":2276,"id":2300,"nodeType":"Return","src":"20128:20:11"}]},"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"19584:350:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19948:8:11","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"value","nameLocation":"19964:5:11","nodeType":"VariableDeclaration","scope":2302,"src":"19957:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2271,"name":"int256","nodeType":"ElementaryTypeName","src":"19957:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19956:14:11"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"19994:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":2274,"name":"int216","nodeType":"ElementaryTypeName","src":"19994:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19993:8:11"},"scope":3189,"src":"19939:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"20579:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"20597:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20611:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2313,"name":"int208","nodeType":"ElementaryTypeName","src":"20611:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":2312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20606:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20606:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"20606:16:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20597:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"20626:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20640:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2320,"name":"int208","nodeType":"ElementaryTypeName","src":"20640:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"}],"id":2319,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20635:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20635:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int208","typeString":"type(int208)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"20635:16:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20626:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20597:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20653:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":2310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20589:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20589:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"20589:106:11"},{"expression":{"arguments":[{"id":2331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"20719:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20712:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2329,"name":"int208","nodeType":"ElementaryTypeName","src":"20712:6:11","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20712:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"functionReturnParameters":2309,"id":2333,"nodeType":"Return","src":"20705:20:11"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"20161:350:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20525:8:11","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"value","nameLocation":"20541:5:11","nodeType":"VariableDeclaration","scope":2335,"src":"20534:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2304,"name":"int256","nodeType":"ElementaryTypeName","src":"20534:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20533:14:11"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"20571:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":2307,"name":"int208","nodeType":"ElementaryTypeName","src":"20571:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20570:8:11"},"scope":3189,"src":"20516:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"21156:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"21174:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21188:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2346,"name":"int200","nodeType":"ElementaryTypeName","src":"21188:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":2345,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21183:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21183:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21183:16:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21174:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"21203:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21217:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2353,"name":"int200","nodeType":"ElementaryTypeName","src":"21217:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"}],"id":2352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21212:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21212:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int200","typeString":"type(int200)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21212:16:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21203:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21174:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21230:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":2343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21166:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21166:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"ExpressionStatement","src":"21166:106:11"},{"expression":{"arguments":[{"id":2364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"21296:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21289:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2362,"name":"int200","nodeType":"ElementaryTypeName","src":"21289:6:11","typeDescriptions":{}}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21289:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"functionReturnParameters":2342,"id":2366,"nodeType":"Return","src":"21282:20:11"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"20738:350:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21102:8:11","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"value","nameLocation":"21118:5:11","nodeType":"VariableDeclaration","scope":2368,"src":"21111:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2337,"name":"int256","nodeType":"ElementaryTypeName","src":"21111:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21110:14:11"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2368,"src":"21148:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":2340,"name":"int200","nodeType":"ElementaryTypeName","src":"21148:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21147:8:11"},"scope":3189,"src":"21093:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2400,"nodeType":"Block","src":"21733:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"21751:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21765:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2379,"name":"int192","nodeType":"ElementaryTypeName","src":"21765:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":2378,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21760:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21760:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"21760:16:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21751:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"21780:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21794:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2386,"name":"int192","nodeType":"ElementaryTypeName","src":"21794:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"}],"id":2385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"21789:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21789:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int192","typeString":"type(int192)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"21789:16:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21780:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21751:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21807:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":2376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21743:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21743:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2394,"nodeType":"ExpressionStatement","src":"21743:106:11"},{"expression":{"arguments":[{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"21873:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21866:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2395,"name":"int192","nodeType":"ElementaryTypeName","src":"21866:6:11","typeDescriptions":{}}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21866:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"functionReturnParameters":2375,"id":2399,"nodeType":"Return","src":"21859:20:11"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"21315:350:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":2401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21679:8:11","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"value","nameLocation":"21695:5:11","nodeType":"VariableDeclaration","scope":2401,"src":"21688:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2370,"name":"int256","nodeType":"ElementaryTypeName","src":"21688:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21687:14:11"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2401,"src":"21725:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":2373,"name":"int192","nodeType":"ElementaryTypeName","src":"21725:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21724:8:11"},"scope":3189,"src":"21670:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"22310:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"22328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22342:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2412,"name":"int184","nodeType":"ElementaryTypeName","src":"22342:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":2411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22337:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22337:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22337:16:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22328:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"22357:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22371:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2419,"name":"int184","nodeType":"ElementaryTypeName","src":"22371:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"}],"id":2418,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22366:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22366:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int184","typeString":"type(int184)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22366:16:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22357:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22328:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22384:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":2409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22320:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22320:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"ExpressionStatement","src":"22320:106:11"},{"expression":{"arguments":[{"id":2430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"22450:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22443:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2428,"name":"int184","nodeType":"ElementaryTypeName","src":"22443:6:11","typeDescriptions":{}}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22443:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"functionReturnParameters":2408,"id":2432,"nodeType":"Return","src":"22436:20:11"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"21892:350:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22256:8:11","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"value","nameLocation":"22272:5:11","nodeType":"VariableDeclaration","scope":2434,"src":"22265:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2403,"name":"int256","nodeType":"ElementaryTypeName","src":"22265:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22264:14:11"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"22302:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":2406,"name":"int184","nodeType":"ElementaryTypeName","src":"22302:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22301:8:11"},"scope":3189,"src":"22247:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"22887:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"22905:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22919:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2445,"name":"int176","nodeType":"ElementaryTypeName","src":"22919:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":2444,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22914:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22914:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"22914:16:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22905:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"22934:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22948:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2452,"name":"int176","nodeType":"ElementaryTypeName","src":"22948:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"}],"id":2451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"22943:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22943:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int176","typeString":"type(int176)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"22943:16:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22934:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22905:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22961:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":2442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22897:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22897:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2460,"nodeType":"ExpressionStatement","src":"22897:106:11"},{"expression":{"arguments":[{"id":2463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"23027:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23020:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2461,"name":"int176","nodeType":"ElementaryTypeName","src":"23020:6:11","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23020:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"functionReturnParameters":2441,"id":2465,"nodeType":"Return","src":"23013:20:11"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"22469:350:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22833:8:11","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"value","nameLocation":"22849:5:11","nodeType":"VariableDeclaration","scope":2467,"src":"22842:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2436,"name":"int256","nodeType":"ElementaryTypeName","src":"22842:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22841:14:11"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"22879:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":2439,"name":"int176","nodeType":"ElementaryTypeName","src":"22879:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22878:8:11"},"scope":3189,"src":"22824:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"23464:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"23482:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23496:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2478,"name":"int168","nodeType":"ElementaryTypeName","src":"23496:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":2477,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23491:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23491:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"23491:16:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23482:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"23511:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23525:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2485,"name":"int168","nodeType":"ElementaryTypeName","src":"23525:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"}],"id":2484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23520:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23520:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int168","typeString":"type(int168)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"23520:16:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23511:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23482:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23538:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":2475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23474:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23474:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"ExpressionStatement","src":"23474:106:11"},{"expression":{"arguments":[{"id":2496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"23604:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23597:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2494,"name":"int168","nodeType":"ElementaryTypeName","src":"23597:6:11","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23597:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"functionReturnParameters":2474,"id":2498,"nodeType":"Return","src":"23590:20:11"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"23046:350:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23410:8:11","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"23426:5:11","nodeType":"VariableDeclaration","scope":2500,"src":"23419:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2469,"name":"int256","nodeType":"ElementaryTypeName","src":"23419:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23418:14:11"},"returnParameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"23456:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":2472,"name":"int168","nodeType":"ElementaryTypeName","src":"23456:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23455:8:11"},"scope":3189,"src":"23401:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2532,"nodeType":"Block","src":"24041:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"24059:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24073:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2511,"name":"int160","nodeType":"ElementaryTypeName","src":"24073:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":2510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24068:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24068:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24068:16:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24059:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"24088:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24102:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2518,"name":"int160","nodeType":"ElementaryTypeName","src":"24102:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"}],"id":2517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24097:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24097:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int160","typeString":"type(int160)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24097:16:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24088:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24059:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24115:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":2508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24051:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24051:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2526,"nodeType":"ExpressionStatement","src":"24051:106:11"},{"expression":{"arguments":[{"id":2529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"24181:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24174:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2527,"name":"int160","nodeType":"ElementaryTypeName","src":"24174:6:11","typeDescriptions":{}}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24174:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"functionReturnParameters":2507,"id":2531,"nodeType":"Return","src":"24167:20:11"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"23623:350:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":2533,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23987:8:11","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"value","nameLocation":"24003:5:11","nodeType":"VariableDeclaration","scope":2533,"src":"23996:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2502,"name":"int256","nodeType":"ElementaryTypeName","src":"23996:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23995:14:11"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"24033:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":2505,"name":"int160","nodeType":"ElementaryTypeName","src":"24033:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24032:8:11"},"scope":3189,"src":"23978:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2565,"nodeType":"Block","src":"24618:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"24636:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24650:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2544,"name":"int152","nodeType":"ElementaryTypeName","src":"24650:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":2543,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24645:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24645:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"24645:16:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24636:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"24665:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24679:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2551,"name":"int152","nodeType":"ElementaryTypeName","src":"24679:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"}],"id":2550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"24674:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24674:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int152","typeString":"type(int152)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"24674:16:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24665:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24636:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24692:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":2541,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24628:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24628:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2559,"nodeType":"ExpressionStatement","src":"24628:106:11"},{"expression":{"arguments":[{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"24758:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24751:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2560,"name":"int152","nodeType":"ElementaryTypeName","src":"24751:6:11","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24751:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"functionReturnParameters":2540,"id":2564,"nodeType":"Return","src":"24744:20:11"}]},"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"24200:350:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":2566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24564:8:11","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"value","nameLocation":"24580:5:11","nodeType":"VariableDeclaration","scope":2566,"src":"24573:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2535,"name":"int256","nodeType":"ElementaryTypeName","src":"24573:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24572:14:11"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2566,"src":"24610:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":2538,"name":"int152","nodeType":"ElementaryTypeName","src":"24610:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24609:8:11"},"scope":3189,"src":"24555:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2598,"nodeType":"Block","src":"25195:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"25213:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25227:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2577,"name":"int144","nodeType":"ElementaryTypeName","src":"25227:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":2576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25222:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25222:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25222:16:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25213:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"25242:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25256:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2584,"name":"int144","nodeType":"ElementaryTypeName","src":"25256:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"}],"id":2583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25251:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25251:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int144","typeString":"type(int144)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25251:16:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25242:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25213:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25269:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":2574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25205:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25205:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2592,"nodeType":"ExpressionStatement","src":"25205:106:11"},{"expression":{"arguments":[{"id":2595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"25335:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25328:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2593,"name":"int144","nodeType":"ElementaryTypeName","src":"25328:6:11","typeDescriptions":{}}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25328:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"functionReturnParameters":2573,"id":2597,"nodeType":"Return","src":"25321:20:11"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"24777:350:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25141:8:11","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"value","nameLocation":"25157:5:11","nodeType":"VariableDeclaration","scope":2599,"src":"25150:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2568,"name":"int256","nodeType":"ElementaryTypeName","src":"25150:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25149:14:11"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"25187:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":2571,"name":"int144","nodeType":"ElementaryTypeName","src":"25187:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25186:8:11"},"scope":3189,"src":"25132:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"25772:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"25790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25804:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2610,"name":"int136","nodeType":"ElementaryTypeName","src":"25804:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":2609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25799:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25799:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"25799:16:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25790:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"25819:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25833:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2617,"name":"int136","nodeType":"ElementaryTypeName","src":"25833:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"}],"id":2616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"25828:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25828:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int136","typeString":"type(int136)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"25828:16:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25819:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25790:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25846:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":2607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25782:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25782:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2625,"nodeType":"ExpressionStatement","src":"25782:106:11"},{"expression":{"arguments":[{"id":2628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"25912:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25905:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2626,"name":"int136","nodeType":"ElementaryTypeName","src":"25905:6:11","typeDescriptions":{}}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25905:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"functionReturnParameters":2606,"id":2630,"nodeType":"Return","src":"25898:20:11"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"25354:350:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25718:8:11","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"value","nameLocation":"25734:5:11","nodeType":"VariableDeclaration","scope":2632,"src":"25727:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2601,"name":"int256","nodeType":"ElementaryTypeName","src":"25727:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25726:14:11"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"25764:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":2604,"name":"int136","nodeType":"ElementaryTypeName","src":"25764:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25763:8:11"},"scope":3189,"src":"25709:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"26349:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"26367:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26381:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2643,"name":"int128","nodeType":"ElementaryTypeName","src":"26381:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2642,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26376:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26376:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26376:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26367:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"26396:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26410:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2650,"name":"int128","nodeType":"ElementaryTypeName","src":"26410:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2649,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26405:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26405:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26405:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26396:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26367:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26423:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":2640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26359:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26359:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"26359:106:11"},{"expression":{"arguments":[{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"26489:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26482:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2659,"name":"int128","nodeType":"ElementaryTypeName","src":"26482:6:11","typeDescriptions":{}}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26482:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":2639,"id":2663,"nodeType":"Return","src":"26475:20:11"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"25931:350:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26295:8:11","nodeType":"FunctionDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"value","nameLocation":"26311:5:11","nodeType":"VariableDeclaration","scope":2665,"src":"26304:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2634,"name":"int256","nodeType":"ElementaryTypeName","src":"26304:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26303:14:11"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"26341:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2637,"name":"int128","nodeType":"ElementaryTypeName","src":"26341:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26340:8:11"},"scope":3189,"src":"26286:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2697,"nodeType":"Block","src":"26926:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"26944:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26958:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2676,"name":"int120","nodeType":"ElementaryTypeName","src":"26958:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":2675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26953:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26953:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"26953:16:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26944:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"26973:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26987:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2683,"name":"int120","nodeType":"ElementaryTypeName","src":"26987:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"}],"id":2682,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"26982:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26982:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int120","typeString":"type(int120)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"26982:16:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26973:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26944:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27000:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":2673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26936:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26936:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2691,"nodeType":"ExpressionStatement","src":"26936:106:11"},{"expression":{"arguments":[{"id":2694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"27066:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27059:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2692,"name":"int120","nodeType":"ElementaryTypeName","src":"27059:6:11","typeDescriptions":{}}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27059:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"functionReturnParameters":2672,"id":2696,"nodeType":"Return","src":"27052:20:11"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"26508:350:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":2698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26872:8:11","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"value","nameLocation":"26888:5:11","nodeType":"VariableDeclaration","scope":2698,"src":"26881:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2667,"name":"int256","nodeType":"ElementaryTypeName","src":"26881:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26880:14:11"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"26918:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":2670,"name":"int120","nodeType":"ElementaryTypeName","src":"26918:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26917:8:11"},"scope":3189,"src":"26863:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2730,"nodeType":"Block","src":"27503:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"27521:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27535:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2709,"name":"int112","nodeType":"ElementaryTypeName","src":"27535:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":2708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27530:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27530:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"27530:16:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27521:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"27550:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27564:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2716,"name":"int112","nodeType":"ElementaryTypeName","src":"27564:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"}],"id":2715,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"27559:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27559:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int112","typeString":"type(int112)"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"27559:16:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27550:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27521:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27577:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":2706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27513:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27513:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2724,"nodeType":"ExpressionStatement","src":"27513:106:11"},{"expression":{"arguments":[{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"27643:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27636:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2725,"name":"int112","nodeType":"ElementaryTypeName","src":"27636:6:11","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27636:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"functionReturnParameters":2705,"id":2729,"nodeType":"Return","src":"27629:20:11"}]},"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"27085:350:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":2731,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27449:8:11","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"value","nameLocation":"27465:5:11","nodeType":"VariableDeclaration","scope":2731,"src":"27458:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2700,"name":"int256","nodeType":"ElementaryTypeName","src":"27458:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27457:14:11"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2731,"src":"27495:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":2703,"name":"int112","nodeType":"ElementaryTypeName","src":"27495:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27494:8:11"},"scope":3189,"src":"27440:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"28080:153:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"28098:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28112:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2742,"name":"int104","nodeType":"ElementaryTypeName","src":"28112:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":2741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28107:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28107:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28107:16:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28098:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"28127:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28141:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2749,"name":"int104","nodeType":"ElementaryTypeName","src":"28141:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"}],"id":2748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28136:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28136:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int104","typeString":"type(int104)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28136:16:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28127:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28098:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28154:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":2739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28090:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28090:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"ExpressionStatement","src":"28090:106:11"},{"expression":{"arguments":[{"id":2760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"28220:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28213:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2758,"name":"int104","nodeType":"ElementaryTypeName","src":"28213:6:11","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28213:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"functionReturnParameters":2738,"id":2762,"nodeType":"Return","src":"28206:20:11"}]},"documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"27662:350:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28026:8:11","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"value","nameLocation":"28042:5:11","nodeType":"VariableDeclaration","scope":2764,"src":"28035:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2733,"name":"int256","nodeType":"ElementaryTypeName","src":"28035:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28034:14:11"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"28072:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":2736,"name":"int104","nodeType":"ElementaryTypeName","src":"28072:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28071:8:11"},"scope":3189,"src":"28017:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"28650:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"28668:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28682:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2775,"name":"int96","nodeType":"ElementaryTypeName","src":"28682:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":2774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28677:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28677:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"28677:15:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28668:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"28696:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28710:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2782,"name":"int96","nodeType":"ElementaryTypeName","src":"28710:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"}],"id":2781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"28705:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28705:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int96","typeString":"type(int96)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"28705:15:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28696:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28668:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28722:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":2772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28660:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28660:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2790,"nodeType":"ExpressionStatement","src":"28660:103:11"},{"expression":{"arguments":[{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"28786:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28780:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2791,"name":"int96","nodeType":"ElementaryTypeName","src":"28780:5:11","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28780:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"functionReturnParameters":2771,"id":2795,"nodeType":"Return","src":"28773:19:11"}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"28239:345:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28598:7:11","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"value","nameLocation":"28613:5:11","nodeType":"VariableDeclaration","scope":2797,"src":"28606:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2766,"name":"int256","nodeType":"ElementaryTypeName","src":"28606:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28605:14:11"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2797,"src":"28643:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":2769,"name":"int96","nodeType":"ElementaryTypeName","src":"28643:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28642:7:11"},"scope":3189,"src":"28589:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"29216:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"29234:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29248:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2808,"name":"int88","nodeType":"ElementaryTypeName","src":"29248:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":2807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29243:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29243:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29243:15:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29234:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"29262:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29276:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2815,"name":"int88","nodeType":"ElementaryTypeName","src":"29276:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"}],"id":2814,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29271:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29271:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int88","typeString":"type(int88)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29271:15:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29262:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29234:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29288:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":2805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29226:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29226:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2823,"nodeType":"ExpressionStatement","src":"29226:103:11"},{"expression":{"arguments":[{"id":2826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"29352:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29346:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2824,"name":"int88","nodeType":"ElementaryTypeName","src":"29346:5:11","typeDescriptions":{}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29346:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"functionReturnParameters":2804,"id":2828,"nodeType":"Return","src":"29339:19:11"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"28805:345:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29164:7:11","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"value","nameLocation":"29179:5:11","nodeType":"VariableDeclaration","scope":2830,"src":"29172:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2799,"name":"int256","nodeType":"ElementaryTypeName","src":"29172:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29171:14:11"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"29209:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":2802,"name":"int88","nodeType":"ElementaryTypeName","src":"29209:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29208:7:11"},"scope":3189,"src":"29155:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2862,"nodeType":"Block","src":"29782:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"29800:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29814:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2841,"name":"int80","nodeType":"ElementaryTypeName","src":"29814:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":2840,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29809:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29809:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"29809:15:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29800:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"29828:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29842:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2848,"name":"int80","nodeType":"ElementaryTypeName","src":"29842:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"}],"id":2847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"29837:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29837:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int80","typeString":"type(int80)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"29837:15:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29828:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29800:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29854:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":2838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29792:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29792:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"ExpressionStatement","src":"29792:103:11"},{"expression":{"arguments":[{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"29918:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29912:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2857,"name":"int80","nodeType":"ElementaryTypeName","src":"29912:5:11","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29912:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"functionReturnParameters":2837,"id":2861,"nodeType":"Return","src":"29905:19:11"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"29371:345:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29730:7:11","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"value","nameLocation":"29745:5:11","nodeType":"VariableDeclaration","scope":2863,"src":"29738:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2832,"name":"int256","nodeType":"ElementaryTypeName","src":"29738:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29737:14:11"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2863,"src":"29775:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":2835,"name":"int80","nodeType":"ElementaryTypeName","src":"29775:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29774:7:11"},"scope":3189,"src":"29721:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2895,"nodeType":"Block","src":"30348:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"30366:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30380:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2874,"name":"int72","nodeType":"ElementaryTypeName","src":"30380:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":2873,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30375:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30375:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30375:15:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30366:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"30394:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30408:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2881,"name":"int72","nodeType":"ElementaryTypeName","src":"30408:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"}],"id":2880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30403:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30403:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int72","typeString":"type(int72)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30403:15:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30394:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30366:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30420:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":2871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30358:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30358:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"ExpressionStatement","src":"30358:103:11"},{"expression":{"arguments":[{"id":2892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"30484:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30478:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2890,"name":"int72","nodeType":"ElementaryTypeName","src":"30478:5:11","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30478:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"functionReturnParameters":2870,"id":2894,"nodeType":"Return","src":"30471:19:11"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"29937:345:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30296:7:11","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"value","nameLocation":"30311:5:11","nodeType":"VariableDeclaration","scope":2896,"src":"30304:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2865,"name":"int256","nodeType":"ElementaryTypeName","src":"30304:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30303:14:11"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2896,"src":"30341:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":2868,"name":"int72","nodeType":"ElementaryTypeName","src":"30341:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30340:7:11"},"scope":3189,"src":"30287:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2928,"nodeType":"Block","src":"30914:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"30932:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30946:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2907,"name":"int64","nodeType":"ElementaryTypeName","src":"30946:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":2906,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30941:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30941:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"30941:15:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30932:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"30960:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30974:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2914,"name":"int64","nodeType":"ElementaryTypeName","src":"30974:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"}],"id":2913,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"30969:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30969:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int64","typeString":"type(int64)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"30969:15:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30960:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30932:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30986:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":2904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30924:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30924:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2922,"nodeType":"ExpressionStatement","src":"30924:103:11"},{"expression":{"arguments":[{"id":2925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"31050:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31044:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2923,"name":"int64","nodeType":"ElementaryTypeName","src":"31044:5:11","typeDescriptions":{}}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31044:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":2903,"id":2927,"nodeType":"Return","src":"31037:19:11"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"30503:345:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":2929,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30862:7:11","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"value","nameLocation":"30877:5:11","nodeType":"VariableDeclaration","scope":2929,"src":"30870:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2898,"name":"int256","nodeType":"ElementaryTypeName","src":"30870:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30869:14:11"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"30907:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2901,"name":"int64","nodeType":"ElementaryTypeName","src":"30907:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30906:7:11"},"scope":3189,"src":"30853:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2961,"nodeType":"Block","src":"31480:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"31498:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31512:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2940,"name":"int56","nodeType":"ElementaryTypeName","src":"31512:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":2939,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31507:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31507:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"31507:15:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31498:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"31526:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31540:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2947,"name":"int56","nodeType":"ElementaryTypeName","src":"31540:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"}],"id":2946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"31535:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31535:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int56","typeString":"type(int56)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"31535:15:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31526:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31498:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31552:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":2937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31490:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31490:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2955,"nodeType":"ExpressionStatement","src":"31490:103:11"},{"expression":{"arguments":[{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"31616:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31610:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2956,"name":"int56","nodeType":"ElementaryTypeName","src":"31610:5:11","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31610:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"functionReturnParameters":2936,"id":2960,"nodeType":"Return","src":"31603:19:11"}]},"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"31069:345:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31428:7:11","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"value","nameLocation":"31443:5:11","nodeType":"VariableDeclaration","scope":2962,"src":"31436:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2931,"name":"int256","nodeType":"ElementaryTypeName","src":"31436:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31435:14:11"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"31473:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":2934,"name":"int56","nodeType":"ElementaryTypeName","src":"31473:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31472:7:11"},"scope":3189,"src":"31419:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2994,"nodeType":"Block","src":"32046:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"32064:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32078:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2973,"name":"int48","nodeType":"ElementaryTypeName","src":"32078:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":2972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32073:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32073:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32073:15:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32064:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"32092:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32106:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2980,"name":"int48","nodeType":"ElementaryTypeName","src":"32106:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"}],"id":2979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32101:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32101:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int48","typeString":"type(int48)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32101:15:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32092:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32064:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32118:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":2970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32056:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32056:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2988,"nodeType":"ExpressionStatement","src":"32056:103:11"},{"expression":{"arguments":[{"id":2991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"32182:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32176:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2989,"name":"int48","nodeType":"ElementaryTypeName","src":"32176:5:11","typeDescriptions":{}}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32176:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"functionReturnParameters":2969,"id":2993,"nodeType":"Return","src":"32169:19:11"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"31635:345:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31994:7:11","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"value","nameLocation":"32009:5:11","nodeType":"VariableDeclaration","scope":2995,"src":"32002:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2964,"name":"int256","nodeType":"ElementaryTypeName","src":"32002:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32001:14:11"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2995,"src":"32039:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":2967,"name":"int48","nodeType":"ElementaryTypeName","src":"32039:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32038:7:11"},"scope":3189,"src":"31985:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3027,"nodeType":"Block","src":"32612:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"32630:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32644:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3006,"name":"int40","nodeType":"ElementaryTypeName","src":"32644:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":3005,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32639:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32639:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"32639:15:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32630:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"32658:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32672:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3013,"name":"int40","nodeType":"ElementaryTypeName","src":"32672:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"}],"id":3012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"32667:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32667:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int40","typeString":"type(int40)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"32667:15:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32658:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32630:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32684:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":3003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32622:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32622:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3021,"nodeType":"ExpressionStatement","src":"32622:103:11"},{"expression":{"arguments":[{"id":3024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"32748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32742:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3022,"name":"int40","nodeType":"ElementaryTypeName","src":"32742:5:11","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32742:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"functionReturnParameters":3002,"id":3026,"nodeType":"Return","src":"32735:19:11"}]},"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"32201:345:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":3028,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32560:7:11","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"value","nameLocation":"32575:5:11","nodeType":"VariableDeclaration","scope":3028,"src":"32568:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2997,"name":"int256","nodeType":"ElementaryTypeName","src":"32568:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32567:14:11"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3028,"src":"32605:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":3000,"name":"int40","nodeType":"ElementaryTypeName","src":"32605:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32604:7:11"},"scope":3189,"src":"32551:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3060,"nodeType":"Block","src":"33178:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"33196:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33210:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3039,"name":"int32","nodeType":"ElementaryTypeName","src":"33210:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":3038,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33205:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33205:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33205:15:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33196:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"33224:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33238:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3046,"name":"int32","nodeType":"ElementaryTypeName","src":"33238:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"}],"id":3045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33233:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33233:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int32","typeString":"type(int32)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33233:15:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33224:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33196:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33250:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":3036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33188:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33188:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3054,"nodeType":"ExpressionStatement","src":"33188:103:11"},{"expression":{"arguments":[{"id":3057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"33314:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33308:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3055,"name":"int32","nodeType":"ElementaryTypeName","src":"33308:5:11","typeDescriptions":{}}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33308:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"functionReturnParameters":3035,"id":3059,"nodeType":"Return","src":"33301:19:11"}]},"documentation":{"id":3029,"nodeType":"StructuredDocumentation","src":"32767:345:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":3061,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33126:7:11","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"value","nameLocation":"33141:5:11","nodeType":"VariableDeclaration","scope":3061,"src":"33134:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3030,"name":"int256","nodeType":"ElementaryTypeName","src":"33134:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33133:14:11"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3061,"src":"33171:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3033,"name":"int32","nodeType":"ElementaryTypeName","src":"33171:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33170:7:11"},"scope":3189,"src":"33117:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"33744:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"33762:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33776:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3072,"name":"int24","nodeType":"ElementaryTypeName","src":"33776:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":3071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33771:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"33771:15:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33762:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"33790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33804:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3079,"name":"int24","nodeType":"ElementaryTypeName","src":"33804:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"}],"id":3078,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"33799:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33799:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int24","typeString":"type(int24)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"33799:15:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33790:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33762:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33816:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":3069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33754:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33754:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3087,"nodeType":"ExpressionStatement","src":"33754:103:11"},{"expression":{"arguments":[{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"33880:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33874:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3088,"name":"int24","nodeType":"ElementaryTypeName","src":"33874:5:11","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33874:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"functionReturnParameters":3068,"id":3092,"nodeType":"Return","src":"33867:19:11"}]},"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"33333:345:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33692:7:11","nodeType":"FunctionDefinition","parameters":{"id":3065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3064,"mutability":"mutable","name":"value","nameLocation":"33707:5:11","nodeType":"VariableDeclaration","scope":3094,"src":"33700:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3063,"name":"int256","nodeType":"ElementaryTypeName","src":"33700:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33699:14:11"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"33737:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3066,"name":"int24","nodeType":"ElementaryTypeName","src":"33737:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33736:7:11"},"scope":3189,"src":"33683:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3126,"nodeType":"Block","src":"34310:149:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"34328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34342:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3105,"name":"int16","nodeType":"ElementaryTypeName","src":"34342:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":3104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34337:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34337:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34337:15:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34328:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"34356:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34370:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3112,"name":"int16","nodeType":"ElementaryTypeName","src":"34370:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"}],"id":3111,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34365:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34365:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int16","typeString":"type(int16)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34365:15:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34356:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34328:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34382:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":3102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34320:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34320:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3120,"nodeType":"ExpressionStatement","src":"34320:103:11"},{"expression":{"arguments":[{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"34446:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34440:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3121,"name":"int16","nodeType":"ElementaryTypeName","src":"34440:5:11","typeDescriptions":{}}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34440:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"functionReturnParameters":3101,"id":3125,"nodeType":"Return","src":"34433:19:11"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"33899:345:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34258:7:11","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"value","nameLocation":"34273:5:11","nodeType":"VariableDeclaration","scope":3127,"src":"34266:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3096,"name":"int256","nodeType":"ElementaryTypeName","src":"34266:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34265:14:11"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"34303:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":3099,"name":"int16","nodeType":"ElementaryTypeName","src":"34303:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34302:7:11"},"scope":3189,"src":"34249:210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"34869:145:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"34887:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34901:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3138,"name":"int8","nodeType":"ElementaryTypeName","src":"34901:4:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":3137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34896:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34896:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","src":"34896:14:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34887:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"34914:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34928:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3145,"name":"int8","nodeType":"ElementaryTypeName","src":"34928:4:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"}],"id":3144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34923:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34923:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int8","typeString":"type(int8)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34923:14:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34914:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"34887:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34939:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":3135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34879:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34879:100:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3153,"nodeType":"ExpressionStatement","src":"34879:100:11"},{"expression":{"arguments":[{"id":3156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"35001:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34996:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3154,"name":"int8","nodeType":"ElementaryTypeName","src":"34996:4:11","typeDescriptions":{}}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34996:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"functionReturnParameters":3134,"id":3158,"nodeType":"Return","src":"34989:18:11"}]},"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"34465:340:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34819:6:11","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"value","nameLocation":"34833:5:11","nodeType":"VariableDeclaration","scope":3160,"src":"34826:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3129,"name":"int256","nodeType":"ElementaryTypeName","src":"34826:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34825:14:11"},"returnParameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3160,"src":"34863:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":3132,"name":"int8","nodeType":"ElementaryTypeName","src":"34863:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34862:6:11"},"scope":3189,"src":"34810:204:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3187,"nodeType":"Block","src":"35292:233:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"35409:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35431:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3173,"name":"int256","nodeType":"ElementaryTypeName","src":"35431:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35426:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35426:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"35426:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35418:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"35418:7:11","typeDescriptions":{}}},"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35418:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35409:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"35445:42:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":3168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"35401:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35401:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3181,"nodeType":"ExpressionStatement","src":"35401:87:11"},{"expression":{"arguments":[{"id":3184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"35512:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35505:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3182,"name":"int256","nodeType":"ElementaryTypeName","src":"35505:6:11","typeDescriptions":{}}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35505:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3167,"id":3186,"nodeType":"Return","src":"35498:20:11"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"35020:203:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35237:8:11","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"value","nameLocation":"35254:5:11","nodeType":"VariableDeclaration","scope":3188,"src":"35246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"35246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35245:15:11"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"35284:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3165,"name":"int256","nodeType":"ElementaryTypeName","src":"35284:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35283:8:11"},"scope":3189,"src":"35228:297:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3190,"src":"842:34685:11","usedErrors":[]}],"src":"107:35421:11"},"id":11},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","exportedSymbols":{"DoubleEndedQueue":[3530],"SafeCast":[3189]},"id":3531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3191,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"117:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":3192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3531,"sourceUnit":3190,"src":"142:30:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"174:660:12","text":" @dev A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of\n the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and\n FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that\n the existing queue contents are left in storage.\n The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be\n used in storage, and not in memory.\n ```\n DoubleEndedQueue.Bytes32Deque queue;\n ```\n _Available since v4.6._"},"fullyImplemented":true,"id":3530,"linearizedBaseContracts":[3530],"name":"DoubleEndedQueue","nameLocation":"843:16:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"866:103:12","text":" @dev An operation (e.g. {front}) couldn't be completed due to the queue being empty."},"id":3196,"name":"Empty","nameLocation":"980:5:12","nodeType":"ErrorDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[],"src":"985:2:12"},"src":"974:14:12"},{"documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"994:107:12","text":" @dev An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."},"id":3199,"name":"OutOfBounds","nameLocation":"1112:11:12","nodeType":"ErrorDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[],"src":"1123:2:12"},"src":"1106:20:12"},{"canonicalName":"DoubleEndedQueue.Bytes32Deque","id":3208,"members":[{"constant":false,"id":3201,"mutability":"mutable","name":"_begin","nameLocation":"1937:6:12","nodeType":"VariableDeclaration","scope":3208,"src":"1930:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3200,"name":"int128","nodeType":"ElementaryTypeName","src":"1930:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"_end","nameLocation":"1960:4:12","nodeType":"VariableDeclaration","scope":3208,"src":"1953:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3202,"name":"int128","nodeType":"ElementaryTypeName","src":"1953:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"_data","nameLocation":"2001:5:12","nodeType":"VariableDeclaration","scope":3208,"src":"1974:32:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"},"typeName":{"id":3206,"keyType":{"id":3204,"name":"int128","nodeType":"ElementaryTypeName","src":"1982:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Mapping","src":"1974:26:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"},"valueType":{"id":3205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1992:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Bytes32Deque","nameLocation":"1907:12:12","nodeType":"StructDefinition","scope":3530,"src":"1900:113:12","visibility":"public"},{"body":{"id":3239,"nodeType":"Block","src":"2158:156:12","statements":[{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"backIndex","nameLocation":"2175:9:12","nodeType":"VariableDeclaration","scope":3239,"src":"2168:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3217,"name":"int128","nodeType":"ElementaryTypeName","src":"2168:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":3221,"initialValue":{"expression":{"id":3219,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2187:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"2187:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"2168:29:12"},{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3222,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2207:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"2207:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3226,"indexExpression":{"id":3224,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"2219:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2207:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"2232:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2207:30:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3229,"nodeType":"ExpressionStatement","src":"2207:30:12"},{"id":3238,"nodeType":"UncheckedBlock","src":"2247:61:12","statements":[{"expression":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3230,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2271:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"2271:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"2284:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2284:13:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2271:26:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3237,"nodeType":"ExpressionStatement","src":"2271:26:12"}]}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"2019:64:12","text":" @dev Inserts an item at the end of the queue."},"id":3240,"implemented":true,"kind":"function","modifiers":[],"name":"pushBack","nameLocation":"2097:8:12","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"deque","nameLocation":"2127:5:12","nodeType":"VariableDeclaration","scope":3240,"src":"2106:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3211,"nodeType":"UserDefinedTypeName","pathNode":{"id":3210,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"2106:12:12"},"referencedDeclaration":3208,"src":"2106:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"value","nameLocation":"2142:5:12","nodeType":"VariableDeclaration","scope":3240,"src":"2134:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2134:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2105:43:12"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[],"src":"2158:0:12"},"scope":3530,"src":"2088:226:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"2541:256:12","statements":[{"condition":{"arguments":[{"id":3250,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2561:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":3249,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"2555:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2555:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3255,"nodeType":"IfStatement","src":"2551:32:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3252,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2576:5:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2576:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"RevertStatement","src":"2569:14:12"}},{"assignments":[3257],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"backIndex","nameLocation":"2600:9:12","nodeType":"VariableDeclaration","scope":3286,"src":"2593:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3256,"name":"int128","nodeType":"ElementaryTypeName","src":"2593:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":3258,"nodeType":"VariableDeclarationStatement","src":"2593:16:12"},{"id":3266,"nodeType":"UncheckedBlock","src":"2619:61:12","statements":[{"expression":{"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3259,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"2643:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3260,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2655:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"2655:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2668:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2655:14:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2643:26:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3265,"nodeType":"ExpressionStatement","src":"2643:26:12"}]},{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"2689:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":3268,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2697:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"2697:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3271,"indexExpression":{"id":3270,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"2709:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2697:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2689:30:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3273,"nodeType":"ExpressionStatement","src":"2689:30:12"},{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2729:29:12","subExpression":{"baseExpression":{"expression":{"id":3274,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2736:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"2736:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3277,"indexExpression":{"id":3276,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"2748:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2736:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3279,"nodeType":"ExpressionStatement","src":"2729:29:12"},{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3280,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"2768:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"2768:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3283,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"2781:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2768:22:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3285,"nodeType":"ExpressionStatement","src":"2768:22:12"}]},"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"2320:138:12","text":" @dev Removes the item at the end of the queue and returns it.\n Reverts with `Empty` if the queue is empty."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"popBack","nameLocation":"2472:7:12","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"deque","nameLocation":"2501:5:12","nodeType":"VariableDeclaration","scope":3287,"src":"2480:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"2480:12:12"},"referencedDeclaration":3208,"src":"2480:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"2479:28:12"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"value","nameLocation":"2534:5:12","nodeType":"VariableDeclaration","scope":3287,"src":"2526:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2526:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2525:15:12"},"scope":3530,"src":"2463:334:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3321,"nodeType":"Block","src":"2949:183:12","statements":[{"assignments":[3297],"declarations":[{"constant":false,"id":3297,"mutability":"mutable","name":"frontIndex","nameLocation":"2966:10:12","nodeType":"VariableDeclaration","scope":3321,"src":"2959:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3296,"name":"int128","nodeType":"ElementaryTypeName","src":"2959:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":3298,"nodeType":"VariableDeclarationStatement","src":"2959:17:12"},{"id":3306,"nodeType":"UncheckedBlock","src":"2986:64:12","statements":[{"expression":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3010:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3300,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"3023:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"3023:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3038:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3023:16:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3010:29:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3305,"nodeType":"ExpressionStatement","src":"3010:29:12"}]},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3307,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"3059:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"3059:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3311,"indexExpression":{"id":3309,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3071:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3059:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"3085:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3059:31:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3314,"nodeType":"ExpressionStatement","src":"3059:31:12"},{"expression":{"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3315,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"3100:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"3100:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3318,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"3115:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3100:25:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3320,"nodeType":"ExpressionStatement","src":"3100:25:12"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"2803:70:12","text":" @dev Inserts an item at the beginning of the queue."},"id":3322,"implemented":true,"kind":"function","modifiers":[],"name":"pushFront","nameLocation":"2887:9:12","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"deque","nameLocation":"2918:5:12","nodeType":"VariableDeclaration","scope":3322,"src":"2897:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"2897:12:12"},"referencedDeclaration":3208,"src":"2897:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"value","nameLocation":"2933:5:12","nodeType":"VariableDeclaration","scope":3322,"src":"2925:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2925:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2896:43:12"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[],"src":"2949:0:12"},"scope":3530,"src":"2878:254:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3365,"nodeType":"Block","src":"3366:245:12","statements":[{"condition":{"arguments":[{"id":3332,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"3386:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":3331,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"3380:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3380:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3337,"nodeType":"IfStatement","src":"3376:32:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3334,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"3401:5:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3401:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3336,"nodeType":"RevertStatement","src":"3394:14:12"}},{"assignments":[3339],"declarations":[{"constant":false,"id":3339,"mutability":"mutable","name":"frontIndex","nameLocation":"3425:10:12","nodeType":"VariableDeclaration","scope":3365,"src":"3418:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3338,"name":"int128","nodeType":"ElementaryTypeName","src":"3418:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":3342,"initialValue":{"expression":{"id":3340,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"3438:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"3438:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"3418:32:12"},{"expression":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"3460:5:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":3344,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"3468:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"3468:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3347,"indexExpression":{"id":3346,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"3480:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3468:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3460:31:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3349,"nodeType":"ExpressionStatement","src":"3460:31:12"},{"expression":{"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3501:30:12","subExpression":{"baseExpression":{"expression":{"id":3350,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"3508:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"3508:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3353,"indexExpression":{"id":3352,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"3520:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3508:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"ExpressionStatement","src":"3501:30:12"},{"id":3364,"nodeType":"UncheckedBlock","src":"3541:64:12","statements":[{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3356,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"3565:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"3565:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"3580:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3580:14:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3565:29:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3363,"nodeType":"ExpressionStatement","src":"3565:29:12"}]}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"3138:144:12","text":" @dev Removes the item at the beginning of the queue and returns it.\n Reverts with `Empty` if the queue is empty."},"id":3366,"implemented":true,"kind":"function","modifiers":[],"name":"popFront","nameLocation":"3296:8:12","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"deque","nameLocation":"3326:5:12","nodeType":"VariableDeclaration","scope":3366,"src":"3305:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3325,"nodeType":"UserDefinedTypeName","pathNode":{"id":3324,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"3305:12:12"},"referencedDeclaration":3208,"src":"3305:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"3304:28:12"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"value","nameLocation":"3359:5:12","nodeType":"VariableDeclaration","scope":3366,"src":"3351:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:15:12"},"scope":3530,"src":"3287:324:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3392,"nodeType":"Block","src":"3832:131:12","statements":[{"condition":{"arguments":[{"id":3376,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"3852:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":3375,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"3846:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3381,"nodeType":"IfStatement","src":"3842:32:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3378,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"3867:5:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3867:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3380,"nodeType":"RevertStatement","src":"3860:14:12"}},{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"frontIndex","nameLocation":"3891:10:12","nodeType":"VariableDeclaration","scope":3392,"src":"3884:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3382,"name":"int128","nodeType":"ElementaryTypeName","src":"3884:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":3386,"initialValue":{"expression":{"id":3384,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"3904:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"3904:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"3884:32:12"},{"expression":{"baseExpression":{"expression":{"id":3387,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"3933:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"3933:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3390,"indexExpression":{"id":3389,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"3945:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3933:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3374,"id":3391,"nodeType":"Return","src":"3926:30:12"}]},"documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"3617:129:12","text":" @dev Returns the item at the beginning of the queue.\n Reverts with `Empty` if the queue is empty."},"id":3393,"implemented":true,"kind":"function","modifiers":[],"name":"front","nameLocation":"3760:5:12","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"deque","nameLocation":"3787:5:12","nodeType":"VariableDeclaration","scope":3393,"src":"3766:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3369,"nodeType":"UserDefinedTypeName","pathNode":{"id":3368,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"3766:12:12"},"referencedDeclaration":3208,"src":"3766:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"3765:28:12"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"value","nameLocation":"3825:5:12","nodeType":"VariableDeclaration","scope":3393,"src":"3817:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3817:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3816:15:12"},"scope":3530,"src":"3751:212:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3425,"nodeType":"Block","src":"4177:184:12","statements":[{"condition":{"arguments":[{"id":3403,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4197:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":3402,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"4191:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4191:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3408,"nodeType":"IfStatement","src":"4187:32:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3405,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4212:5:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4212:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3407,"nodeType":"RevertStatement","src":"4205:14:12"}},{"assignments":[3410],"declarations":[{"constant":false,"id":3410,"mutability":"mutable","name":"backIndex","nameLocation":"4236:9:12","nodeType":"VariableDeclaration","scope":3425,"src":"4229:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3409,"name":"int128","nodeType":"ElementaryTypeName","src":"4229:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":3411,"nodeType":"VariableDeclarationStatement","src":"4229:16:12"},{"id":3419,"nodeType":"UncheckedBlock","src":"4255:61:12","statements":[{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"4279:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3413,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4291:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"4291:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4304:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4291:14:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4279:26:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3418,"nodeType":"ExpressionStatement","src":"4279:26:12"}]},{"expression":{"baseExpression":{"expression":{"id":3420,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4332:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"4332:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3423,"indexExpression":{"id":3422,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"4344:9:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4332:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3401,"id":3424,"nodeType":"Return","src":"4325:29:12"}]},"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"3969:123:12","text":" @dev Returns the item at the end of the queue.\n Reverts with `Empty` if the queue is empty."},"id":3426,"implemented":true,"kind":"function","modifiers":[],"name":"back","nameLocation":"4106:4:12","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"deque","nameLocation":"4132:5:12","nodeType":"VariableDeclaration","scope":3426,"src":"4111:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3396,"nodeType":"UserDefinedTypeName","pathNode":{"id":3395,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"4111:12:12"},"referencedDeclaration":3208,"src":"4111:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"4110:28:12"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"value","nameLocation":"4170:5:12","nodeType":"VariableDeclaration","scope":3426,"src":"4162:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:15:12"},"scope":3530,"src":"4097:264:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"4691:231:12","statements":[{"assignments":[3438],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"idx","nameLocation":"4757:3:12","nodeType":"VariableDeclaration","scope":3466,"src":"4750:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3437,"name":"int128","nodeType":"ElementaryTypeName","src":"4750:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":3452,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3443,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4788:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"4788:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4781:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3441,"name":"int256","nodeType":"ElementaryTypeName","src":"4781:6:12","typeDescriptions":{}}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4781:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":3448,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"4822:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3446,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"4804:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3189_$","typeString":"type(library SafeCast)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":3188,"src":"4804:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4804:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"4781:47:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3439,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"4763:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3189_$","typeString":"type(library SafeCast)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":2665,"src":"4763:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4763:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"4750:79:12"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"4843:3:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3454,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4850:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"4850:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4843:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3460,"nodeType":"IfStatement","src":"4839:43:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3457,"name":"OutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"4869:11:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4869:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3459,"nodeType":"RevertStatement","src":"4862:20:12"}},{"expression":{"baseExpression":{"expression":{"id":3461,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4899:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"4899:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":3464,"indexExpression":{"id":3463,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"4911:3:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4899:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3436,"id":3465,"nodeType":"Return","src":"4892:23:12"}]},"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"4367:226:12","text":" @dev Return the item at a position in the queue given by `index`, with the first item at 0 and last item at\n `length(deque) - 1`.\n Reverts with `OutOfBounds` if the index is out of bounds."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4607:2:12","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"deque","nameLocation":"4631:5:12","nodeType":"VariableDeclaration","scope":3467,"src":"4610:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3429,"nodeType":"UserDefinedTypeName","pathNode":{"id":3428,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"4610:12:12"},"referencedDeclaration":3208,"src":"4610:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"index","nameLocation":"4646:5:12","nodeType":"VariableDeclaration","scope":3467,"src":"4638:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"4638:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4609:43:12"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"value","nameLocation":"4684:5:12","nodeType":"VariableDeclaration","scope":3467,"src":"4676:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4676:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4675:15:12"},"scope":3530,"src":"4598:324:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"5211:57:12","statements":[{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3474,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"5221:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"5221:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5236:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5221:16:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3479,"nodeType":"ExpressionStatement","src":"5221:16:12"},{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3480,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"5247:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"5247:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5260:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5247:14:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3485,"nodeType":"ExpressionStatement","src":"5247:14:12"}]},"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"4928:226:12","text":" @dev Resets the queue back to being empty.\n NOTE: The current items are left behind in storage. This does not affect the functioning of the queue, but misses\n out on potential gas refunds."},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"5168:5:12","nodeType":"FunctionDefinition","parameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"deque","nameLocation":"5195:5:12","nodeType":"VariableDeclaration","scope":3487,"src":"5174:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3470,"nodeType":"UserDefinedTypeName","pathNode":{"id":3469,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"5174:12:12"},"referencedDeclaration":3208,"src":"5174:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5173:28:12"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[],"src":"5211:0:12"},"scope":3530,"src":"5159:109:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3512,"nodeType":"Block","src":"5420:287:12","statements":[{"id":3511,"nodeType":"UncheckedBlock","src":"5609:92:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3500,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"5655:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"5655:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5648:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3498,"name":"int256","nodeType":"ElementaryTypeName","src":"5648:6:12","typeDescriptions":{}}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5648:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"expression":{"id":3505,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"5676:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"5676:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5669:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3503,"name":"int256","nodeType":"ElementaryTypeName","src":"5669:6:12","typeDescriptions":{}}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5669:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5648:41:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5640:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"5640:7:12","typeDescriptions":{}}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5640:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3495,"id":3510,"nodeType":"Return","src":"5633:57:12"}]}]},"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"5274:65:12","text":" @dev Returns the number of items in the queue."},"id":3513,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"5353:6:12","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"deque","nameLocation":"5381:5:12","nodeType":"VariableDeclaration","scope":3513,"src":"5360:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3490,"nodeType":"UserDefinedTypeName","pathNode":{"id":3489,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"5360:12:12"},"referencedDeclaration":3208,"src":"5360:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5359:28:12"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3513,"src":"5411:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"5411:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5410:9:12"},"scope":3530,"src":"5344:363:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3528,"nodeType":"Block","src":"5849:50:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3522,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"5866:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":3203,"src":"5866:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3524,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"5880:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":3525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"5880:12:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"5866:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3521,"id":3527,"nodeType":"Return","src":"5859:33:12"}]},"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"5713:59:12","text":" @dev Returns true if the queue is empty."},"id":3529,"implemented":true,"kind":"function","modifiers":[],"name":"empty","nameLocation":"5786:5:12","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"deque","nameLocation":"5813:5:12","nodeType":"VariableDeclaration","scope":3529,"src":"5792:26:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":3516,"nodeType":"UserDefinedTypeName","pathNode":{"id":3515,"name":"Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"5792:12:12"},"referencedDeclaration":3208,"src":"5792:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5791:28:12"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3529,"src":"5843:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3519,"name":"bool","nodeType":"ElementaryTypeName","src":"5843:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5842:6:12"},"scope":3530,"src":"5777:122:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3531,"src":"835:5066:12","usedErrors":[3196,3199]}],"src":"117:5785:12"},"id":12},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4129]},"id":4130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3532,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"140:1087:13","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4129,"linearizedBaseContracts":[4129],"name":"EnumerableSet","nameLocation":"1236:13:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3541,"members":[{"constant":false,"id":3536,"mutability":"mutable","name":"_values","nameLocation":"1760:7:13","nodeType":"VariableDeclaration","scope":3541,"src":"1750:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1750:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3535,"nodeType":"ArrayTypeName","src":"1750:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"_indexes","nameLocation":"1928:8:13","nodeType":"VariableDeclaration","scope":3541,"src":"1900:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3539,"keyType":{"id":3537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1900:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1703:3:13","nodeType":"StructDefinition","scope":4129,"src":"1696:247:13","visibility":"public"},{"body":{"id":3582,"nodeType":"Block","src":"2182:335:13","statements":[{"condition":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2196:22:13","subExpression":{"arguments":[{"id":3553,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"2207:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"2212:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3552,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2197:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2197:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3580,"nodeType":"Block","src":"2474:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2495:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3551,"id":3579,"nodeType":"Return","src":"2488:12:13"}]},"id":3581,"nodeType":"IfStatement","src":"2192:319:13","trueBody":{"id":3577,"nodeType":"Block","src":"2220:248:13","statements":[{"expression":{"arguments":[{"id":3562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"2251:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3557,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"2234:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"2234:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2234:16:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"ExpressionStatement","src":"2234:23:13"},{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3565,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"2392:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"2392:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3569,"indexExpression":{"id":3567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"2405:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2392:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3570,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"2414:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"2414:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2414:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2392:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"2392:40:13"},{"expression":{"hexValue":"74727565","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2453:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3551,"id":3576,"nodeType":"Return","src":"2446:11:13"}]}}]},"documentation":{"id":3542,"nodeType":"StructuredDocumentation","src":"1949:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2122:4:13","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"set","nameLocation":"2139:3:13","nodeType":"VariableDeclaration","scope":3583,"src":"2127:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3544,"nodeType":"UserDefinedTypeName","pathNode":{"id":3543,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"2127:3:13"},"referencedDeclaration":3541,"src":"2127:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"2152:5:13","nodeType":"VariableDeclaration","scope":3583,"src":"2144:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2144:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2126:32:13"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"2176:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3549,"name":"bool","nodeType":"ElementaryTypeName","src":"2176:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2175:6:13"},"scope":4129,"src":"2113:404:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3666,"nodeType":"Block","src":"2757:1316:13","statements":[{"assignments":[3595],"declarations":[{"constant":false,"id":3595,"mutability":"mutable","name":"valueIndex","nameLocation":"2875:10:13","nodeType":"VariableDeclaration","scope":3666,"src":"2867:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3600,"initialValue":{"baseExpression":{"expression":{"id":3596,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"2888:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"2888:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3599,"indexExpression":{"id":3598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"2901:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2888:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2867:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3601,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"2922:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2922:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3664,"nodeType":"Block","src":"4030:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4051:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3593,"id":3663,"nodeType":"Return","src":"4044:12:13"}]},"id":3665,"nodeType":"IfStatement","src":"2918:1149:13","trueBody":{"id":3661,"nodeType":"Block","src":"2939:1085:13","statements":[{"assignments":[3605],"declarations":[{"constant":false,"id":3605,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3299:13:13","nodeType":"VariableDeclaration","scope":3661,"src":"3291:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3609,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"3315:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3328:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3315:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3291:38:13"},{"assignments":[3611],"declarations":[{"constant":false,"id":3611,"mutability":"mutable","name":"lastIndex","nameLocation":"3351:9:13","nodeType":"VariableDeclaration","scope":3661,"src":"3343:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3612,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3363:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"3363:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3363:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3384:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3363:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3343:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3618,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"3404:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3619,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"3417:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3404:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3645,"nodeType":"IfStatement","src":"3400:398:13","trueBody":{"id":3644,"nodeType":"Block","src":"3432:366:13","statements":[{"assignments":[3622],"declarations":[{"constant":false,"id":3622,"mutability":"mutable","name":"lastValue","nameLocation":"3458:9:13","nodeType":"VariableDeclaration","scope":3644,"src":"3450:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3450:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3627,"initialValue":{"baseExpression":{"expression":{"id":3623,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3470:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"3470:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3626,"indexExpression":{"id":3625,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"3482:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3470:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3450:42:13"},{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3628,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3592:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"3592:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3632,"indexExpression":{"id":3630,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"3604:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3592:26:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3633,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"3621:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3592:38:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3635,"nodeType":"ExpressionStatement","src":"3592:38:13"},{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3636,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3704:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"3704:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3640,"indexExpression":{"id":3638,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"3717:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3641,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"3730:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3704:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3643,"nodeType":"ExpressionStatement","src":"3704:36:13"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3646,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3876:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"3876:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3876:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3876:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3652,"nodeType":"ExpressionStatement","src":"3876:17:13"},{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3961:26:13","subExpression":{"baseExpression":{"expression":{"id":3653,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"3968:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"3968:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3656,"indexExpression":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"3981:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3968:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3658,"nodeType":"ExpressionStatement","src":"3961:26:13"},{"expression":{"hexValue":"74727565","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4009:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3593,"id":3660,"nodeType":"Return","src":"4002:11:13"}]}}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"2523:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2694:7:13","nodeType":"FunctionDefinition","parameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"set","nameLocation":"2714:3:13","nodeType":"VariableDeclaration","scope":3667,"src":"2702:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3586,"nodeType":"UserDefinedTypeName","pathNode":{"id":3585,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"2702:3:13"},"referencedDeclaration":3541,"src":"2702:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3589,"mutability":"mutable","name":"value","nameLocation":"2727:5:13","nodeType":"VariableDeclaration","scope":3667,"src":"2719:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2719:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2701:32:13"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3667,"src":"2751:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3591,"name":"bool","nodeType":"ElementaryTypeName","src":"2751:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2750:6:13"},"scope":4129,"src":"2685:1388:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3685,"nodeType":"Block","src":"4233:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3678,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"4250:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"4250:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3681,"indexExpression":{"id":3680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"4263:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4250:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4273:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4250:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3677,"id":3684,"nodeType":"Return","src":"4243:31:13"}]},"documentation":{"id":3668,"nodeType":"StructuredDocumentation","src":"4079:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4163:9:13","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"set","nameLocation":"4185:3:13","nodeType":"VariableDeclaration","scope":3686,"src":"4173:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3670,"nodeType":"UserDefinedTypeName","pathNode":{"id":3669,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"4173:3:13"},"referencedDeclaration":3541,"src":"4173:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"value","nameLocation":"4198:5:13","nodeType":"VariableDeclaration","scope":3686,"src":"4190:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4190:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4172:32:13"},"returnParameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3686,"src":"4227:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3675,"name":"bool","nodeType":"ElementaryTypeName","src":"4227:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4226:6:13"},"scope":4129,"src":"4154:127:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3699,"nodeType":"Block","src":"4427:42:13","statements":[{"expression":{"expression":{"expression":{"id":3695,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"4444:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"4444:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4444:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3694,"id":3698,"nodeType":"Return","src":"4437:25:13"}]},"documentation":{"id":3687,"nodeType":"StructuredDocumentation","src":"4287:70:13","text":" @dev Returns the number of values on the set. O(1)."},"id":3700,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4371:7:13","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"set","nameLocation":"4391:3:13","nodeType":"VariableDeclaration","scope":3700,"src":"4379:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3689,"nodeType":"UserDefinedTypeName","pathNode":{"id":3688,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"4379:3:13"},"referencedDeclaration":3541,"src":"4379:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4378:17:13"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"4418:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:9:13"},"scope":4129,"src":"4362:107:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3716,"nodeType":"Block","src":"4887:42:13","statements":[{"expression":{"baseExpression":{"expression":{"id":3711,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"4904:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"4904:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3714,"indexExpression":{"id":3713,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"4916:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4904:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3710,"id":3715,"nodeType":"Return","src":"4897:25:13"}]},"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"4475:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4820:3:13","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"set","nameLocation":"4836:3:13","nodeType":"VariableDeclaration","scope":3717,"src":"4824:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3703,"nodeType":"UserDefinedTypeName","pathNode":{"id":3702,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"4824:3:13"},"referencedDeclaration":3541,"src":"4824:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"index","nameLocation":"4849:5:13","nodeType":"VariableDeclaration","scope":3717,"src":"4841:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4841:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4823:32:13"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"4878:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4878:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4877:9:13"},"scope":4129,"src":"4811:118:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3730,"nodeType":"Block","src":"5543:35:13","statements":[{"expression":{"expression":{"id":3727,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"5560:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"5560:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3726,"id":3729,"nodeType":"Return","src":"5553:18:13"}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"4935:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5478:7:13","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"set","nameLocation":"5498:3:13","nodeType":"VariableDeclaration","scope":3731,"src":"5486:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3720,"nodeType":"UserDefinedTypeName","pathNode":{"id":3719,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"5486:3:13"},"referencedDeclaration":3541,"src":"5486:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5485:17:13"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3731,"src":"5525:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5525:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3724,"nodeType":"ArrayTypeName","src":"5525:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5524:18:13"},"scope":4129,"src":"5469:109:13","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3735,"members":[{"constant":false,"id":3734,"mutability":"mutable","name":"_inner","nameLocation":"5635:6:13","nodeType":"VariableDeclaration","scope":3735,"src":"5631:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3733,"nodeType":"UserDefinedTypeName","pathNode":{"id":3732,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"5631:3:13"},"referencedDeclaration":3541,"src":"5631:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5610:10:13","nodeType":"StructDefinition","scope":4129,"src":"5603:45:13","visibility":"public"},{"body":{"id":3752,"nodeType":"Block","src":"5894:47:13","statements":[{"expression":{"arguments":[{"expression":{"id":3747,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"5916:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"5916:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"5928:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3746,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"5911:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5911:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3745,"id":3751,"nodeType":"Return","src":"5904:30:13"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"5654:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3753,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5827:3:13","nodeType":"FunctionDefinition","parameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"set","nameLocation":"5850:3:13","nodeType":"VariableDeclaration","scope":3753,"src":"5831:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3738,"nodeType":"UserDefinedTypeName","pathNode":{"id":3737,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"5831:10:13"},"referencedDeclaration":3735,"src":"5831:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"value","nameLocation":"5863:5:13","nodeType":"VariableDeclaration","scope":3753,"src":"5855:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5855:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5830:39:13"},"returnParameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3753,"src":"5888:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3743,"name":"bool","nodeType":"ElementaryTypeName","src":"5888:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5887:6:13"},"scope":4129,"src":"5818:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3770,"nodeType":"Block","src":"6188:50:13","statements":[{"expression":{"arguments":[{"expression":{"id":3765,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"6213:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"6213:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"6225:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3764,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"6205:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6205:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3763,"id":3769,"nodeType":"Return","src":"6198:33:13"}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"5947:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6118:6:13","nodeType":"FunctionDefinition","parameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"set","nameLocation":"6144:3:13","nodeType":"VariableDeclaration","scope":3771,"src":"6125:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3756,"nodeType":"UserDefinedTypeName","pathNode":{"id":3755,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"6125:10:13"},"referencedDeclaration":3735,"src":"6125:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"value","nameLocation":"6157:5:13","nodeType":"VariableDeclaration","scope":3771,"src":"6149:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6149:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6124:39:13"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3771,"src":"6182:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3761,"name":"bool","nodeType":"ElementaryTypeName","src":"6182:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6181:6:13"},"scope":4129,"src":"6109:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3788,"nodeType":"Block","src":"6405:52:13","statements":[{"expression":{"arguments":[{"expression":{"id":3783,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"6432:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"6432:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"6444:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3782,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"6422:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3781,"id":3787,"nodeType":"Return","src":"6415:35:13"}]},"documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"6244:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6328:8:13","nodeType":"FunctionDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"set","nameLocation":"6356:3:13","nodeType":"VariableDeclaration","scope":3789,"src":"6337:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3774,"nodeType":"UserDefinedTypeName","pathNode":{"id":3773,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"6337:10:13"},"referencedDeclaration":3735,"src":"6337:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"value","nameLocation":"6369:5:13","nodeType":"VariableDeclaration","scope":3789,"src":"6361:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6336:39:13"},"returnParameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3789,"src":"6399:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3779,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:13"},"scope":4129,"src":"6319:138:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3803,"nodeType":"Block","src":"6610:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":3799,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"6635:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"6635:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3798,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"6627:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6627:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3797,"id":3802,"nodeType":"Return","src":"6620:26:13"}]},"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"6463:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6547:6:13","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"set","nameLocation":"6573:3:13","nodeType":"VariableDeclaration","scope":3804,"src":"6554:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3792,"nodeType":"UserDefinedTypeName","pathNode":{"id":3791,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"6554:10:13"},"referencedDeclaration":3735,"src":"6554:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6553:24:13"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3804,"src":"6601:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"6601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6600:9:13"},"scope":4129,"src":"6538:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3821,"nodeType":"Block","src":"7078:46:13","statements":[{"expression":{"arguments":[{"expression":{"id":3816,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"7099:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"7099:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3818,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"7111:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3815,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7095:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7095:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3814,"id":3820,"nodeType":"Return","src":"7088:29:13"}]},"documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"6659:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3822,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7004:2:13","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"set","nameLocation":"7026:3:13","nodeType":"VariableDeclaration","scope":3822,"src":"7007:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3807,"nodeType":"UserDefinedTypeName","pathNode":{"id":3806,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"7007:10:13"},"referencedDeclaration":3735,"src":"7007:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"index","nameLocation":"7039:5:13","nodeType":"VariableDeclaration","scope":3822,"src":"7031:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"7031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7006:39:13"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3822,"src":"7069:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:9:13"},"scope":4129,"src":"6995:129:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3837,"nodeType":"Block","src":"7745:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":3833,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"7770:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3734,"src":"7770:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3832,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"7762:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3831,"id":3836,"nodeType":"Return","src":"7755:26:13"}]},"documentation":{"id":3823,"nodeType":"StructuredDocumentation","src":"7130:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3838,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7673:6:13","nodeType":"FunctionDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"set","nameLocation":"7699:3:13","nodeType":"VariableDeclaration","scope":3838,"src":"7680:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3825,"nodeType":"UserDefinedTypeName","pathNode":{"id":3824,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3735,"src":"7680:10:13"},"referencedDeclaration":3735,"src":"7680:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3735_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7679:24:13"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3838,"src":"7727:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7727:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3829,"nodeType":"ArrayTypeName","src":"7727:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7726:18:13"},"scope":4129,"src":"7664:124:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":3842,"members":[{"constant":false,"id":3841,"mutability":"mutable","name":"_inner","nameLocation":"7845:6:13","nodeType":"VariableDeclaration","scope":3842,"src":"7841:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3840,"nodeType":"UserDefinedTypeName","pathNode":{"id":3839,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"7841:3:13"},"referencedDeclaration":3541,"src":"7841:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7820:10:13","nodeType":"StructDefinition","scope":4129,"src":"7813:45:13","visibility":"public"},{"body":{"id":3868,"nodeType":"Block","src":"8104:74:13","statements":[{"expression":{"arguments":[{"expression":{"id":3854,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"8126:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"8126:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"8162:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8154:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3860,"name":"uint160","nodeType":"ElementaryTypeName","src":"8154:7:13","typeDescriptions":{}}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8154:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"8146:7:13","typeDescriptions":{}}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8146:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8138:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8138:7:13","typeDescriptions":{}}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8138:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3853,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"8121:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3852,"id":3867,"nodeType":"Return","src":"8114:57:13"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"7864:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3869,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8037:3:13","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"set","nameLocation":"8060:3:13","nodeType":"VariableDeclaration","scope":3869,"src":"8041:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3845,"nodeType":"UserDefinedTypeName","pathNode":{"id":3844,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"8041:10:13"},"referencedDeclaration":3842,"src":"8041:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"value","nameLocation":"8073:5:13","nodeType":"VariableDeclaration","scope":3869,"src":"8065:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8040:39:13"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"8098:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3850,"name":"bool","nodeType":"ElementaryTypeName","src":"8098:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8097:6:13"},"scope":4129,"src":"8028:150:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3895,"nodeType":"Block","src":"8425:77:13","statements":[{"expression":{"arguments":[{"expression":{"id":3881,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"8450:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"8450:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"8486:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8478:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3887,"name":"uint160","nodeType":"ElementaryTypeName","src":"8478:7:13","typeDescriptions":{}}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8478:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8470:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"8470:7:13","typeDescriptions":{}}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8462:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8462:7:13","typeDescriptions":{}}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8462:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3880,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"8442:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8442:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3879,"id":3894,"nodeType":"Return","src":"8435:60:13"}]},"documentation":{"id":3870,"nodeType":"StructuredDocumentation","src":"8184:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8355:6:13","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"set","nameLocation":"8381:3:13","nodeType":"VariableDeclaration","scope":3896,"src":"8362:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3872,"nodeType":"UserDefinedTypeName","pathNode":{"id":3871,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"8362:10:13"},"referencedDeclaration":3842,"src":"8362:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"value","nameLocation":"8394:5:13","nodeType":"VariableDeclaration","scope":3896,"src":"8386:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8361:39:13"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3896,"src":"8419:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3877,"name":"bool","nodeType":"ElementaryTypeName","src":"8419:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8418:6:13"},"scope":4129,"src":"8346:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3922,"nodeType":"Block","src":"8669:79:13","statements":[{"expression":{"arguments":[{"expression":{"id":3908,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8696:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"8696:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"8732:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8724:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3914,"name":"uint160","nodeType":"ElementaryTypeName","src":"8724:7:13","typeDescriptions":{}}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8724:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8716:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"8716:7:13","typeDescriptions":{}}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8716:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8708:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8708:7:13","typeDescriptions":{}}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8708:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3907,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"8686:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8686:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3906,"id":3921,"nodeType":"Return","src":"8679:62:13"}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"8508:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8592:8:13","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"set","nameLocation":"8620:3:13","nodeType":"VariableDeclaration","scope":3923,"src":"8601:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3899,"nodeType":"UserDefinedTypeName","pathNode":{"id":3898,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"8601:10:13"},"referencedDeclaration":3842,"src":"8601:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"value","nameLocation":"8633:5:13","nodeType":"VariableDeclaration","scope":3923,"src":"8625:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3901,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8600:39:13"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3923,"src":"8663:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3904,"name":"bool","nodeType":"ElementaryTypeName","src":"8663:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8662:6:13"},"scope":4129,"src":"8583:165:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3937,"nodeType":"Block","src":"8901:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":3933,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"8926:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"8926:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3932,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"8918:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8918:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3931,"id":3936,"nodeType":"Return","src":"8911:26:13"}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"8754:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":3938,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8838:6:13","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"set","nameLocation":"8864:3:13","nodeType":"VariableDeclaration","scope":3938,"src":"8845:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3926,"nodeType":"UserDefinedTypeName","pathNode":{"id":3925,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"8845:10:13"},"referencedDeclaration":3842,"src":"8845:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"8844:24:13"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3938,"src":"8892:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"8892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8891:9:13"},"scope":4129,"src":"8829:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3964,"nodeType":"Block","src":"9369:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3956,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"9414:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"9414:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3958,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"9426:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3955,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9410:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9410:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9402:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"9402:7:13","typeDescriptions":{}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9402:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9394:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3951,"name":"uint160","nodeType":"ElementaryTypeName","src":"9394:7:13","typeDescriptions":{}}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9394:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9386:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3949,"name":"address","nodeType":"ElementaryTypeName","src":"9386:7:13","typeDescriptions":{}}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9386:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3948,"id":3963,"nodeType":"Return","src":"9379:56:13"}]},"documentation":{"id":3939,"nodeType":"StructuredDocumentation","src":"8950:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9295:2:13","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"set","nameLocation":"9317:3:13","nodeType":"VariableDeclaration","scope":3965,"src":"9298:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3941,"nodeType":"UserDefinedTypeName","pathNode":{"id":3940,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"9298:10:13"},"referencedDeclaration":3842,"src":"9298:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"index","nameLocation":"9330:5:13","nodeType":"VariableDeclaration","scope":3965,"src":"9322:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"9322:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9297:39:13"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"9360:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3946,"name":"address","nodeType":"ElementaryTypeName","src":"9360:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9359:9:13"},"scope":4129,"src":"9286:156:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3994,"nodeType":"Block","src":"10063:219:13","statements":[{"assignments":[3979],"declarations":[{"constant":false,"id":3979,"mutability":"mutable","name":"store","nameLocation":"10090:5:13","nodeType":"VariableDeclaration","scope":3994,"src":"10073:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10073:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3978,"nodeType":"ArrayTypeName","src":"10073:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3984,"initialValue":{"arguments":[{"expression":{"id":3981,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"10106:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"10106:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":3980,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"10098:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10098:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10073:44:13"},{"assignments":[3989],"declarations":[{"constant":false,"id":3989,"mutability":"mutable","name":"result","nameLocation":"10144:6:13","nodeType":"VariableDeclaration","scope":3994,"src":"10127:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3987,"name":"address","nodeType":"ElementaryTypeName","src":"10127:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3988,"nodeType":"ArrayTypeName","src":"10127:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3990,"nodeType":"VariableDeclarationStatement","src":"10127:23:13"},{"AST":{"nodeType":"YulBlock","src":"10213:39:13","statements":[{"nodeType":"YulAssignment","src":"10227:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"10237:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10227:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":3989,"isOffset":false,"isSlot":false,"src":"10227:6:13","valueSize":1},{"declaration":3979,"isOffset":false,"isSlot":false,"src":"10237:5:13","valueSize":1}],"id":3991,"nodeType":"InlineAssembly","src":"10204:48:13"},{"expression":{"id":3992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"10269:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3974,"id":3993,"nodeType":"Return","src":"10262:13:13"}]},"documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"9448:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3995,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"9991:6:13","nodeType":"FunctionDefinition","parameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"set","nameLocation":"10017:3:13","nodeType":"VariableDeclaration","scope":3995,"src":"9998:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3968,"nodeType":"UserDefinedTypeName","pathNode":{"id":3967,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"9998:10:13"},"referencedDeclaration":3842,"src":"9998:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9997:24:13"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3995,"src":"10045:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3971,"name":"address","nodeType":"ElementaryTypeName","src":"10045:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3972,"nodeType":"ArrayTypeName","src":"10045:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10044:18:13"},"scope":4129,"src":"9982:300:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":3999,"members":[{"constant":false,"id":3998,"mutability":"mutable","name":"_inner","nameLocation":"10333:6:13","nodeType":"VariableDeclaration","scope":3999,"src":"10329:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3997,"nodeType":"UserDefinedTypeName","pathNode":{"id":3996,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"10329:3:13"},"referencedDeclaration":3541,"src":"10329:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10311:7:13","nodeType":"StructDefinition","scope":4129,"src":"10304:42:13","visibility":"public"},{"body":{"id":4019,"nodeType":"Block","src":"10589:56:13","statements":[{"expression":{"arguments":[{"expression":{"id":4011,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"10611:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"10611:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"10631:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10623:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10623:7:13","typeDescriptions":{}}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10623:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4010,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"10606:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10606:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4009,"id":4018,"nodeType":"Return","src":"10599:39:13"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"10352:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4020,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10525:3:13","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"set","nameLocation":"10545:3:13","nodeType":"VariableDeclaration","scope":4020,"src":"10529:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4002,"nodeType":"UserDefinedTypeName","pathNode":{"id":4001,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"10529:7:13"},"referencedDeclaration":3999,"src":"10529:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"value","nameLocation":"10558:5:13","nodeType":"VariableDeclaration","scope":4020,"src":"10550:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10528:36:13"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4020,"src":"10583:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4007,"name":"bool","nodeType":"ElementaryTypeName","src":"10583:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10582:6:13"},"scope":4129,"src":"10516:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4040,"nodeType":"Block","src":"10889:59:13","statements":[{"expression":{"arguments":[{"expression":{"id":4032,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"10914:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"10914:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"10934:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10926:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10926:7:13","typeDescriptions":{}}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10926:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4031,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"10906:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10906:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4030,"id":4039,"nodeType":"Return","src":"10899:42:13"}]},"documentation":{"id":4021,"nodeType":"StructuredDocumentation","src":"10651:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10822:6:13","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"set","nameLocation":"10845:3:13","nodeType":"VariableDeclaration","scope":4041,"src":"10829:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4023,"nodeType":"UserDefinedTypeName","pathNode":{"id":4022,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"10829:7:13"},"referencedDeclaration":3999,"src":"10829:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"value","nameLocation":"10858:5:13","nodeType":"VariableDeclaration","scope":4041,"src":"10850:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4025,"name":"uint256","nodeType":"ElementaryTypeName","src":"10850:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10828:36:13"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4041,"src":"10883:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4028,"name":"bool","nodeType":"ElementaryTypeName","src":"10883:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10882:6:13"},"scope":4129,"src":"10813:135:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4061,"nodeType":"Block","src":"11112:61:13","statements":[{"expression":{"arguments":[{"expression":{"id":4053,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"11139:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"11139:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"11159:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11151:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11151:7:13","typeDescriptions":{}}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11151:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4052,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"11129:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11129:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4051,"id":4060,"nodeType":"Return","src":"11122:44:13"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"10954:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11038:8:13","nodeType":"FunctionDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"set","nameLocation":"11063:3:13","nodeType":"VariableDeclaration","scope":4062,"src":"11047:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4044,"nodeType":"UserDefinedTypeName","pathNode":{"id":4043,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"11047:7:13"},"referencedDeclaration":3999,"src":"11047:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"value","nameLocation":"11076:5:13","nodeType":"VariableDeclaration","scope":4062,"src":"11068:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11046:36:13"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4062,"src":"11106:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4049,"name":"bool","nodeType":"ElementaryTypeName","src":"11106:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11105:6:13"},"scope":4129,"src":"11029:144:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4076,"nodeType":"Block","src":"11323:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":4072,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11348:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"11348:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4071,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"11340:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11340:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4070,"id":4075,"nodeType":"Return","src":"11333:26:13"}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"11179:70:13","text":" @dev Returns the number of values on the set. O(1)."},"id":4077,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11263:6:13","nodeType":"FunctionDefinition","parameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"set","nameLocation":"11286:3:13","nodeType":"VariableDeclaration","scope":4077,"src":"11270:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4065,"nodeType":"UserDefinedTypeName","pathNode":{"id":4064,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"11270:7:13"},"referencedDeclaration":3999,"src":"11270:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11269:21:13"},"returnParameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4077,"src":"11314:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:9:13"},"scope":4129,"src":"11254:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4097,"nodeType":"Block","src":"11788:55:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4091,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"11817:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"11817:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4093,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4090,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"11813:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11813:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11805:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"11805:7:13","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11805:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4087,"id":4096,"nodeType":"Return","src":"11798:38:13"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"11372:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11717:2:13","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"set","nameLocation":"11736:3:13","nodeType":"VariableDeclaration","scope":4098,"src":"11720:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4080,"nodeType":"UserDefinedTypeName","pathNode":{"id":4079,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"11720:7:13"},"referencedDeclaration":3999,"src":"11720:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"index","nameLocation":"11749:5:13","nodeType":"VariableDeclaration","scope":4098,"src":"11741:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11741:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11719:36:13"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4098,"src":"11779:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"11779:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11778:9:13"},"scope":4129,"src":"11708:135:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4127,"nodeType":"Block","src":"12461:219:13","statements":[{"assignments":[4112],"declarations":[{"constant":false,"id":4112,"mutability":"mutable","name":"store","nameLocation":"12488:5:13","nodeType":"VariableDeclaration","scope":4127,"src":"12471:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12471:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4111,"nodeType":"ArrayTypeName","src":"12471:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4117,"initialValue":{"arguments":[{"expression":{"id":4114,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"12504:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3998,"src":"12504:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3541_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4113,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"12496:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3541_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12496:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12471:44:13"},{"assignments":[4122],"declarations":[{"constant":false,"id":4122,"mutability":"mutable","name":"result","nameLocation":"12542:6:13","nodeType":"VariableDeclaration","scope":4127,"src":"12525:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"12525:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4121,"nodeType":"ArrayTypeName","src":"12525:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4123,"nodeType":"VariableDeclarationStatement","src":"12525:23:13"},{"AST":{"nodeType":"YulBlock","src":"12611:39:13","statements":[{"nodeType":"YulAssignment","src":"12625:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"12635:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12625:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":4122,"isOffset":false,"isSlot":false,"src":"12625:6:13","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"12635:5:13","valueSize":1}],"id":4124,"nodeType":"InlineAssembly","src":"12602:48:13"},{"expression":{"id":4125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"12667:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4107,"id":4126,"nodeType":"Return","src":"12660:13:13"}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"11849:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4128,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12392:6:13","nodeType":"FunctionDefinition","parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"set","nameLocation":"12415:3:13","nodeType":"VariableDeclaration","scope":4128,"src":"12399:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4101,"nodeType":"UserDefinedTypeName","pathNode":{"id":4100,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"12399:7:13"},"referencedDeclaration":3999,"src":"12399:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3999_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12398:21:13"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4128,"src":"12443:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"12443:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4105,"nodeType":"ArrayTypeName","src":"12443:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12442:18:13"},"scope":4129,"src":"12383:297:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4130,"src":"1228:11454:13","usedErrors":[]}],"src":"115:12568:13"},"id":13},"contracts/CMTStaking.sol":{"ast":{"absolutePath":"contracts/CMTStaking.sol","exportedSymbols":{"AddressUpgradeable":[1236],"CMTStaking":[5819],"ContextUpgradeable":[1278],"DoubleEndedQueue":[3530],"ERC1967UpgradeUpgradeable":[510],"EnumerableSet":[4129],"IBeaconUpgradeable":[520],"IERC1822ProxiableUpgradeable":[141],"Initializable":[671],"OwnableUpgradeable":[131],"PausableUpgradeable":[934],"ReentrancyGuardUpgradeable":[993],"SafeCast":[3189],"StorageSlotUpgradeable":[1338],"UUPSUpgradeable":[807]},"id":5820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4131,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","file":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","id":4132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5820,"sourceUnit":3531,"src":"57:68:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":4133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5820,"sourceUnit":4130,"src":"126:65:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5820,"sourceUnit":132,"src":"192:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5820,"sourceUnit":672,"src":"268:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5820,"sourceUnit":808,"src":"344:77:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":4137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5820,"sourceUnit":935,"src":"422:78:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":4138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5820,"sourceUnit":994,"src":"501:85:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4139,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"615:13:14"},"id":4140,"nodeType":"InheritanceSpecifier","src":"615:13:14"},{"baseName":{"id":4141,"name":"ReentrancyGuardUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":993,"src":"735:26:14"},"id":4142,"nodeType":"InheritanceSpecifier","src":"735:26:14"},{"baseName":{"id":4143,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":934,"src":"767:19:14"},"id":4144,"nodeType":"InheritanceSpecifier","src":"767:19:14"},{"baseName":{"id":4145,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"792:18:14"},"id":4146,"nodeType":"InheritanceSpecifier","src":"792:18:14"},{"baseName":{"id":4147,"name":"UUPSUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":807,"src":"816:15:14"},"id":4148,"nodeType":"InheritanceSpecifier","src":"816:15:14"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5819,"linearizedBaseContracts":[5819,807,510,141,131,934,1278,993,671],"name":"CMTStaking","nameLocation":"597:10:14","nodeType":"ContractDefinition","nodes":[{"id":4152,"libraryName":{"id":4149,"name":"DoubleEndedQueue","nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"844:16:14"},"nodeType":"UsingForDirective","src":"838:57:14","typeName":{"id":4151,"nodeType":"UserDefinedTypeName","pathNode":{"id":4150,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"865:29:14"},"referencedDeclaration":3208,"src":"865:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}}},{"id":4156,"libraryName":{"id":4153,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4129,"src":"906:13:14"},"nodeType":"UsingForDirective","src":"900:49:14","typeName":{"id":4155,"nodeType":"UserDefinedTypeName","pathNode":{"id":4154,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"924:24:14"},"referencedDeclaration":3842,"src":"924:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"canonicalName":"CMTStaking.Pool","id":4161,"members":[{"constant":false,"id":4158,"mutability":"mutable","name":"lastAUR","nameLocation":"985:7:14","nodeType":"VariableDeclaration","scope":4161,"src":"977:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"977:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"updateBlock","nameLocation":"1010:11:14","nodeType":"VariableDeclaration","scope":4161,"src":"1002:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Pool","nameLocation":"962:4:14","nodeType":"StructDefinition","scope":5819,"src":"955:73:14","visibility":"public"},{"canonicalName":"CMTStaking.StakeInfo","id":4170,"members":[{"constant":false,"id":4163,"mutability":"mutable","name":"stakeAmount","nameLocation":"1069:11:14","nodeType":"VariableDeclaration","scope":4170,"src":"1061:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"rewardDebt","nameLocation":"1098:10:14","nodeType":"VariableDeclaration","scope":4170,"src":"1090:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1090:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"pendingReward","nameLocation":"1126:13:14","nodeType":"VariableDeclaration","scope":4170,"src":"1118:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4169,"mutability":"mutable","name":"updateBlock","nameLocation":"1157:11:14","nodeType":"VariableDeclaration","scope":4170,"src":"1149:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1041:9:14","nodeType":"StructDefinition","scope":5819,"src":"1034:141:14","visibility":"public"},{"canonicalName":"CMTStaking.Withdrawal","id":4175,"members":[{"constant":false,"id":4172,"mutability":"mutable","name":"amount","nameLocation":"1217:6:14","nodeType":"VariableDeclaration","scope":4175,"src":"1209:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1209:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"timestamp","nameLocation":"1241:9:14","nodeType":"VariableDeclaration","scope":4175,"src":"1233:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Withdrawal","nameLocation":"1188:10:14","nodeType":"StructDefinition","scope":5819,"src":"1181:76:14","visibility":"public"},{"constant":false,"functionSelector":"aced1661","id":4177,"mutability":"mutable","name":"keeper","nameLocation":"1278:6:14","nodeType":"VariableDeclaration","scope":5819,"src":"1263:21:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4176,"name":"address","nodeType":"ElementaryTypeName","src":"1263:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":4180,"mutability":"mutable","name":"_validators","nameLocation":"1324:11:14","nodeType":"VariableDeclaration","scope":5819,"src":"1291:44:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4179,"nodeType":"UserDefinedTypeName","pathNode":{"id":4178,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"1291:24:14"},"referencedDeclaration":3842,"src":"1291:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"functionSelector":"d4c6d1de","id":4183,"mutability":"mutable","name":"validatorPool","nameLocation":"1354:13:14","nodeType":"VariableDeclaration","scope":5819,"src":"1342:25:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4182,"nodeType":"UserDefinedTypeName","pathNode":{"id":4181,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"1342:4:14"},"referencedDeclaration":4161,"src":"1342:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"public"},{"constant":false,"functionSelector":"f0544ac8","id":4186,"mutability":"mutable","name":"stakerPool","nameLocation":"1385:10:14","nodeType":"VariableDeclaration","scope":5819,"src":"1373:22:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4185,"nodeType":"UserDefinedTypeName","pathNode":{"id":4184,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"1373:4:14"},"referencedDeclaration":4161,"src":"1373:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"public"},{"constant":false,"functionSelector":"340c5a25","id":4191,"mutability":"mutable","name":"inactivePools","nameLocation":"1433:13:14","nodeType":"VariableDeclaration","scope":5819,"src":"1401:45:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$4161_storage_$","typeString":"mapping(address => struct CMTStaking.Pool)"},"typeName":{"id":4190,"keyType":{"id":4187,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1401:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$4161_storage_$","typeString":"mapping(address => struct CMTStaking.Pool)"},"valueType":{"id":4189,"nodeType":"UserDefinedTypeName","pathNode":{"id":4188,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"1420:4:14"},"referencedDeclaration":4161,"src":"1420:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f6a2314a","id":4198,"mutability":"mutable","name":"stakeTable","nameLocation":"1551:10:14","nodeType":"VariableDeclaration","scope":5819,"src":"1494:67:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo))"},"typeName":{"id":4197,"keyType":{"id":4192,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1494:49:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo))"},"valueType":{"id":4196,"keyType":{"id":4193,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1513:29:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo)"},"valueType":{"id":4195,"nodeType":"UserDefinedTypeName","pathNode":{"id":4194,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"1532:9:14"},"referencedDeclaration":4170,"src":"1532:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"29451893","id":4203,"mutability":"mutable","name":"withdrawTable","nameLocation":"1625:13:14","nodeType":"VariableDeclaration","scope":5819,"src":"1568:70:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque)"},"typeName":{"id":4202,"keyType":{"id":4199,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1568:49:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque)"},"valueType":{"id":4201,"nodeType":"UserDefinedTypeName","pathNode":{"id":4200,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"1587:29:14"},"referencedDeclaration":3208,"src":"1587:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}}},"visibility":"public"},{"constant":false,"functionSelector":"57525cbc","id":4205,"mutability":"mutable","name":"validatorLimit","nameLocation":"1659:14:14","nodeType":"VariableDeclaration","scope":5819,"src":"1645:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4204,"name":"uint32","nodeType":"ElementaryTypeName","src":"1645:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"3fd8b02f","id":4207,"mutability":"mutable","name":"lockPeriod","nameLocation":"1694:10:14","nodeType":"VariableDeclaration","scope":5819,"src":"1680:24:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4206,"name":"uint32","nodeType":"ElementaryTypeName","src":"1680:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"7ea5db42","id":4209,"mutability":"mutable","name":"validatorRewardPerBlock","nameLocation":"1726:23:14","nodeType":"VariableDeclaration","scope":5819,"src":"1711:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"24e770d0","id":4211,"mutability":"mutable","name":"stakerRewardPerBlock","nameLocation":"1770:20:14","nodeType":"VariableDeclaration","scope":5819,"src":"1755:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"94409a56","id":4213,"mutability":"mutable","name":"totalStakeAmount","nameLocation":"1812:16:14","nodeType":"VariableDeclaration","scope":5819,"src":"1797:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d849a502","id":4215,"mutability":"mutable","name":"activeStakeAmount","nameLocation":"1849:17:14","nodeType":"VariableDeclaration","scope":5819,"src":"1834:32:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"45f7b8f4","id":4218,"mutability":"constant","name":"AUR_PREC","nameLocation":"1896:8:14","nodeType":"VariableDeclaration","scope":5819,"src":"1872:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1907:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"functionSelector":"27ed7188","id":4220,"mutability":"immutable","name":"MIN_STAKE_AMOUNT","nameLocation":"1943:16:14","nodeType":"VariableDeclaration","scope":5819,"src":"1918:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b6857844","id":4222,"mutability":"immutable","name":"MIN_WITHDRAW_AMOUNT","nameLocation":"1990:19:14","nodeType":"VariableDeclaration","scope":5819,"src":"1965:44:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1965:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":4228,"name":"Received","nameLocation":"2022:8:14","nodeType":"EventDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2047:6:14","nodeType":"VariableDeclaration","scope":4228,"src":"2031:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4223,"name":"address","nodeType":"ElementaryTypeName","src":"2031:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4226,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2063:6:14","nodeType":"VariableDeclaration","scope":4228,"src":"2055:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2055:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2030:40:14"},"src":"2016:55:14"},{"anonymous":false,"id":4234,"name":"RewardPerBlockChanged","nameLocation":"2082:21:14","nodeType":"EventDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"indexed":false,"mutability":"mutable","name":"validatorReward","nameLocation":"2112:15:14","nodeType":"VariableDeclaration","scope":4234,"src":"2104:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4232,"indexed":false,"mutability":"mutable","name":"stakerReward","nameLocation":"2137:12:14","nodeType":"VariableDeclaration","scope":4234,"src":"2129:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2129:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2103:47:14"},"src":"2076:75:14"},{"anonymous":false,"id":4238,"name":"LockPeriodChanged","nameLocation":"2162:17:14","nodeType":"EventDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"indexed":false,"mutability":"mutable","name":"newLockPeriod","nameLocation":"2187:13:14","nodeType":"VariableDeclaration","scope":4238,"src":"2180:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4235,"name":"uint32","nodeType":"ElementaryTypeName","src":"2180:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2179:22:14"},"src":"2156:46:14"},{"anonymous":false,"id":4244,"name":"ValidatorChanged","nameLocation":"2213:16:14","nodeType":"EventDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"indexed":false,"mutability":"mutable","name":"validator","nameLocation":"2238:9:14","nodeType":"VariableDeclaration","scope":4244,"src":"2230:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4239,"name":"address","nodeType":"ElementaryTypeName","src":"2230:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4242,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"2254:7:14","nodeType":"VariableDeclaration","scope":4244,"src":"2249:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4241,"name":"bool","nodeType":"ElementaryTypeName","src":"2249:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2229:33:14"},"src":"2207:56:14"},{"anonymous":false,"id":4252,"name":"Stake","nameLocation":"2274:5:14","nodeType":"EventDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2296:6:14","nodeType":"VariableDeclaration","scope":4252,"src":"2280:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4245,"name":"address","nodeType":"ElementaryTypeName","src":"2280:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4248,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"2320:9:14","nodeType":"VariableDeclaration","scope":4252,"src":"2304:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4247,"name":"address","nodeType":"ElementaryTypeName","src":"2304:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4250,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2339:6:14","nodeType":"VariableDeclaration","scope":4252,"src":"2331:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2331:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2279:67:14"},"src":"2268:79:14"},{"anonymous":false,"id":4262,"name":"Unstake","nameLocation":"2358:7:14","nodeType":"EventDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2382:6:14","nodeType":"VariableDeclaration","scope":4262,"src":"2366:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4253,"name":"address","nodeType":"ElementaryTypeName","src":"2366:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4256,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"2406:9:14","nodeType":"VariableDeclaration","scope":4262,"src":"2390:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4255,"name":"address","nodeType":"ElementaryTypeName","src":"2390:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4258,"indexed":false,"mutability":"mutable","name":"unstakeAmount","nameLocation":"2425:13:14","nodeType":"VariableDeclaration","scope":4262,"src":"2417:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2417:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4260,"indexed":false,"mutability":"mutable","name":"claimedReward","nameLocation":"2448:13:14","nodeType":"VariableDeclaration","scope":4262,"src":"2440:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2365:97:14"},"src":"2352:111:14"},{"anonymous":false,"id":4268,"name":"WithdrawalInitiated","nameLocation":"2474:19:14","nodeType":"EventDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2510:7:14","nodeType":"VariableDeclaration","scope":4268,"src":"2494:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4263,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4266,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2527:6:14","nodeType":"VariableDeclaration","scope":4268,"src":"2519:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2493:41:14"},"src":"2468:67:14"},{"anonymous":false,"id":4276,"name":"WithdrawalCompleted","nameLocation":"2546:19:14","nodeType":"EventDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2582:7:14","nodeType":"VariableDeclaration","scope":4276,"src":"2566:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4269,"name":"address","nodeType":"ElementaryTypeName","src":"2566:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4272,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2607:9:14","nodeType":"VariableDeclaration","scope":4276,"src":"2591:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"2591:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4274,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2626:6:14","nodeType":"VariableDeclaration","scope":4276,"src":"2618:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2618:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2565:68:14"},"src":"2540:94:14"},{"body":{"id":4304,"nodeType":"Block","src":"2756:208:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4284,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"2766:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2766:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4286,"nodeType":"ExpressionStatement","src":"2766:22:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2806:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2824:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"39","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2830:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"2824:7:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"}},"src":"2806:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d696e696d616c207374616b6520616d6f756e742e","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2833:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32","typeString":"literal_string \"Invalid minimal stake amount.\""},"value":"Invalid minimal stake amount."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32","typeString":"literal_string \"Invalid minimal stake amount.\""}],"id":4287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2798:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2798:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4295,"nodeType":"ExpressionStatement","src":"2798:67:14"},{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4296,"name":"MIN_STAKE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"2875:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4297,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2894:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2875:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"2875:33:14"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4300,"name":"MIN_WITHDRAW_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"2918:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4301,"name":"minWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"2940:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4303,"nodeType":"ExpressionStatement","src":"2918:39:14"}]},"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"2640:48:14","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":4305,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"minStakeAmount","nameLocation":"2713:14:14","nodeType":"VariableDeclaration","scope":4305,"src":"2705:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"minWithdrawAmount","nameLocation":"2737:17:14","nodeType":"VariableDeclaration","scope":4305,"src":"2729:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2704:51:14"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[],"src":"2756:0:14"},"scope":5819,"src":"2693:271:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4348,"nodeType":"Block","src":"3045:471:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4314,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3055:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3055:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4316,"nodeType":"ExpressionStatement","src":"3055:24:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4317,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"3089:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3089:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4319,"nodeType":"ExpressionStatement","src":"3089:17:14"},{"expression":{"arguments":[{"id":4321,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"3135:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4320,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"3116:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3116:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4323,"nodeType":"ExpressionStatement","src":"3116:25:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4324,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3151:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3151:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4326,"nodeType":"ExpressionStatement","src":"3151:24:14"},{"expression":{"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"3186:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4328,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3195:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3195:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3186:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4331,"nodeType":"ExpressionStatement","src":"3186:19:14"},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"validatorLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3257:14:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3231","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3274:2:14","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"3257:19:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4335,"nodeType":"ExpressionStatement","src":"3257:19:14"},{"expression":{"arguments":[{"hexValue":"35","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3353:7:14","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"}],"id":4336,"name":"_setRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"3334:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3334:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4339,"nodeType":"ExpressionStatement","src":"3334:27:14"},{"expression":{"arguments":[{"hexValue":"37","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3436:6:14","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"}],"id":4340,"name":"_setLockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"3421:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3421:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4343,"nodeType":"ExpressionStatement","src":"3421:22:14"},{"expression":{"arguments":[{"id":4345,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"3499:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4344,"name":"_addValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"3485:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3485:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4347,"nodeType":"ExpressionStatement","src":"3485:24:14"}]},"functionSelector":"485cc955","id":4349,"implemented":true,"kind":"function","modifiers":[{"id":4312,"kind":"modifierInvocation","modifierName":{"id":4311,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":591,"src":"3033:11:14"},"nodeType":"ModifierInvocation","src":"3033:11:14"}],"name":"initialize","nameLocation":"2979:10:14","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"owner","nameLocation":"2998:5:14","nodeType":"VariableDeclaration","scope":4349,"src":"2990:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4306,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"validator","nameLocation":"3013:9:14","nodeType":"VariableDeclaration","scope":4349,"src":"3005:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4308,"name":"address","nodeType":"ElementaryTypeName","src":"3005:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2989:34:14"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[],"src":"3045:0:14"},"scope":5819,"src":"2970:546:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4359,"nodeType":"Block","src":"3549:53:14","statements":[{"eventCall":{"arguments":[{"expression":{"id":4353,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3573:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3573:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3585:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3585:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4352,"name":"Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"3564:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4358,"nodeType":"EmitStatement","src":"3559:36:14"}]},"id":4360,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4350,"nodeType":"ParameterList","parameters":[],"src":"3529:2:14"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[],"src":"3549:0:14"},"scope":5819,"src":"3522:80:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4367,"nodeType":"Block","src":"3662:25:14","statements":[{"expression":{"hexValue":"31","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":4364,"id":4366,"nodeType":"Return","src":"3672:8:14"}]},"functionSelector":"0d8e6e2c","id":4368,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3617:10:14","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[],"src":"3627:2:14"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4368,"src":"3653:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3652:9:14"},"scope":5819,"src":"3608:79:14","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":4376,"nodeType":"Block","src":"3844:25:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4373,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3854:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3854:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4375,"nodeType":"ExpressionStatement","src":"3854:8:14"}]},"functionSelector":"8456cb59","id":4377,"implemented":true,"kind":"function","modifiers":[{"id":4371,"kind":"modifierInvocation","modifierName":{"id":4370,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3834:9:14"},"nodeType":"ModifierInvocation","src":"3834:9:14"}],"name":"pause","nameLocation":"3817:5:14","nodeType":"FunctionDefinition","parameters":{"id":4369,"nodeType":"ParameterList","parameters":[],"src":"3822:2:14"},"returnParameters":{"id":4372,"nodeType":"ParameterList","parameters":[],"src":"3844:0:14"},"scope":5819,"src":"3808:61:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4385,"nodeType":"Block","src":"3913:27:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4382,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3923:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3923:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4384,"nodeType":"ExpressionStatement","src":"3923:10:14"}]},"functionSelector":"3f4ba83a","id":4386,"implemented":true,"kind":"function","modifiers":[{"id":4380,"kind":"modifierInvocation","modifierName":{"id":4379,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3903:9:14"},"nodeType":"ModifierInvocation","src":"3903:9:14"}],"name":"unpause","nameLocation":"3884:7:14","nodeType":"FunctionDefinition","parameters":{"id":4378,"nodeType":"ParameterList","parameters":[],"src":"3891:2:14"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[],"src":"3913:0:14"},"scope":5819,"src":"3875:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4407,"nodeType":"Block","src":"4047:125:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"4065:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4074:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4065:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265776172642070657220626c6f636b2e","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4077:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e","typeString":"literal_string \"Invalid reward per block.\""},"value":"Invalid reward per block."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e","typeString":"literal_string \"Invalid reward per block.\""}],"id":4393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4057:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4057:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4399,"nodeType":"ExpressionStatement","src":"4057:48:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4400,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"4115:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function () returns (struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"tuple(struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"id":4402,"nodeType":"ExpressionStatement","src":"4115:14:14"},{"expression":{"arguments":[{"id":4404,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"4158:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4403,"name":"_setRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"4139:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4139:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4406,"nodeType":"ExpressionStatement","src":"4139:26:14"}]},"functionSelector":"bb872b4a","id":4408,"implemented":true,"kind":"function","modifiers":[{"id":4391,"kind":"modifierInvocation","modifierName":{"id":4390,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4037:9:14"},"nodeType":"ModifierInvocation","src":"4037:9:14"}],"name":"setRewardPerBlock","nameLocation":"3994:17:14","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"amount","nameLocation":"4020:6:14","nodeType":"VariableDeclaration","scope":4408,"src":"4012:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"4012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4011:16:14"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[],"src":"4047:0:14"},"scope":5819,"src":"3985:187:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4426,"nodeType":"Block","src":"4235:98:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"4253:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4263:6:14","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"4253:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f636b20706572696f642e","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4271:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8","typeString":"literal_string \"Invalid lock period.\""},"value":"Invalid lock period."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8","typeString":"literal_string \"Invalid lock period.\""}],"id":4415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4245:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4245:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4421,"nodeType":"ExpressionStatement","src":"4245:49:14"},{"expression":{"arguments":[{"id":4423,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"4319:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4422,"name":"_setLockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"4304:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4304:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4425,"nodeType":"ExpressionStatement","src":"4304:22:14"}]},"functionSelector":"f489f23b","id":4427,"implemented":true,"kind":"function","modifiers":[{"id":4413,"kind":"modifierInvocation","modifierName":{"id":4412,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4225:9:14"},"nodeType":"ModifierInvocation","src":"4225:9:14"}],"name":"setLockPeriod","nameLocation":"4187:13:14","nodeType":"FunctionDefinition","parameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"period","nameLocation":"4208:6:14","nodeType":"VariableDeclaration","scope":4427,"src":"4201:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4409,"name":"uint32","nodeType":"ElementaryTypeName","src":"4201:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4200:15:14"},"returnParameters":{"id":4414,"nodeType":"ParameterList","parameters":[],"src":"4235:0:14"},"scope":5819,"src":"4178:155:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4448,"nodeType":"Block","src":"4396:104:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"newKeeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"4414:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4435:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4427:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4436,"name":"address","nodeType":"ElementaryTypeName","src":"4427:7:14","typeDescriptions":{}}},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4427:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4414:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206b656570657220616464726573732e","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4439:25:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f","typeString":"literal_string \"Invalid keeper address.\""},"value":"Invalid keeper address."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f","typeString":"literal_string \"Invalid keeper address.\""}],"id":4434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4406:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4406:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4443,"nodeType":"ExpressionStatement","src":"4406:59:14"},{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"4475:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4445,"name":"newKeeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"4484:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4475:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4447,"nodeType":"ExpressionStatement","src":"4475:18:14"}]},"functionSelector":"748747e6","id":4449,"implemented":true,"kind":"function","modifiers":[{"id":4432,"kind":"modifierInvocation","modifierName":{"id":4431,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4386:9:14"},"nodeType":"ModifierInvocation","src":"4386:9:14"}],"name":"setKeeper","nameLocation":"4348:9:14","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"newKeeper","nameLocation":"4366:9:14","nodeType":"VariableDeclaration","scope":4449,"src":"4358:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4428,"name":"address","nodeType":"ElementaryTypeName","src":"4358:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4357:19:14"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[],"src":"4396:0:14"},"scope":5819,"src":"4339:161:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4469,"nodeType":"Block","src":"4603:111:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"4621:5:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4458,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"4630:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"4630:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4630:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4621:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c696d69742076616c75652e","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4652:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a","typeString":"literal_string \"Invalid limit value.\""},"value":"Invalid limit value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a","typeString":"literal_string \"Invalid limit value.\""}],"id":4456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4613:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4613:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4464,"nodeType":"ExpressionStatement","src":"4613:62:14"},{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4465,"name":"validatorLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"4685:14:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4466,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"4702:5:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4685:22:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4468,"nodeType":"ExpressionStatement","src":"4685:22:14"}]},"functionSelector":"522abc40","id":4470,"implemented":true,"kind":"function","modifiers":[{"id":4454,"kind":"modifierInvocation","modifierName":{"id":4453,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4593:9:14"},"nodeType":"ModifierInvocation","src":"4593:9:14"}],"name":"setValidatorLimit","nameLocation":"4552:17:14","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"limit","nameLocation":"4577:5:14","nodeType":"VariableDeclaration","scope":4470,"src":"4570:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4450,"name":"uint32","nodeType":"ElementaryTypeName","src":"4570:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4569:14:14"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[],"src":"4603:0:14"},"scope":5819,"src":"4543:171:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4481,"nodeType":"Block","src":"4801:41:14","statements":[{"expression":{"arguments":[{"id":4478,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"4825:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4477,"name":"_addValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"4811:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4480,"nodeType":"ExpressionStatement","src":"4811:24:14"}]},"functionSelector":"4d238c8e","id":4482,"implemented":true,"kind":"function","modifiers":[{"id":4475,"kind":"modifierInvocation","modifierName":{"id":4474,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4791:9:14"},"nodeType":"ModifierInvocation","src":"4791:9:14"}],"name":"addValidator","nameLocation":"4750:12:14","nodeType":"FunctionDefinition","parameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"validator","nameLocation":"4771:9:14","nodeType":"VariableDeclaration","scope":4482,"src":"4763:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4471,"name":"address","nodeType":"ElementaryTypeName","src":"4763:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4762:19:14"},"returnParameters":{"id":4476,"nodeType":"ParameterList","parameters":[],"src":"4801:0:14"},"scope":5819,"src":"4741:101:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4576,"nodeType":"Block","src":"4939:659:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4490,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"4957:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"4957:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4957:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4980:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4957:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742072656d6f766520746865206f6e6c792076616c696461746f722e","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4983:35:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a","typeString":"literal_string \"Cannot remove the only validator.\""},"value":"Cannot remove the only validator."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a","typeString":"literal_string \"Cannot remove the only validator.\""}],"id":4489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4949:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4949:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4497,"nodeType":"ExpressionStatement","src":"4949:70:14"},{"expression":{"arguments":[{"arguments":[{"id":4500,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5055:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4499,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"5037:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5037:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f72206e6f74206578697374206f7220686173206265656e2072656d6f7665642e","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5067:42:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""},"value":"Validator not exist or has been removed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""}],"id":4498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5029:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5029:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4504,"nodeType":"ExpressionStatement","src":"5029:81:14"},{"assignments":[4507,4510],"declarations":[{"constant":false,"id":4507,"mutability":"mutable","name":"vPool","nameLocation":"5134:5:14","nodeType":"VariableDeclaration","scope":4576,"src":"5122:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4506,"nodeType":"UserDefinedTypeName","pathNode":{"id":4505,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"5122:4:14"},"referencedDeclaration":4161,"src":"5122:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},{"constant":false,"id":4510,"mutability":"mutable","name":"sPool","nameLocation":"5153:5:14","nodeType":"VariableDeclaration","scope":4576,"src":"5141:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4509,"nodeType":"UserDefinedTypeName","pathNode":{"id":4508,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"5141:4:14"},"referencedDeclaration":4161,"src":"5141:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"}],"id":4513,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4511,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"5162:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function () returns (struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5162:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"tuple(struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"5121:55:14"},{"assignments":[4516],"declarations":[{"constant":false,"id":4516,"mutability":"mutable","name":"info","nameLocation":"5203:4:14","nodeType":"VariableDeclaration","scope":4576,"src":"5186:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":4515,"nodeType":"UserDefinedTypeName","pathNode":{"id":4514,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"5186:9:14"},"referencedDeclaration":4170,"src":"5186:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"id":4525,"initialValue":{"baseExpression":{"baseExpression":{"id":4517,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"5210:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4522,"indexExpression":{"arguments":[{"hexValue":"30","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5229:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5221:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4518,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:14","typeDescriptions":{}}},"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5221:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5210:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4524,"indexExpression":{"id":4523,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5233:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5210:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5186:57:14"},{"expression":{"arguments":[{"id":4527,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"5268:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4528,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"5275:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4526,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"5253:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5253:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4530,"nodeType":"ExpressionStatement","src":"5253:27:14"},{"expression":{"arguments":[{"id":4532,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"5308:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4533,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"5315:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4531,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"5290:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5290:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4535,"nodeType":"ExpressionStatement","src":"5290:30:14"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4536,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"5330:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"5330:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4539,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5349:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"5349:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5330:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ExpressionStatement","src":"5330:31:14"},{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4543,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"5371:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4549,"indexExpression":{"arguments":[{"hexValue":"30","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5390:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5382:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4544,"name":"address","nodeType":"ElementaryTypeName","src":"5382:7:14","typeDescriptions":{}}},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5382:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5371:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4550,"indexExpression":{"id":4548,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5394:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5371:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4551,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"5407:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"src":"5371:40:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"id":4553,"nodeType":"ExpressionStatement","src":"5371:40:14"},{"expression":{"arguments":[{"id":4557,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5441:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4554,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"5422:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":4556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"5422:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3842_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5422:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4559,"nodeType":"ExpressionStatement","src":"5422:29:14"},{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4560,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"5461:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$4161_storage_$","typeString":"mapping(address => struct CMTStaking.Pool storage ref)"}},"id":4562,"indexExpression":{"id":4561,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5475:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5461:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4563,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"5488:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"src":"5461:32:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"id":4565,"nodeType":"ExpressionStatement","src":"5461:32:14"},{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4566,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"5504:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":4567,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"5525:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"5525:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5504:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4570,"nodeType":"ExpressionStatement","src":"5504:37:14"},{"eventCall":{"arguments":[{"id":4572,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5574:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5585:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4571,"name":"ValidatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"5557:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5557:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4575,"nodeType":"EmitStatement","src":"5552:39:14"}]},"functionSelector":"40a141ff","id":4577,"implemented":true,"kind":"function","modifiers":[{"id":4487,"kind":"modifierInvocation","modifierName":{"id":4486,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4929:9:14"},"nodeType":"ModifierInvocation","src":"4929:9:14"}],"name":"removeValidator","nameLocation":"4885:15:14","nodeType":"FunctionDefinition","parameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"validator","nameLocation":"4909:9:14","nodeType":"VariableDeclaration","scope":4577,"src":"4901:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4483,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4900:19:14"},"returnParameters":{"id":4488,"nodeType":"ParameterList","parameters":[],"src":"4939:0:14"},"scope":5819,"src":"4876:722:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4664,"nodeType":"Block","src":"5836:548:14","statements":[{"assignments":[4588,null],"declarations":[{"constant":false,"id":4588,"mutability":"mutable","name":"vPool","nameLocation":"5859:5:14","nodeType":"VariableDeclaration","scope":4664,"src":"5847:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4587,"nodeType":"UserDefinedTypeName","pathNode":{"id":4586,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"5847:4:14"},"referencedDeclaration":4161,"src":"5847:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},null],"id":4591,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4589,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"5870:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function () returns (struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5870:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"tuple(struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"5846:38:14"},{"assignments":[4594],"declarations":[{"constant":false,"id":4594,"mutability":"mutable","name":"info","nameLocation":"5911:4:14","nodeType":"VariableDeclaration","scope":4664,"src":"5894:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":4593,"nodeType":"UserDefinedTypeName","pathNode":{"id":4592,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"5894:9:14"},"referencedDeclaration":4170,"src":"5894:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"id":4604,"initialValue":{"baseExpression":{"baseExpression":{"id":4595,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"5918:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4600,"indexExpression":{"arguments":[{"hexValue":"30","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5937:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5929:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4596,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:14","typeDescriptions":{}}},"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5929:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5918:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4603,"indexExpression":{"expression":{"id":4601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5941:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5941:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5918:34:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5894:58:14"},{"condition":{"arguments":[{"expression":{"id":4606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5984:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5984:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4605,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"5966:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5966:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4620,"nodeType":"IfStatement","src":"5962:131:14","trueBody":{"id":4619,"nodeType":"Block","src":"5997:96:14","statements":[{"expression":{"arguments":[{"id":4610,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"6026:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4611,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6033:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4609,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"6011:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6011:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4613,"nodeType":"ExpressionStatement","src":"6011:27:14"},{"expression":{"arguments":[{"id":4615,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"6070:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4616,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6077:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4614,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"6052:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6052:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"6052:30:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"6111:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6120:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6111:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"6125:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4626,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6135:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"6135:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6125:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6111:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74206f7220696e73756666696369656e742062616c616e63652e","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6155:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92","typeString":"literal_string \"Invalid amount or insufficient balance.\""},"value":"Invalid amount or insufficient balance."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92","typeString":"literal_string \"Invalid amount or insufficient balance.\""}],"id":4621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6103:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6103:94:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4632,"nodeType":"ExpressionStatement","src":"6103:94:14"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4633,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6207:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"6207:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"6229:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6207:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4638,"nodeType":"ExpressionStatement","src":"6207:28:14"},{"expression":{"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4639,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6245:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"6245:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4642,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6264:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6264:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6245:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4645,"nodeType":"ExpressionStatement","src":"6245:31:14"},{"expression":{"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4646,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"6286:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4653,"indexExpression":{"arguments":[{"hexValue":"30","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6297:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4647,"name":"address","nodeType":"ElementaryTypeName","src":"6297:7:14","typeDescriptions":{}}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6297:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6286:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4654,"indexExpression":{"expression":{"id":4651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6309:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6309:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6286:34:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4655,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6323:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"src":"6286:41:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"id":4657,"nodeType":"ExpressionStatement","src":"6286:41:14"},{"expression":{"arguments":[{"expression":{"id":4659,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6358:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6358:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4661,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"6370:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4658,"name":"_initiateWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"6338:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6338:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4663,"nodeType":"ExpressionStatement","src":"6338:39:14"}]},"functionSelector":"eaf7c9dc","id":4665,"implemented":true,"kind":"function","modifiers":[{"id":4582,"kind":"modifierInvocation","modifierName":{"id":4581,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":987,"src":"5809:12:14"},"nodeType":"ModifierInvocation","src":"5809:12:14"},{"id":4584,"kind":"modifierInvocation","modifierName":{"id":4583,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":856,"src":"5822:13:14"},"nodeType":"ModifierInvocation","src":"5822:13:14"}],"name":"validatorWithdraw","nameLocation":"5766:17:14","nodeType":"FunctionDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"amount","nameLocation":"5792:6:14","nodeType":"VariableDeclaration","scope":4665,"src":"5784:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5784:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5783:16:14"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[],"src":"5836:0:14"},"scope":5819,"src":"5757:627:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4804,"nodeType":"Block","src":"6597:984:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6615:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6615:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4675,"name":"MIN_STAKE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"6628:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6615:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616d6f756e74206d757374203e3d204d494e5f5354414b455f414d4f554e542e","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6646:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca","typeString":"literal_string \"Stake amount must >= MIN_STAKE_AMOUNT.\""},"value":"Stake amount must >= MIN_STAKE_AMOUNT."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca","typeString":"literal_string \"Stake amount must >= MIN_STAKE_AMOUNT.\""}],"id":4672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6607:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6607:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4679,"nodeType":"ExpressionStatement","src":"6607:80:14"},{"expression":{"arguments":[{"arguments":[{"id":4682,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"6724:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4681,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"6706:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6706:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f72206e6f74206578697374206f7220686173206265656e2072656d6f7665642e","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6736:42:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""},"value":"Validator not exist or has been removed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""}],"id":4680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6698:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6698:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4686,"nodeType":"ExpressionStatement","src":"6698:81:14"},{"assignments":[4689,4692],"declarations":[{"constant":false,"id":4689,"mutability":"mutable","name":"vPool","nameLocation":"6803:5:14","nodeType":"VariableDeclaration","scope":4804,"src":"6791:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4688,"nodeType":"UserDefinedTypeName","pathNode":{"id":4687,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"6791:4:14"},"referencedDeclaration":4161,"src":"6791:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},{"constant":false,"id":4692,"mutability":"mutable","name":"sPool","nameLocation":"6822:5:14","nodeType":"VariableDeclaration","scope":4804,"src":"6810:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4691,"nodeType":"UserDefinedTypeName","pathNode":{"id":4690,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"6810:4:14"},"referencedDeclaration":4161,"src":"6810:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"}],"id":4695,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4693,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"6831:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function () returns (struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6831:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"tuple(struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"6790:55:14"},{"assignments":[4698],"declarations":[{"constant":false,"id":4698,"mutability":"mutable","name":"vInfo","nameLocation":"6872:5:14","nodeType":"VariableDeclaration","scope":4804,"src":"6855:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":4697,"nodeType":"UserDefinedTypeName","pathNode":{"id":4696,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"6855:9:14"},"referencedDeclaration":4170,"src":"6855:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"id":4707,"initialValue":{"baseExpression":{"baseExpression":{"id":4699,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"6880:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4704,"indexExpression":{"arguments":[{"hexValue":"30","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6899:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6891:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4700,"name":"address","nodeType":"ElementaryTypeName","src":"6891:7:14","typeDescriptions":{}}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6891:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6880:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4706,"indexExpression":{"id":4705,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"6903:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6880:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6855:58:14"},{"assignments":[4710],"declarations":[{"constant":false,"id":4710,"mutability":"mutable","name":"sInfo","nameLocation":"6940:5:14","nodeType":"VariableDeclaration","scope":4804,"src":"6923:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":4709,"nodeType":"UserDefinedTypeName","pathNode":{"id":4708,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"6923:9:14"},"referencedDeclaration":4170,"src":"6923:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"id":4717,"initialValue":{"baseExpression":{"baseExpression":{"id":4711,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"6948:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4713,"indexExpression":{"id":4712,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"6959:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6948:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4716,"indexExpression":{"expression":{"id":4714,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6970:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6970:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6948:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6923:58:14"},{"expression":{"arguments":[{"id":4719,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"7006:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4720,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"7013:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4718,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"6991:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6991:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4722,"nodeType":"ExpressionStatement","src":"6991:28:14"},{"expression":{"arguments":[{"id":4724,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"7044:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4725,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7051:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4723,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"7029:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7029:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4727,"nodeType":"ExpressionStatement","src":"7029:28:14"},{"expression":{"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4728,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"7067:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"7067:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7088:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7088:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7067:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4734,"nodeType":"ExpressionStatement","src":"7067:30:14"},{"expression":{"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4735,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7107:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"7107:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4738,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7128:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7128:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7107:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4741,"nodeType":"ExpressionStatement","src":"7107:30:14"},{"expression":{"arguments":[{"id":4743,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"7165:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4744,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"7172:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4742,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"7147:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7147:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4746,"nodeType":"ExpressionStatement","src":"7147:31:14"},{"expression":{"arguments":[{"id":4748,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"7206:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4749,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7213:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4747,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"7188:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7188:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4751,"nodeType":"ExpressionStatement","src":"7188:31:14"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4752,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"7229:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"7229:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4755,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7249:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7249:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4758,"nodeType":"ExpressionStatement","src":"7229:32:14"},{"expression":{"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4759,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7271:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"7271:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4762,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7291:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7291:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7271:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4765,"nodeType":"ExpressionStatement","src":"7271:32:14"},{"expression":{"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4766,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"7313:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4772,"indexExpression":{"arguments":[{"hexValue":"30","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7332:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7324:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4767,"name":"address","nodeType":"ElementaryTypeName","src":"7324:7:14","typeDescriptions":{}}},"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7324:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7313:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4773,"indexExpression":{"id":4771,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"7336:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7313:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4774,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"7349:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"src":"7313:41:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"id":4776,"nodeType":"ExpressionStatement","src":"7313:41:14"},{"expression":{"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4777,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"7364:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4781,"indexExpression":{"id":4778,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"7375:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7364:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4782,"indexExpression":{"expression":{"id":4779,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7386:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7386:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7364:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4783,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7400:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"src":"7364:41:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"id":4785,"nodeType":"ExpressionStatement","src":"7364:41:14"},{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4786,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"7450:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7471:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7471:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7450:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"7450:30:14"},{"expression":{"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4791,"name":"totalStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"7490:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4792,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7510:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7510:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7490:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4795,"nodeType":"ExpressionStatement","src":"7490:29:14"},{"eventCall":{"arguments":[{"expression":{"id":4797,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7541:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7541:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4799,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"7553:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7564:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7564:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4796,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"7535:5:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7535:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4803,"nodeType":"EmitStatement","src":"7530:44:14"}]},"functionSelector":"26476204","id":4805,"implemented":true,"kind":"function","modifiers":[{"id":4670,"kind":"modifierInvocation","modifierName":{"id":4669,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":856,"src":"6583:13:14"},"nodeType":"ModifierInvocation","src":"6583:13:14"}],"name":"stake","nameLocation":"6541:5:14","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"validator","nameLocation":"6555:9:14","nodeType":"VariableDeclaration","scope":4805,"src":"6547:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4666,"name":"address","nodeType":"ElementaryTypeName","src":"6547:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6546:19:14"},"returnParameters":{"id":4671,"nodeType":"ParameterList","parameters":[],"src":"6597:0:14"},"scope":5819,"src":"6532:1049:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4988,"nodeType":"Block","src":"7726:1258:14","statements":[{"assignments":[4818,4821],"declarations":[{"constant":false,"id":4818,"mutability":"mutable","name":"vPool","nameLocation":"7749:5:14","nodeType":"VariableDeclaration","scope":4988,"src":"7737:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4817,"nodeType":"UserDefinedTypeName","pathNode":{"id":4816,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"7737:4:14"},"referencedDeclaration":4161,"src":"7737:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"sPool","nameLocation":"7768:5:14","nodeType":"VariableDeclaration","scope":4988,"src":"7756:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":4820,"nodeType":"UserDefinedTypeName","pathNode":{"id":4819,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"7756:4:14"},"referencedDeclaration":4161,"src":"7756:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"}],"id":4824,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4822,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"7777:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function () returns (struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7777:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"tuple(struct CMTStaking.Pool memory,struct CMTStaking.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"7736:55:14"},{"assignments":[4827],"declarations":[{"constant":false,"id":4827,"mutability":"mutable","name":"vInfo","nameLocation":"7818:5:14","nodeType":"VariableDeclaration","scope":4988,"src":"7801:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":4826,"nodeType":"UserDefinedTypeName","pathNode":{"id":4825,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"7801:9:14"},"referencedDeclaration":4170,"src":"7801:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"id":4836,"initialValue":{"baseExpression":{"baseExpression":{"id":4828,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"7826:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4833,"indexExpression":{"arguments":[{"hexValue":"30","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7845:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7837:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4829,"name":"address","nodeType":"ElementaryTypeName","src":"7837:7:14","typeDescriptions":{}}},"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7837:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7826:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4835,"indexExpression":{"id":4834,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"7849:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7826:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7801:58:14"},{"assignments":[4839],"declarations":[{"constant":false,"id":4839,"mutability":"mutable","name":"sInfo","nameLocation":"7886:5:14","nodeType":"VariableDeclaration","scope":4988,"src":"7869:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":4838,"nodeType":"UserDefinedTypeName","pathNode":{"id":4837,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"7869:9:14"},"referencedDeclaration":4170,"src":"7869:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"id":4846,"initialValue":{"baseExpression":{"baseExpression":{"id":4840,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"7894:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4842,"indexExpression":{"id":4841,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"7905:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7894:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4845,"indexExpression":{"expression":{"id":4843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7916:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7916:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7894:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7869:58:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"7946:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7967:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7959:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4849,"name":"address","nodeType":"ElementaryTypeName","src":"7959:7:14","typeDescriptions":{}}},"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7959:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7946:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4854,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"7973:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"7973:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7994:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7973:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7946:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b65207265636f7264206e6f7420666f756e642e","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7997:25:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219","typeString":"literal_string \"Stake record not found.\""},"value":"Stake record not found."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219","typeString":"literal_string \"Stake record not found.\""}],"id":4847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7938:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7938:85:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4861,"nodeType":"ExpressionStatement","src":"7938:85:14"},{"assignments":[4863],"declarations":[{"constant":false,"id":4863,"mutability":"mutable","name":"unstaked","nameLocation":"8042:8:14","nodeType":"VariableDeclaration","scope":4988,"src":"8034:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"8034:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4864,"nodeType":"VariableDeclarationStatement","src":"8034:16:14"},{"assignments":[4866],"declarations":[{"constant":false,"id":4866,"mutability":"mutable","name":"reward","nameLocation":"8068:6:14","nodeType":"VariableDeclaration","scope":4988,"src":"8060:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"8060:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4867,"nodeType":"VariableDeclarationStatement","src":"8060:14:14"},{"condition":{"arguments":[{"id":4869,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8107:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4868,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"8089:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8089:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4932,"nodeType":"Block","src":"8418:209:14","statements":[{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"8432:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4907,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"8440:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$4161_storage_$","typeString":"mapping(address => struct CMTStaking.Pool storage ref)"}},"id":4909,"indexExpression":{"id":4908,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8454:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8440:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"src":"8432:32:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":4911,"nodeType":"ExpressionStatement","src":"8432:32:14"},{"expression":{"arguments":[{"id":4913,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"8493:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4914,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8500:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4912,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"8478:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8478:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4916,"nodeType":"ExpressionStatement","src":"8478:28:14"},{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4917,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8521:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4918,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"8531:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4919,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8520:18:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4921,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8550:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},{"id":4922,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8557:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},{"id":4923,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8564:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4920,"name":"_unstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"8541:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_StakeInfo_$4170_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct CMTStaking.StakeInfo memory,struct CMTStaking.StakeInfo memory,uint256) pure returns (uint256,uint256)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8541:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"8520:51:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4926,"nodeType":"ExpressionStatement","src":"8520:51:14"},{"expression":{"arguments":[{"id":4928,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"8603:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4929,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8610:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4927,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"8585:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8585:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4931,"nodeType":"ExpressionStatement","src":"8585:31:14"}]},"id":4933,"nodeType":"IfStatement","src":"8085:542:14","trueBody":{"id":4905,"nodeType":"Block","src":"8119:293:14","statements":[{"expression":{"arguments":[{"id":4872,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"8148:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4873,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8155:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4871,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"8133:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8133:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4875,"nodeType":"ExpressionStatement","src":"8133:28:14"},{"expression":{"arguments":[{"id":4877,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"8190:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4878,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8197:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4876,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"8175:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8175:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4880,"nodeType":"ExpressionStatement","src":"8175:28:14"},{"expression":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4881,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8218:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4882,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"8228:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4883,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8217:18:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4885,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8247:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},{"id":4886,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8254:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},{"id":4887,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8261:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4884,"name":"_unstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"8238:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_StakeInfo_$4170_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct CMTStaking.StakeInfo memory,struct CMTStaking.StakeInfo memory,uint256) pure returns (uint256,uint256)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8238:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"8217:51:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4890,"nodeType":"ExpressionStatement","src":"8217:51:14"},{"expression":{"arguments":[{"id":4892,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"8300:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4893,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8307:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4891,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"8282:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8282:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4895,"nodeType":"ExpressionStatement","src":"8282:31:14"},{"expression":{"arguments":[{"id":4897,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"8345:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":4898,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8352:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":4896,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"8327:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8327:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4900,"nodeType":"ExpressionStatement","src":"8327:31:14"},{"expression":{"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4901,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"8372:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4902,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8393:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8372:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4904,"nodeType":"ExpressionStatement","src":"8372:29:14"}]}},{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4934,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8637:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"8637:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4937,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8657:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8657:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8637:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"8637:32:14"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4941,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8679:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":4943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"8679:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4944,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8699:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8699:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8679:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"8679:32:14"},{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4948,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8721:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4954,"indexExpression":{"arguments":[{"hexValue":"30","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8732:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4949,"name":"address","nodeType":"ElementaryTypeName","src":"8732:7:14","typeDescriptions":{}}},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8732:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8721:22:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4955,"indexExpression":{"id":4953,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8744:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8721:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4956,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8757:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"src":"8721:41:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"id":4958,"nodeType":"ExpressionStatement","src":"8721:41:14"},{"expression":{"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4959,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8772:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":4963,"indexExpression":{"id":4960,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8783:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8772:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":4964,"indexExpression":{"expression":{"id":4961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8794:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8794:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8772:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4965,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"8808:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"src":"8772:41:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"id":4967,"nodeType":"ExpressionStatement","src":"8772:41:14"},{"expression":{"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4968,"name":"totalStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"8824:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4969,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8844:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8824:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4971,"nodeType":"ExpressionStatement","src":"8824:28:14"},{"eventCall":{"arguments":[{"expression":{"id":4973,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8876:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8876:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4975,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8888:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4976,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8899:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4977,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"8909:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"name":"Unstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"8868:7:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8868:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4979,"nodeType":"EmitStatement","src":"8863:53:14"},{"expression":{"arguments":[{"expression":{"id":4981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8947:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8947:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8959:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4984,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"8970:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8959:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4980,"name":"_initiateWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"8927:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8927:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4987,"nodeType":"ExpressionStatement","src":"8927:50:14"}]},"functionSelector":"c2a672e0","id":4989,"implemented":true,"kind":"function","modifiers":[{"id":4812,"kind":"modifierInvocation","modifierName":{"id":4811,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":987,"src":"7699:12:14"},"nodeType":"ModifierInvocation","src":"7699:12:14"},{"id":4814,"kind":"modifierInvocation","modifierName":{"id":4813,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":856,"src":"7712:13:14"},"nodeType":"ModifierInvocation","src":"7712:13:14"}],"name":"unstake","nameLocation":"7647:7:14","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"validator","nameLocation":"7663:9:14","nodeType":"VariableDeclaration","scope":4989,"src":"7655:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"7655:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"amount","nameLocation":"7682:6:14","nodeType":"VariableDeclaration","scope":4989,"src":"7674:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7674:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7654:35:14"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[],"src":"7726:0:14"},"scope":5819,"src":"7638:1346:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5003,"nodeType":"Block","src":"9068:67:14","statements":[{"expression":{"arguments":[{"expression":{"id":4997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9098:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9098:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4999,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"9110:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":5000,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"9121:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4996,"name":"_completeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"9078:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address,address payable,uint256)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9078:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5002,"nodeType":"ExpressionStatement","src":"9078:50:14"}]},"functionSelector":"7b66394c","id":5004,"implemented":true,"kind":"function","modifiers":[],"name":"completeWithdraw","nameLocation":"8999:16:14","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"recipient","nameLocation":"9032:9:14","nodeType":"VariableDeclaration","scope":5004,"src":"9016:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4990,"name":"address","nodeType":"ElementaryTypeName","src":"9016:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"amount","nameLocation":"9051:6:14","nodeType":"VariableDeclaration","scope":5004,"src":"9043:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"9043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9015:43:14"},"returnParameters":{"id":4995,"nodeType":"ParameterList","parameters":[],"src":"9068:0:14"},"scope":5819,"src":"8990:145:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5087,"nodeType":"Block","src":"9231:694:14","statements":[{"assignments":[5015],"declarations":[{"constant":false,"id":5015,"mutability":"mutable","name":"info","nameLocation":"9258:4:14","nodeType":"VariableDeclaration","scope":5087,"src":"9241:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":5014,"nodeType":"UserDefinedTypeName","pathNode":{"id":5013,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"9241:9:14"},"referencedDeclaration":4170,"src":"9241:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"id":5021,"initialValue":{"baseExpression":{"baseExpression":{"id":5016,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"9265:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStaking.StakeInfo storage ref))"}},"id":5018,"indexExpression":{"id":5017,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"9276:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9265:21:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$4170_storage_$","typeString":"mapping(address => struct CMTStaking.StakeInfo storage ref)"}},"id":5020,"indexExpression":{"id":5019,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"9287:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9265:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage","typeString":"struct CMTStaking.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9241:53:14"},{"assignments":[5024],"declarations":[{"constant":false,"id":5024,"mutability":"mutable","name":"pool","nameLocation":"9316:4:14","nodeType":"VariableDeclaration","scope":5087,"src":"9304:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":5023,"nodeType":"UserDefinedTypeName","pathNode":{"id":5022,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"9304:4:14"},"referencedDeclaration":4161,"src":"9304:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"}],"id":5025,"nodeType":"VariableDeclarationStatement","src":"9304:16:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"9334:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9355:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9347:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5027,"name":"address","nodeType":"ElementaryTypeName","src":"9347:7:14","typeDescriptions":{}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9347:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9334:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5056,"nodeType":"IfStatement","src":"9330:299:14","trueBody":{"id":5055,"nodeType":"Block","src":"9359:270:14","statements":[{"condition":{"arguments":[{"id":5033,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"9395:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5032,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"9377:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9377:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"nodeType":"IfStatement","src":"9373:207:14","trueBody":{"id":5050,"nodeType":"Block","src":"9404:176:14","statements":[{"expression":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5035,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9422:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5036,"name":"validatorPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"9429:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"src":"9422:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5038,"nodeType":"ExpressionStatement","src":"9422:20:14"},{"expression":{"arguments":[{"id":5040,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9472:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":5041,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"9478:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5042,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"9503:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5039,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"9460:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$4161_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function (struct CMTStaking.Pool memory,uint256,uint256) view returns (struct CMTStaking.Pool memory)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9460:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5044,"nodeType":"ExpressionStatement","src":"9460:61:14"},{"expression":{"arguments":[{"id":5046,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9554:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":5047,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"9560:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":5045,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"9539:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9539:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5049,"nodeType":"ExpressionStatement","src":"9539:26:14"}]}},{"expression":{"expression":{"id":5052,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"9600:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"9600:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5012,"id":5054,"nodeType":"Return","src":"9593:25:14"}]}},{"condition":{"arguments":[{"id":5058,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"9660:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5057,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"9642:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9642:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5077,"nodeType":"Block","src":"9792:56:14","statements":[{"expression":{"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5071,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9806:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5072,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"9813:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$4161_storage_$","typeString":"mapping(address => struct CMTStaking.Pool storage ref)"}},"id":5074,"indexExpression":{"id":5073,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"9827:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9813:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"src":"9806:31:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5076,"nodeType":"ExpressionStatement","src":"9806:31:14"}]},"id":5078,"nodeType":"IfStatement","src":"9638:210:14","trueBody":{"id":5070,"nodeType":"Block","src":"9672:114:14","statements":[{"expression":{"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5060,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9686:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5061,"name":"stakerPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"9693:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"src":"9686:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5063,"nodeType":"ExpressionStatement","src":"9686:17:14"},{"expression":{"arguments":[{"id":5065,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9729:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":5066,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"9735:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5067,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"9757:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"9717:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$4161_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function (struct CMTStaking.Pool memory,uint256,uint256) view returns (struct CMTStaking.Pool memory)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9717:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5069,"nodeType":"ExpressionStatement","src":"9717:58:14"}]}},{"expression":{"arguments":[{"id":5080,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"9872:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},{"id":5081,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"9878:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}],"id":5079,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"9857:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$4161_memory_ptr_$_t_struct$_StakeInfo_$4170_memory_ptr_$returns$__$","typeString":"function (struct CMTStaking.Pool memory,struct CMTStaking.StakeInfo memory) pure"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9857:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5083,"nodeType":"ExpressionStatement","src":"9857:26:14"},{"expression":{"expression":{"id":5084,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"9900:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"9900:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5012,"id":5086,"nodeType":"Return","src":"9893:25:14"}]},"functionSelector":"9ced7e76","id":5088,"implemented":true,"kind":"function","modifiers":[],"name":"pendingReward","nameLocation":"9150:13:14","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"validator","nameLocation":"9172:9:14","nodeType":"VariableDeclaration","scope":5088,"src":"9164:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5005,"name":"address","nodeType":"ElementaryTypeName","src":"9164:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5008,"mutability":"mutable","name":"staker","nameLocation":"9191:6:14","nodeType":"VariableDeclaration","scope":5088,"src":"9183:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5007,"name":"address","nodeType":"ElementaryTypeName","src":"9183:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9163:35:14"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5088,"src":"9222:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"9222:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9221:9:14"},"scope":5819,"src":"9141:784:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5153,"nodeType":"Block","src":"10032:373:14","statements":[{"assignments":[5101],"declarations":[{"constant":false,"id":5101,"mutability":"mutable","name":"queue","nameLocation":"10080:5:14","nodeType":"VariableDeclaration","scope":5153,"src":"10042:43:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":5100,"nodeType":"UserDefinedTypeName","pathNode":{"id":5099,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"10042:29:14"},"referencedDeclaration":3208,"src":"10042:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"id":5105,"initialValue":{"baseExpression":{"id":5102,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"10088:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":5104,"indexExpression":{"id":5103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"10102:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10088:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10042:68:14"},{"assignments":[5107],"declarations":[{"constant":false,"id":5107,"mutability":"mutable","name":"length","nameLocation":"10128:6:14","nodeType":"VariableDeclaration","scope":5153,"src":"10120:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5111,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5108,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"10137:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"10137:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10137:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10120:31:14"},{"expression":{"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5112,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"10161:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStaking.Withdrawal memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5117,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"10192:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10175:16:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CMTStaking.Withdrawal memory[] memory)"},"typeName":{"baseType":{"id":5114,"nodeType":"UserDefinedTypeName","pathNode":{"id":5113,"name":"Withdrawal","nodeType":"IdentifierPath","referencedDeclaration":4175,"src":"10179:10:14"},"referencedDeclaration":4175,"src":"10179:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$4175_storage_ptr","typeString":"struct CMTStaking.Withdrawal"}},"id":5115,"nodeType":"ArrayTypeName","src":"10179:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$4175_storage_$dyn_storage_ptr","typeString":"struct CMTStaking.Withdrawal[]"}}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10175:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStaking.Withdrawal memory[] memory"}},"src":"10161:38:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStaking.Withdrawal memory[] memory"}},"id":5120,"nodeType":"ExpressionStatement","src":"10161:38:14"},{"body":{"id":5151,"nodeType":"Block","src":"10246:153:14","statements":[{"assignments":[5132,5134],"declarations":[{"constant":false,"id":5132,"mutability":"mutable","name":"amount","nameLocation":"10269:6:14","nodeType":"VariableDeclaration","scope":5151,"src":"10261:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5131,"name":"uint256","nodeType":"ElementaryTypeName","src":"10261:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5134,"mutability":"mutable","name":"timestamp","nameLocation":"10285:9:14","nodeType":"VariableDeclaration","scope":5151,"src":"10277:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"10277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5141,"initialValue":{"arguments":[{"arguments":[{"id":5138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"10325:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5136,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"10316:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"10316:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10316:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5135,"name":"_decodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"10298:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10298:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10260:68:14"},{"expression":{"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5142,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"10342:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStaking.Withdrawal memory[] memory"}},"id":5144,"indexExpression":{"id":5143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"10354:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10342:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$4175_memory_ptr","typeString":"struct CMTStaking.Withdrawal memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5146,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"10370:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5147,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"10378:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5145,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10359:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Withdrawal_$4175_storage_ptr_$","typeString":"type(struct CMTStaking.Withdrawal storage pointer)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10359:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$4175_memory_ptr","typeString":"struct CMTStaking.Withdrawal memory"}},"src":"10342:46:14","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$4175_memory_ptr","typeString":"struct CMTStaking.Withdrawal memory"}},"id":5150,"nodeType":"ExpressionStatement","src":"10342:46:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"10229:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5126,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"10233:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10229:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5152,"initializationExpression":{"assignments":[5122],"declarations":[{"constant":false,"id":5122,"mutability":"mutable","name":"i","nameLocation":"10222:1:14","nodeType":"VariableDeclaration","scope":5152,"src":"10214:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5124,"initialValue":{"hexValue":"30","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10226:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10214:13:14"},"loopExpression":{"expression":{"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10241:3:14","subExpression":{"id":5128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"10243:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5130,"nodeType":"ExpressionStatement","src":"10241:3:14"},"nodeType":"ForStatement","src":"10209:190:14"}]},"functionSelector":"f3f43703","id":5154,"implemented":true,"kind":"function","modifiers":[],"name":"pendingWithdrawals","nameLocation":"9940:18:14","nodeType":"FunctionDefinition","parameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"account","nameLocation":"9967:7:14","nodeType":"VariableDeclaration","scope":5154,"src":"9959:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5089,"name":"address","nodeType":"ElementaryTypeName","src":"9959:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9958:17:14"},"returnParameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"withdrawals","nameLocation":"10019:11:14","nodeType":"VariableDeclaration","scope":5154,"src":"9999:31:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStaking.Withdrawal[]"},"typeName":{"baseType":{"id":5093,"nodeType":"UserDefinedTypeName","pathNode":{"id":5092,"name":"Withdrawal","nodeType":"IdentifierPath","referencedDeclaration":4175,"src":"9999:10:14"},"referencedDeclaration":4175,"src":"9999:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$4175_storage_ptr","typeString":"struct CMTStaking.Withdrawal"}},"id":5094,"nodeType":"ArrayTypeName","src":"9999:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$4175_storage_$dyn_storage_ptr","typeString":"struct CMTStaking.Withdrawal[]"}},"visibility":"internal"}],"src":"9998:33:14"},"scope":5819,"src":"9931:474:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5167,"nodeType":"Block","src":"10489:69:14","statements":[{"expression":{"arguments":[{"id":5162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"10526:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5163,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10535:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10535:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5161,"name":"dueWithdrawalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"10506:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10506:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5160,"id":5166,"nodeType":"Return","src":"10499:52:14"}]},"functionSelector":"dab31689","id":5168,"implemented":true,"kind":"function","modifiers":[],"name":"dueWithdrawalAmount","nameLocation":"10420:19:14","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"account","nameLocation":"10448:7:14","nodeType":"VariableDeclaration","scope":5168,"src":"10440:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5155,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10439:17:14"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5168,"src":"10480:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"10480:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10479:9:14"},"scope":5819,"src":"10411:147:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5233,"nodeType":"Block","src":"10659:455:14","statements":[{"assignments":[5181],"declarations":[{"constant":false,"id":5181,"mutability":"mutable","name":"queue","nameLocation":"10707:5:14","nodeType":"VariableDeclaration","scope":5233,"src":"10669:43:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":5180,"nodeType":"UserDefinedTypeName","pathNode":{"id":5179,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"10669:29:14"},"referencedDeclaration":3208,"src":"10669:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"id":5185,"initialValue":{"baseExpression":{"id":5182,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"10715:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":5184,"indexExpression":{"id":5183,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"10729:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10715:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10669:68:14"},{"assignments":[5187],"declarations":[{"constant":false,"id":5187,"mutability":"mutable","name":"amount","nameLocation":"10755:6:14","nodeType":"VariableDeclaration","scope":5233,"src":"10747:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5186,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5189,"initialValue":{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10764:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10747:18:14"},{"assignments":[5191],"declarations":[{"constant":false,"id":5191,"mutability":"mutable","name":"length","nameLocation":"10783:6:14","nodeType":"VariableDeclaration","scope":5233,"src":"10775:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"10775:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5195,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5192,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"10792:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"10792:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10792:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10775:31:14"},{"body":{"id":5229,"nodeType":"Block","src":"10853:232:14","statements":[{"assignments":[5207,5209],"declarations":[{"constant":false,"id":5207,"mutability":"mutable","name":"available","nameLocation":"10876:9:14","nodeType":"VariableDeclaration","scope":5229,"src":"10868:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"10868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5209,"mutability":"mutable","name":"recordTimestamp","nameLocation":"10895:15:14","nodeType":"VariableDeclaration","scope":5229,"src":"10887:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"10887:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5216,"initialValue":{"arguments":[{"arguments":[{"id":5213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"10941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5211,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"10932:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"10932:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10932:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5210,"name":"_decodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"10914:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10914:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10867:77:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"recordTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"10962:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5218,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"10980:10:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10962:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5220,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"10993:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10962:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5224,"nodeType":"IfStatement","src":"10958:84:14","trueBody":{"id":5223,"nodeType":"Block","src":"11004:38:14","statements":[{"id":5222,"nodeType":"Break","src":"11022:5:14"}]}},{"expression":{"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5225,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"11055:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5226,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"11065:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11055:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5228,"nodeType":"ExpressionStatement","src":"11055:19:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"10836:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5201,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"10840:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10836:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5230,"initializationExpression":{"assignments":[5197],"declarations":[{"constant":false,"id":5197,"mutability":"mutable","name":"i","nameLocation":"10829:1:14","nodeType":"VariableDeclaration","scope":5230,"src":"10821:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5199,"initialValue":{"hexValue":"30","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10833:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10821:13:14"},"loopExpression":{"expression":{"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10848:3:14","subExpression":{"id":5203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"10850:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5205,"nodeType":"ExpressionStatement","src":"10848:3:14"},"nodeType":"ForStatement","src":"10816:269:14"},{"expression":{"id":5231,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"11101:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5176,"id":5232,"nodeType":"Return","src":"11094:13:14"}]},"functionSelector":"19d41774","id":5234,"implemented":true,"kind":"function","modifiers":[],"name":"dueWithdrawalAmount","nameLocation":"10573:19:14","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"account","nameLocation":"10601:7:14","nodeType":"VariableDeclaration","scope":5234,"src":"10593:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5169,"name":"address","nodeType":"ElementaryTypeName","src":"10593:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5172,"mutability":"mutable","name":"timestamp","nameLocation":"10618:9:14","nodeType":"VariableDeclaration","scope":5234,"src":"10610:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5171,"name":"uint256","nodeType":"ElementaryTypeName","src":"10610:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10592:36:14"},"returnParameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5234,"src":"10650:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"10650:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10649:9:14"},"scope":5819,"src":"10564:550:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5246,"nodeType":"Block","src":"11193:55:14","statements":[{"expression":{"arguments":[{"id":5243,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"11231:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5241,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"11210:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"11210:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11210:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5240,"id":5245,"nodeType":"Return","src":"11203:38:14"}]},"functionSelector":"40550a1c","id":5247,"implemented":true,"kind":"function","modifiers":[],"name":"isActiveValidator","nameLocation":"11129:17:14","nodeType":"FunctionDefinition","parameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"validator","nameLocation":"11155:9:14","nodeType":"VariableDeclaration","scope":5247,"src":"11147:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5235,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11146:19:14"},"returnParameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"11187:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5238,"name":"bool","nodeType":"ElementaryTypeName","src":"11187:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11186:6:14"},"scope":5819,"src":"11120:128:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5257,"nodeType":"Block","src":"11321:44:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5253,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"11338:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"11338:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11338:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5252,"id":5256,"nodeType":"Return","src":"11331:27:14"}]},"functionSelector":"d2d49c4b","id":5258,"implemented":true,"kind":"function","modifiers":[],"name":"activeValidators","nameLocation":"11263:16:14","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[],"src":"11279:2:14"},"returnParameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5258,"src":"11303:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5249,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5250,"nodeType":"ArrayTypeName","src":"11303:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11302:18:14"},"scope":5819,"src":"11254:111:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5298,"nodeType":"Block","src":"11471:161:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"11489:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11504:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5270,"name":"uint224","nodeType":"ElementaryTypeName","src":"11504:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11499:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11499:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11499:17:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"11489:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5275,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"11520:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11538:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5277,"name":"uint32","nodeType":"ElementaryTypeName","src":"11538:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5276,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11533:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11533:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11533:16:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11520:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11489:60:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207769746864726177616c","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11551:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5","typeString":"literal_string \"Invalid withdrawal\""},"value":"Invalid withdrawal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5","typeString":"literal_string \"Invalid withdrawal\""}],"id":5267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11481:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11481:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5285,"nodeType":"ExpressionStatement","src":"11481:91:14"},{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"11582:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5289,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"11599:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11609:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11599:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11598:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":5293,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"11615:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11598:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11590:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11590:7:14","typeDescriptions":{}}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11590:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11582:43:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5297,"nodeType":"ExpressionStatement","src":"11582:43:14"}]},"id":5299,"implemented":true,"kind":"function","modifiers":[],"name":"_encodeWithdrawal","nameLocation":"11380:17:14","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"amount","nameLocation":"11406:6:14","nodeType":"VariableDeclaration","scope":5299,"src":"11398:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"11398:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"timestamp","nameLocation":"11422:9:14","nodeType":"VariableDeclaration","scope":5299,"src":"11414:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11414:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11397:35:14"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"value","nameLocation":"11464:5:14","nodeType":"VariableDeclaration","scope":5299,"src":"11456:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11456:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11455:15:14"},"scope":5819,"src":"11371:261:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5332,"nodeType":"Block","src":"11738:117:14","statements":[{"assignments":[5309],"declarations":[{"constant":false,"id":5309,"mutability":"mutable","name":"temp","nameLocation":"11756:4:14","nodeType":"VariableDeclaration","scope":5332,"src":"11748:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"11748:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5314,"initialValue":{"arguments":[{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"11771:5:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11763:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5310,"name":"uint256","nodeType":"ElementaryTypeName","src":"11763:7:14","typeDescriptions":{}}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11763:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11748:29:14"},{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5315,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"11787:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"11796:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11804:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11796:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11787:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5320,"nodeType":"ExpressionStatement","src":"11787:19:14"},{"expression":{"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"11816:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"11828:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11836:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11841:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11836:7:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11836:11:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}}],"id":5328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11835:13:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"11828:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11816:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5331,"nodeType":"ExpressionStatement","src":"11816:32:14"}]},"id":5333,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeWithdrawal","nameLocation":"11647:17:14","nodeType":"FunctionDefinition","parameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"value","nameLocation":"11673:5:14","nodeType":"VariableDeclaration","scope":5333,"src":"11665:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11665:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11664:15:14"},"returnParameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"amount","nameLocation":"11711:6:14","nodeType":"VariableDeclaration","scope":5333,"src":"11703:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"11703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5306,"mutability":"mutable","name":"timestamp","nameLocation":"11727:9:14","nodeType":"VariableDeclaration","scope":5333,"src":"11719:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"11719:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11702:35:14"},"scope":5819,"src":"11638:217:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5363,"nodeType":"Block","src":"11932:238:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5341,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"11950:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5342,"name":"MIN_WITHDRAW_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"11960:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11950:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"776974686472617720616d6f756e74206d757374203e3d204d494e5f57495448445241575f414d4f554e54","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11981:45:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9","typeString":"literal_string \"withdraw amount must >= MIN_WITHDRAW_AMOUNT\""},"value":"withdraw amount must >= MIN_WITHDRAW_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9","typeString":"literal_string \"withdraw amount must >= MIN_WITHDRAW_AMOUNT\""}],"id":5340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11942:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11942:85:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5346,"nodeType":"ExpressionStatement","src":"11942:85:14"},{"expression":{"arguments":[{"arguments":[{"id":5352,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"12087:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5353,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12095:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12095:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5351,"name":"_encodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"12069:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12069:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":5347,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"12037:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":5349,"indexExpression":{"id":5348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"12051:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12037:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":5350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pushBack","nodeType":"MemberAccess","referencedDeclaration":3240,"src":"12037:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12037:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5357,"nodeType":"ExpressionStatement","src":"12037:75:14"},{"eventCall":{"arguments":[{"id":5359,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"12147:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5360,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"12156:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5358,"name":"WithdrawalInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"12127:19:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12127:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5362,"nodeType":"EmitStatement","src":"12122:41:14"}]},"id":5364,"implemented":true,"kind":"function","modifiers":[],"name":"_initiateWithdrawal","nameLocation":"11870:19:14","nodeType":"FunctionDefinition","parameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"account","nameLocation":"11898:7:14","nodeType":"VariableDeclaration","scope":5364,"src":"11890:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5334,"name":"address","nodeType":"ElementaryTypeName","src":"11890:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5337,"mutability":"mutable","name":"amount","nameLocation":"11915:6:14","nodeType":"VariableDeclaration","scope":5364,"src":"11907:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"11907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11889:33:14"},"returnParameters":{"id":5339,"nodeType":"ParameterList","parameters":[],"src":"11932:0:14"},"scope":5819,"src":"11861:309:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5459,"nodeType":"Block","src":"12274:743:14","statements":[{"assignments":[5377],"declarations":[{"constant":false,"id":5377,"mutability":"mutable","name":"queue","nameLocation":"12322:5:14","nodeType":"VariableDeclaration","scope":5459,"src":"12284:43:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":5376,"nodeType":"UserDefinedTypeName","pathNode":{"id":5375,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"12284:29:14"},"referencedDeclaration":3208,"src":"12284:29:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"id":5381,"initialValue":{"baseExpression":{"id":5378,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"12330:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":5380,"indexExpression":{"id":5379,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"12344:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12330:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12284:68:14"},{"assignments":[5383],"declarations":[{"constant":false,"id":5383,"mutability":"mutable","name":"sum","nameLocation":"12370:3:14","nodeType":"VariableDeclaration","scope":5459,"src":"12362:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"12362:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5385,"initialValue":{"hexValue":"30","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12376:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12362:15:14"},{"body":{"id":5439,"nodeType":"Block","src":"12410:431:14","statements":[{"assignments":[5391,5393],"declarations":[{"constant":false,"id":5391,"mutability":"mutable","name":"available","nameLocation":"12433:9:14","nodeType":"VariableDeclaration","scope":5439,"src":"12425:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5393,"mutability":"mutable","name":"timestamp","nameLocation":"12452:9:14","nodeType":"VariableDeclaration","scope":5439,"src":"12444:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"12444:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5399,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5395,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"12483:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"front","nodeType":"MemberAccess","referencedDeclaration":3393,"src":"12483:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bytes32)"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12483:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5394,"name":"_decodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"12465:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12465:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"12424:73:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"12515:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5401,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"12527:10:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12515:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5403,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12540:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12540:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12515:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"12511:84:14","trueBody":{"id":5407,"nodeType":"Block","src":"12557:38:14","statements":[{"id":5406,"nodeType":"Break","src":"12575:5:14"}]}},{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"12608:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5410,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"12615:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5412,"nodeType":"ExpressionStatement","src":"12608:16:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5413,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"12638:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"popFront","nodeType":"MemberAccess","referencedDeclaration":3366,"src":"12638:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12638:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5417,"nodeType":"ExpressionStatement","src":"12638:16:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5418,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"12672:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5419,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"12678:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12672:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5438,"nodeType":"IfStatement","src":"12668:163:14","trueBody":{"id":5437,"nodeType":"Block","src":"12686:145:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"12738:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"12744:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12738:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5428,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"12752:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5424,"name":"_encodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"12720:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12720:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5421,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"12704:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pushFront","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"12704:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12704:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"ExpressionStatement","src":"12704:59:14"},{"expression":{"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5432,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"12781:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"12787:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12781:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5435,"nodeType":"ExpressionStatement","src":"12781:12:14"},{"id":5436,"nodeType":"Break","src":"12811:5:14"}]}}]},"condition":{"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12394:14:14","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5386,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"12395:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":5387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"empty","nodeType":"MemberAccess","referencedDeclaration":3529,"src":"12395:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12395:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5440,"nodeType":"WhileStatement","src":"12387:454:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"12858:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5443,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"12865:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12858:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420776974686472617761626c6520616d6f756e742e","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12873:35:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6","typeString":"literal_string \"Insufficient withdrawable amount.\""},"value":"Insufficient withdrawable amount."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6","typeString":"literal_string \"Insufficient withdrawable amount.\""}],"id":5441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12850:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12850:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5447,"nodeType":"ExpressionStatement","src":"12850:59:14"},{"eventCall":{"arguments":[{"id":5449,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"12944:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5450,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"12953:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":5451,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"12964:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"name":"WithdrawalCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"12924:19:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12924:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5453,"nodeType":"EmitStatement","src":"12919:52:14"},{"expression":{"arguments":[{"id":5455,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5368,"src":"12992:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":5456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"13003:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5454,"name":"_sendValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"12981:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12981:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5458,"nodeType":"ExpressionStatement","src":"12981:29:14"}]},"id":5460,"implemented":true,"kind":"function","modifiers":[],"name":"_completeWithdrawal","nameLocation":"12185:19:14","nodeType":"FunctionDefinition","parameters":{"id":5371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"account","nameLocation":"12213:7:14","nodeType":"VariableDeclaration","scope":5460,"src":"12205:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5365,"name":"address","nodeType":"ElementaryTypeName","src":"12205:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5368,"mutability":"mutable","name":"recipient","nameLocation":"12238:9:14","nodeType":"VariableDeclaration","scope":5460,"src":"12222:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5367,"name":"address","nodeType":"ElementaryTypeName","src":"12222:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5370,"mutability":"mutable","name":"amount","nameLocation":"12257:6:14","nodeType":"VariableDeclaration","scope":5460,"src":"12249:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"12249:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12204:60:14"},"returnParameters":{"id":5372,"nodeType":"ParameterList","parameters":[],"src":"12274:0:14"},"scope":5819,"src":"12176:841:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5493,"nodeType":"Block","src":"13103:236:14","statements":[{"expression":{"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"13113:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5471,"name":"validatorPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"13133:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},{"id":5472,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"13148:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5473,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"13173:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"13121:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$4161_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function (struct CMTStaking.Pool memory,uint256,uint256) view returns (struct CMTStaking.Pool memory)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13121:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"src":"13113:78:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5476,"nodeType":"ExpressionStatement","src":"13113:78:14"},{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5477,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"13201:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5479,"name":"stakerPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"13221:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},{"id":5480,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"13233:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5481,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"13255:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"13209:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$4161_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$4161_memory_ptr_$","typeString":"function (struct CMTStaking.Pool memory,uint256,uint256) view returns (struct CMTStaking.Pool memory)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13209:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"src":"13201:72:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5484,"nodeType":"ExpressionStatement","src":"13201:72:14"},{"expression":{"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5485,"name":"validatorPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"13283:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5486,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"13299:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"src":"13283:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"id":5488,"nodeType":"ExpressionStatement","src":"13283:21:14"},{"expression":{"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5489,"name":"stakerPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"13314:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5490,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"13327:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"src":"13314:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"id":5492,"nodeType":"ExpressionStatement","src":"13314:18:14"}]},"id":5494,"implemented":true,"kind":"function","modifiers":[],"name":"_updatePools","nameLocation":"13032:12:14","nodeType":"FunctionDefinition","parameters":{"id":5461,"nodeType":"ParameterList","parameters":[],"src":"13044:2:14"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"vPool","nameLocation":"13077:5:14","nodeType":"VariableDeclaration","scope":5494,"src":"13065:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":5463,"nodeType":"UserDefinedTypeName","pathNode":{"id":5462,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"13065:4:14"},"referencedDeclaration":4161,"src":"13065:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},{"constant":false,"id":5467,"mutability":"mutable","name":"sPool","nameLocation":"13096:5:14","nodeType":"VariableDeclaration","scope":5494,"src":"13084:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":5466,"nodeType":"UserDefinedTypeName","pathNode":{"id":5465,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"13084:4:14"},"referencedDeclaration":4161,"src":"13084:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"}],"src":"13064:38:14"},"scope":5819,"src":"13023:316:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5552,"nodeType":"Block","src":"13495:317:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"13509:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13524:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13509:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"13505:103:14","trueBody":{"id":5519,"nodeType":"Block","src":"13527:81:14","statements":[{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5510,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"13541:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4160,"src":"13541:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13560:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"13560:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13541:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"13541:31:14"},{"expression":{"id":5517,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"13593:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"functionReturnParameters":5506,"id":5518,"nodeType":"Return","src":"13586:11:14"}]}},{"assignments":[5522],"declarations":[{"constant":false,"id":5522,"mutability":"mutable","name":"reward","nameLocation":"13625:6:14","nodeType":"VariableDeclaration","scope":5552,"src":"13617:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"13617:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5531,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5523,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13635:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"13635:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5525,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"13650:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4160,"src":"13650:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13635:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13634:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5529,"name":"rewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"13670:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13634:50:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13617:67:14"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5532,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"13694:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastAUR","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"13694:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"13711:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5536,"name":"AUR_PREC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"13720:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13711:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13710:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5539,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"13732:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13710:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13694:49:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"13694:49:14"},{"expression":{"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5543,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"13753:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4160,"src":"13753:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5546,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13772:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"13772:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13753:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5549,"nodeType":"ExpressionStatement","src":"13753:31:14"},{"expression":{"id":5550,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"13801:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"functionReturnParameters":5506,"id":5551,"nodeType":"Return","src":"13794:11:14"}]},"id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"_updatePool","nameLocation":"13354:11:14","nodeType":"FunctionDefinition","parameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"pool","nameLocation":"13387:4:14","nodeType":"VariableDeclaration","scope":5553,"src":"13375:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":5496,"nodeType":"UserDefinedTypeName","pathNode":{"id":5495,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"13375:4:14"},"referencedDeclaration":4161,"src":"13375:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},{"constant":false,"id":5499,"mutability":"mutable","name":"rewardPerBlock","nameLocation":"13409:14:14","nodeType":"VariableDeclaration","scope":5553,"src":"13401:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"13401:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"stakeAmount","nameLocation":"13441:11:14","nodeType":"VariableDeclaration","scope":5553,"src":"13433:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"13433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13365:93:14"},"returnParameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5553,"src":"13482:11:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":5504,"nodeType":"UserDefinedTypeName","pathNode":{"id":5503,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"13482:4:14"},"referencedDeclaration":4161,"src":"13482:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"}],"src":"13481:13:14"},"scope":5819,"src":"13345:467:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5585,"nodeType":"Block","src":"13897:168:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5562,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"13911:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"13911:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13931:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13911:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5568,"nodeType":"IfStatement","src":"13907:58:14","trueBody":{"id":5567,"nodeType":"Block","src":"13934:31:14","statements":[{"functionReturnParameters":5561,"id":5566,"nodeType":"Return","src":"13948:7:14"}]}},{"expression":{"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5569,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"13974:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"13974:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5572,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"13997:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"13997:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5574,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"14016:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastAUR","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"14016:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13997:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13996:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5578,"name":"AUR_PREC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"14032:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13996:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5580,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"14043:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":4165,"src":"14043:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13996:62:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13974:84:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5584,"nodeType":"ExpressionStatement","src":"13974:84:14"}]},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"_updateRewards","nameLocation":"13827:14:14","nodeType":"FunctionDefinition","parameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"pool","nameLocation":"13854:4:14","nodeType":"VariableDeclaration","scope":5586,"src":"13842:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":5555,"nodeType":"UserDefinedTypeName","pathNode":{"id":5554,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"13842:4:14"},"referencedDeclaration":4161,"src":"13842:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},{"constant":false,"id":5559,"mutability":"mutable","name":"info","nameLocation":"13877:4:14","nodeType":"VariableDeclaration","scope":5586,"src":"13860:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":5558,"nodeType":"UserDefinedTypeName","pathNode":{"id":5557,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"13860:9:14"},"referencedDeclaration":4170,"src":"13860:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"src":"13841:41:14"},"returnParameters":{"id":5561,"nodeType":"ParameterList","parameters":[],"src":"13897:0:14"},"scope":5819,"src":"13818:247:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5608,"nodeType":"Block","src":"14153:79:14","statements":[{"expression":{"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5595,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"14163:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":4165,"src":"14163:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5598,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"14182:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"14182:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5600,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"14201:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool memory"}},"id":5601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastAUR","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"14201:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14182:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14181:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5604,"name":"AUR_PREC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"14217:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14181:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14163:62:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5607,"nodeType":"ExpressionStatement","src":"14163:62:14"}]},"id":5609,"implemented":true,"kind":"function","modifiers":[],"name":"_updateRewardDebt","nameLocation":"14080:17:14","nodeType":"FunctionDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"pool","nameLocation":"14110:4:14","nodeType":"VariableDeclaration","scope":5609,"src":"14098:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_memory_ptr","typeString":"struct CMTStaking.Pool"},"typeName":{"id":5588,"nodeType":"UserDefinedTypeName","pathNode":{"id":5587,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":4161,"src":"14098:4:14"},"referencedDeclaration":4161,"src":"14098:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage_ptr","typeString":"struct CMTStaking.Pool"}},"visibility":"internal"},{"constant":false,"id":5592,"mutability":"mutable","name":"info","nameLocation":"14133:4:14","nodeType":"VariableDeclaration","scope":5609,"src":"14116:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":5591,"nodeType":"UserDefinedTypeName","pathNode":{"id":5590,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"14116:9:14"},"referencedDeclaration":4170,"src":"14116:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"}],"src":"14097:41:14"},"returnParameters":{"id":5594,"nodeType":"ParameterList","parameters":[],"src":"14153:0:14"},"scope":5819,"src":"14071:161:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"14407:507:14","statements":[{"assignments":[5625],"declarations":[{"constant":false,"id":5625,"mutability":"mutable","name":"maxAmount","nameLocation":"14425:9:14","nodeType":"VariableDeclaration","scope":5692,"src":"14417:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"14417:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5631,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5626,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14437:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"14437:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":5628,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14457:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"14457:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14437:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14417:59:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"14494:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5634,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"14504:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14494:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652e","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14515:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""},"value":"Insufficient balance."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""}],"id":5632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14486:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14486:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5638,"nodeType":"ExpressionStatement","src":"14486:53:14"},{"expression":{"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5639,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"14549:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5640,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14558:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"14558:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14549:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5643,"nodeType":"ExpressionStatement","src":"14549:28:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"14591:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14601:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14591:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5652,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"14657:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5653,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"14667:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14657:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5666,"nodeType":"IfStatement","src":"14653:108:14","trueBody":{"id":5665,"nodeType":"Block","src":"14675:86:14","statements":[{"expression":{"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5655,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14689:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"14689:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5658,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"14712:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14689:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5660,"nodeType":"ExpressionStatement","src":"14689:29:14"},{"expression":{"components":[{"hexValue":"30","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14740:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5662,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"14743:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14739:11:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint256_$","typeString":"tuple(int_const 0,uint256)"}},"functionReturnParameters":5623,"id":5664,"nodeType":"Return","src":"14732:18:14"}]}},"id":5667,"nodeType":"IfStatement","src":"14587:174:14","trueBody":{"id":5651,"nodeType":"Block","src":"14604:43:14","statements":[{"expression":{"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5647,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"14618:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5648,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"14627:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14618:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5650,"nodeType":"ExpressionStatement","src":"14618:18:14"}]}},{"expression":{"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5668,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14770:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":4167,"src":"14770:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14792:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14770:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5673,"nodeType":"ExpressionStatement","src":"14770:23:14"},{"expression":{"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5674,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"14803:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"14814:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5676,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"14823:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14814:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14803:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5679,"nodeType":"ExpressionStatement","src":"14803:26:14"},{"expression":{"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5680,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"14839:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"14839:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5683,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"14860:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14839:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5685,"nodeType":"ExpressionStatement","src":"14839:29:14"},{"expression":{"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5686,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"14878:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo memory"}},"id":5688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":4163,"src":"14878:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5689,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"14899:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14878:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5691,"nodeType":"ExpressionStatement","src":"14878:29:14"}]},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"_unstake","nameLocation":"14247:8:14","nodeType":"FunctionDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"vInfo","nameLocation":"14282:5:14","nodeType":"VariableDeclaration","scope":5693,"src":"14265:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":5611,"nodeType":"UserDefinedTypeName","pathNode":{"id":5610,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"14265:9:14"},"referencedDeclaration":4170,"src":"14265:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":5615,"mutability":"mutable","name":"sInfo","nameLocation":"14314:5:14","nodeType":"VariableDeclaration","scope":5693,"src":"14297:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_memory_ptr","typeString":"struct CMTStaking.StakeInfo"},"typeName":{"id":5614,"nodeType":"UserDefinedTypeName","pathNode":{"id":5613,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":4170,"src":"14297:9:14"},"referencedDeclaration":4170,"src":"14297:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4170_storage_ptr","typeString":"struct CMTStaking.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":5617,"mutability":"mutable","name":"amount","nameLocation":"14337:6:14","nodeType":"VariableDeclaration","scope":5693,"src":"14329:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5616,"name":"uint256","nodeType":"ElementaryTypeName","src":"14329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14255:94:14"},"returnParameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"unstaked","nameLocation":"14381:8:14","nodeType":"VariableDeclaration","scope":5693,"src":"14373:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"14373:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5622,"mutability":"mutable","name":"reward","nameLocation":"14399:6:14","nodeType":"VariableDeclaration","scope":5693,"src":"14391:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5621,"name":"uint256","nodeType":"ElementaryTypeName","src":"14391:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14372:34:14"},"scope":5819,"src":"14238:676:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5714,"nodeType":"Block","src":"14985:120:14","statements":[{"assignments":[5701,null],"declarations":[{"constant":false,"id":5701,"mutability":"mutable","name":"success","nameLocation":"15001:7:14","nodeType":"VariableDeclaration","scope":5714,"src":"14996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5700,"name":"bool","nodeType":"ElementaryTypeName","src":"14996:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5708,"initialValue":{"arguments":[{"hexValue":"","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15037:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"15014:2:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"15014:7:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"15029:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15014:22:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15014:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14995:45:14"},{"expression":{"arguments":[{"id":5710,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"15058:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64206e617469766520746f6b656e2e","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15067:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a","typeString":"literal_string \"Failed to send native token.\""},"value":"Failed to send native token."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a","typeString":"literal_string \"Failed to send native token.\""}],"id":5709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15050:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15050:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5713,"nodeType":"ExpressionStatement","src":"15050:48:14"}]},"id":5715,"implemented":true,"kind":"function","modifiers":[],"name":"_sendValue","nameLocation":"14929:10:14","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"to","nameLocation":"14956:2:14","nodeType":"VariableDeclaration","scope":5715,"src":"14940:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5694,"name":"address","nodeType":"ElementaryTypeName","src":"14940:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5697,"mutability":"mutable","name":"amount","nameLocation":"14968:6:14","nodeType":"VariableDeclaration","scope":5715,"src":"14960:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5696,"name":"uint256","nodeType":"ElementaryTypeName","src":"14960:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14939:36:14"},"returnParameters":{"id":5699,"nodeType":"ParameterList","parameters":[],"src":"14985:0:14"},"scope":5819,"src":"14920:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5737,"nodeType":"Block","src":"15164:201:14","statements":[{"expression":{"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5720,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"15174:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"15200:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15209:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"15200:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15174:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5725,"nodeType":"ExpressionStatement","src":"15174:36:14"},{"expression":{"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5726,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"15220:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"15243:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5728,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"15252:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15243:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15220:55:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5731,"nodeType":"ExpressionStatement","src":"15220:55:14"},{"eventCall":{"arguments":[{"id":5733,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"15312:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5734,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"15337:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5732,"name":"RewardPerBlockChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"15290:21:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15290:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5736,"nodeType":"EmitStatement","src":"15285:73:14"}]},"id":5738,"implemented":true,"kind":"function","modifiers":[],"name":"_setRewardPerBlock","nameLocation":"15120:18:14","nodeType":"FunctionDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5717,"mutability":"mutable","name":"amount","nameLocation":"15147:6:14","nodeType":"VariableDeclaration","scope":5738,"src":"15139:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"15139:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15138:16:14"},"returnParameters":{"id":5719,"nodeType":"ParameterList","parameters":[],"src":"15164:0:14"},"scope":5819,"src":"15111:254:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5751,"nodeType":"Block","src":"15419:76:14","statements":[{"expression":{"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5743,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"15429:10:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5744,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"15442:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15429:19:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5746,"nodeType":"ExpressionStatement","src":"15429:19:14"},{"eventCall":{"arguments":[{"id":5748,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"15481:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":5747,"name":"LockPeriodChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"15463:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15463:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5750,"nodeType":"EmitStatement","src":"15458:30:14"}]},"id":5752,"implemented":true,"kind":"function","modifiers":[],"name":"_setLockPeriod","nameLocation":"15380:14:14","nodeType":"FunctionDefinition","parameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"period","nameLocation":"15402:6:14","nodeType":"VariableDeclaration","scope":5752,"src":"15395:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5739,"name":"uint32","nodeType":"ElementaryTypeName","src":"15395:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15394:15:14"},"returnParameters":{"id":5742,"nodeType":"ParameterList","parameters":[],"src":"15419:0:14"},"scope":5819,"src":"15371:124:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5802,"nodeType":"Block","src":"15552:389:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"15570:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15591:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15583:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5759,"name":"address","nodeType":"ElementaryTypeName","src":"15583:7:14","typeDescriptions":{}}},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15583:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15570:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616464726573732e","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15595:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34","typeString":"literal_string \"Invalid address.\""},"value":"Invalid address."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34","typeString":"literal_string \"Invalid address.\""}],"id":5757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15562:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15562:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5766,"nodeType":"ExpressionStatement","src":"15562:52:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5768,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"15632:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"15632:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15632:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5771,"name":"validatorLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"15655:14:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15632:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f7273206172652066756c6c2e","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15671:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19","typeString":"literal_string \"Validators are full.\""},"value":"Validators are full."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19","typeString":"literal_string \"Validators are full.\""}],"id":5767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15624:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15624:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5775,"nodeType":"ExpressionStatement","src":"15624:70:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15725:29:14","subExpression":{"arguments":[{"id":5778,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"15744:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5777,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"15726:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15726:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5781,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"15758:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$4161_storage_$","typeString":"mapping(address => struct CMTStaking.Pool storage ref)"}},"id":5783,"indexExpression":{"id":5782,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"15772:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15758:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$4161_storage","typeString":"struct CMTStaking.Pool storage ref"}},"id":5784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":4160,"src":"15758:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15798:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15758:41:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15725:74:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f7220686164206265656e2061646465642e","id":5788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15813:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e","typeString":"literal_string \"Validator had been added.\""},"value":"Validator had been added."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e","typeString":"literal_string \"Validator had been added.\""}],"id":5776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15704:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15704:146:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5790,"nodeType":"ExpressionStatement","src":"15704:146:14"},{"expression":{"arguments":[{"id":5794,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"15876:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5791,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"15860:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":5793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"15860:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3842_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15860:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5796,"nodeType":"ExpressionStatement","src":"15860:26:14"},{"eventCall":{"arguments":[{"id":5798,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"15918:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15929:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5797,"name":"ValidatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"15901:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15901:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5801,"nodeType":"EmitStatement","src":"15896:38:14"}]},"id":5803,"implemented":true,"kind":"function","modifiers":[],"name":"_addValidator","nameLocation":"15510:13:14","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"validator","nameLocation":"15532:9:14","nodeType":"VariableDeclaration","scope":5803,"src":"15524:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5753,"name":"address","nodeType":"ElementaryTypeName","src":"15524:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15523:19:14"},"returnParameters":{"id":5756,"nodeType":"ParameterList","parameters":[],"src":"15552:0:14"},"scope":5819,"src":"15501:440:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[801],"body":{"id":5817,"nodeType":"Block","src":"16024:83:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16042:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16042:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5812,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"16056:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16042:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206b65657065722063616e207570677261646520636f6e74726163742e","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16064:35:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc","typeString":"literal_string \"Only keeper can upgrade contract.\""},"value":"Only keeper can upgrade contract."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc","typeString":"literal_string \"Only keeper can upgrade contract.\""}],"id":5809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16034:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16034:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"ExpressionStatement","src":"16034:66:14"}]},"id":5818,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"15956:17:14","nodeType":"FunctionDefinition","overrides":{"id":5807,"nodeType":"OverrideSpecifier","overrides":[],"src":"16015:8:14"},"parameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"newImplementation","nameLocation":"15982:17:14","nodeType":"VariableDeclaration","scope":5818,"src":"15974:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5804,"name":"address","nodeType":"ElementaryTypeName","src":"15974:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15973:27:14"},"returnParameters":{"id":5808,"nodeType":"ParameterList","parameters":[],"src":"16024:0:14"},"scope":5819,"src":"15947:160:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5820,"src":"588:15521:14","usedErrors":[3196,3199]}],"src":"32:16078:14"},"id":14},"contracts/mock/CMTStakingMock.sol":{"ast":{"absolutePath":"contracts/mock/CMTStakingMock.sol","exportedSymbols":{"AddressUpgradeable":[1236],"CMTStakingMock":[7509],"ContextUpgradeable":[1278],"DoubleEndedQueue":[3530],"ERC1967UpgradeUpgradeable":[510],"EnumerableSet":[4129],"IBeaconUpgradeable":[520],"IERC1822ProxiableUpgradeable":[141],"Initializable":[671],"OwnableUpgradeable":[131],"PausableUpgradeable":[934],"ReentrancyGuardUpgradeable":[993],"SafeCast":[3189],"StorageSlotUpgradeable":[1338],"UUPSUpgradeable":[807]},"id":7510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5821,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","file":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","id":5822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7510,"sourceUnit":3531,"src":"57:68:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":5823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7510,"sourceUnit":4130,"src":"126:65:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":5824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7510,"sourceUnit":132,"src":"192:75:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7510,"sourceUnit":672,"src":"268:75:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":5826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7510,"sourceUnit":808,"src":"344:77:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":5827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7510,"sourceUnit":935,"src":"422:78:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":5828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7510,"sourceUnit":994,"src":"501:85:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5829,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":671,"src":"619:13:15"},"id":5830,"nodeType":"InheritanceSpecifier","src":"619:13:15"},{"baseName":{"id":5831,"name":"ReentrancyGuardUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":993,"src":"739:26:15"},"id":5832,"nodeType":"InheritanceSpecifier","src":"739:26:15"},{"baseName":{"id":5833,"name":"PausableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":934,"src":"771:19:15"},"id":5834,"nodeType":"InheritanceSpecifier","src":"771:19:15"},{"baseName":{"id":5835,"name":"OwnableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"796:18:15"},"id":5836,"nodeType":"InheritanceSpecifier","src":"796:18:15"},{"baseName":{"id":5837,"name":"UUPSUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":807,"src":"820:15:15"},"id":5838,"nodeType":"InheritanceSpecifier","src":"820:15:15"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7509,"linearizedBaseContracts":[7509,807,510,141,131,934,1278,993,671],"name":"CMTStakingMock","nameLocation":"597:14:15","nodeType":"ContractDefinition","nodes":[{"id":5842,"libraryName":{"id":5839,"name":"DoubleEndedQueue","nodeType":"IdentifierPath","referencedDeclaration":3530,"src":"848:16:15"},"nodeType":"UsingForDirective","src":"842:57:15","typeName":{"id":5841,"nodeType":"UserDefinedTypeName","pathNode":{"id":5840,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"869:29:15"},"referencedDeclaration":3208,"src":"869:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}}},{"id":5846,"libraryName":{"id":5843,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4129,"src":"910:13:15"},"nodeType":"UsingForDirective","src":"904:49:15","typeName":{"id":5845,"nodeType":"UserDefinedTypeName","pathNode":{"id":5844,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"928:24:15"},"referencedDeclaration":3842,"src":"928:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"canonicalName":"CMTStakingMock.Pool","id":5851,"members":[{"constant":false,"id":5848,"mutability":"mutable","name":"lastAUR","nameLocation":"989:7:15","nodeType":"VariableDeclaration","scope":5851,"src":"981:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5847,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5850,"mutability":"mutable","name":"updateBlock","nameLocation":"1014:11:15","nodeType":"VariableDeclaration","scope":5851,"src":"1006:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1006:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Pool","nameLocation":"966:4:15","nodeType":"StructDefinition","scope":7509,"src":"959:73:15","visibility":"public"},{"canonicalName":"CMTStakingMock.StakeInfo","id":5860,"members":[{"constant":false,"id":5853,"mutability":"mutable","name":"stakeAmount","nameLocation":"1073:11:15","nodeType":"VariableDeclaration","scope":5860,"src":"1065:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1065:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5855,"mutability":"mutable","name":"rewardDebt","nameLocation":"1102:10:15","nodeType":"VariableDeclaration","scope":5860,"src":"1094:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5857,"mutability":"mutable","name":"pendingReward","nameLocation":"1130:13:15","nodeType":"VariableDeclaration","scope":5860,"src":"1122:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5859,"mutability":"mutable","name":"updateBlock","nameLocation":"1161:11:15","nodeType":"VariableDeclaration","scope":5860,"src":"1153:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1045:9:15","nodeType":"StructDefinition","scope":7509,"src":"1038:141:15","visibility":"public"},{"canonicalName":"CMTStakingMock.Withdrawal","id":5865,"members":[{"constant":false,"id":5862,"mutability":"mutable","name":"amount","nameLocation":"1221:6:15","nodeType":"VariableDeclaration","scope":5865,"src":"1213:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5864,"mutability":"mutable","name":"timestamp","nameLocation":"1245:9:15","nodeType":"VariableDeclaration","scope":5865,"src":"1237:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Withdrawal","nameLocation":"1192:10:15","nodeType":"StructDefinition","scope":7509,"src":"1185:76:15","visibility":"public"},{"constant":false,"functionSelector":"aced1661","id":5867,"mutability":"mutable","name":"keeper","nameLocation":"1282:6:15","nodeType":"VariableDeclaration","scope":7509,"src":"1267:21:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5866,"name":"address","nodeType":"ElementaryTypeName","src":"1267:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":5870,"mutability":"mutable","name":"_validators","nameLocation":"1328:11:15","nodeType":"VariableDeclaration","scope":7509,"src":"1295:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":5869,"nodeType":"UserDefinedTypeName","pathNode":{"id":5868,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"1295:24:15"},"referencedDeclaration":3842,"src":"1295:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"functionSelector":"d4c6d1de","id":5873,"mutability":"mutable","name":"validatorPool","nameLocation":"1358:13:15","nodeType":"VariableDeclaration","scope":7509,"src":"1346:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":5872,"nodeType":"UserDefinedTypeName","pathNode":{"id":5871,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"1346:4:15"},"referencedDeclaration":5851,"src":"1346:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"public"},{"constant":false,"functionSelector":"f0544ac8","id":5876,"mutability":"mutable","name":"stakerPool","nameLocation":"1389:10:15","nodeType":"VariableDeclaration","scope":7509,"src":"1377:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":5875,"nodeType":"UserDefinedTypeName","pathNode":{"id":5874,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"1377:4:15"},"referencedDeclaration":5851,"src":"1377:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"public"},{"constant":false,"functionSelector":"340c5a25","id":5881,"mutability":"mutable","name":"inactivePools","nameLocation":"1437:13:15","nodeType":"VariableDeclaration","scope":7509,"src":"1405:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$5851_storage_$","typeString":"mapping(address => struct CMTStakingMock.Pool)"},"typeName":{"id":5880,"keyType":{"id":5877,"name":"address","nodeType":"ElementaryTypeName","src":"1413:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1405:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$5851_storage_$","typeString":"mapping(address => struct CMTStakingMock.Pool)"},"valueType":{"id":5879,"nodeType":"UserDefinedTypeName","pathNode":{"id":5878,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"1424:4:15"},"referencedDeclaration":5851,"src":"1424:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f6a2314a","id":5888,"mutability":"mutable","name":"stakeTable","nameLocation":"1555:10:15","nodeType":"VariableDeclaration","scope":7509,"src":"1498:67:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo))"},"typeName":{"id":5887,"keyType":{"id":5882,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1498:49:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo))"},"valueType":{"id":5886,"keyType":{"id":5883,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:29:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo)"},"valueType":{"id":5885,"nodeType":"UserDefinedTypeName","pathNode":{"id":5884,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"1536:9:15"},"referencedDeclaration":5860,"src":"1536:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"29451893","id":5893,"mutability":"mutable","name":"withdrawTable","nameLocation":"1629:13:15","nodeType":"VariableDeclaration","scope":7509,"src":"1572:70:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque)"},"typeName":{"id":5892,"keyType":{"id":5889,"name":"address","nodeType":"ElementaryTypeName","src":"1580:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1572:49:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque)"},"valueType":{"id":5891,"nodeType":"UserDefinedTypeName","pathNode":{"id":5890,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"1591:29:15"},"referencedDeclaration":3208,"src":"1591:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}}},"visibility":"public"},{"constant":false,"functionSelector":"57525cbc","id":5895,"mutability":"mutable","name":"validatorLimit","nameLocation":"1663:14:15","nodeType":"VariableDeclaration","scope":7509,"src":"1649:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5894,"name":"uint32","nodeType":"ElementaryTypeName","src":"1649:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"3fd8b02f","id":5897,"mutability":"mutable","name":"lockPeriod","nameLocation":"1698:10:15","nodeType":"VariableDeclaration","scope":7509,"src":"1684:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5896,"name":"uint32","nodeType":"ElementaryTypeName","src":"1684:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"7ea5db42","id":5899,"mutability":"mutable","name":"validatorRewardPerBlock","nameLocation":"1730:23:15","nodeType":"VariableDeclaration","scope":7509,"src":"1715:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"24e770d0","id":5901,"mutability":"mutable","name":"stakerRewardPerBlock","nameLocation":"1774:20:15","nodeType":"VariableDeclaration","scope":7509,"src":"1759:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"94409a56","id":5903,"mutability":"mutable","name":"totalStakeAmount","nameLocation":"1816:16:15","nodeType":"VariableDeclaration","scope":7509,"src":"1801:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d849a502","id":5905,"mutability":"mutable","name":"activeStakeAmount","nameLocation":"1853:17:15","nodeType":"VariableDeclaration","scope":7509,"src":"1838:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"45f7b8f4","id":5908,"mutability":"constant","name":"AUR_PREC","nameLocation":"1900:8:15","nodeType":"VariableDeclaration","scope":7509,"src":"1876:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1911:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"functionSelector":"27ed7188","id":5910,"mutability":"immutable","name":"MIN_STAKE_AMOUNT","nameLocation":"1947:16:15","nodeType":"VariableDeclaration","scope":7509,"src":"1922:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b6857844","id":5912,"mutability":"immutable","name":"MIN_WITHDRAW_AMOUNT","nameLocation":"1994:19:15","nodeType":"VariableDeclaration","scope":7509,"src":"1969:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"id":5918,"name":"Received","nameLocation":"2026:8:15","nodeType":"EventDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2051:6:15","nodeType":"VariableDeclaration","scope":5918,"src":"2035:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5913,"name":"address","nodeType":"ElementaryTypeName","src":"2035:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5916,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2067:6:15","nodeType":"VariableDeclaration","scope":5918,"src":"2059:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2034:40:15"},"src":"2020:55:15"},{"anonymous":false,"id":5924,"name":"RewardPerBlockChanged","nameLocation":"2086:21:15","nodeType":"EventDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5920,"indexed":false,"mutability":"mutable","name":"validatorReward","nameLocation":"2116:15:15","nodeType":"VariableDeclaration","scope":5924,"src":"2108:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5919,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5922,"indexed":false,"mutability":"mutable","name":"stakerReward","nameLocation":"2141:12:15","nodeType":"VariableDeclaration","scope":5924,"src":"2133:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2107:47:15"},"src":"2080:75:15"},{"anonymous":false,"id":5928,"name":"LockPeriodChanged","nameLocation":"2166:17:15","nodeType":"EventDefinition","parameters":{"id":5927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"indexed":false,"mutability":"mutable","name":"newLockPeriod","nameLocation":"2191:13:15","nodeType":"VariableDeclaration","scope":5928,"src":"2184:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5925,"name":"uint32","nodeType":"ElementaryTypeName","src":"2184:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2183:22:15"},"src":"2160:46:15"},{"anonymous":false,"id":5934,"name":"ValidatorChanged","nameLocation":"2217:16:15","nodeType":"EventDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"indexed":false,"mutability":"mutable","name":"validator","nameLocation":"2242:9:15","nodeType":"VariableDeclaration","scope":5934,"src":"2234:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5929,"name":"address","nodeType":"ElementaryTypeName","src":"2234:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5932,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"2258:7:15","nodeType":"VariableDeclaration","scope":5934,"src":"2253:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5931,"name":"bool","nodeType":"ElementaryTypeName","src":"2253:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2233:33:15"},"src":"2211:56:15"},{"anonymous":false,"id":5942,"name":"Stake","nameLocation":"2278:5:15","nodeType":"EventDefinition","parameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2300:6:15","nodeType":"VariableDeclaration","scope":5942,"src":"2284:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5935,"name":"address","nodeType":"ElementaryTypeName","src":"2284:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5938,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"2324:9:15","nodeType":"VariableDeclaration","scope":5942,"src":"2308:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5937,"name":"address","nodeType":"ElementaryTypeName","src":"2308:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5940,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2343:6:15","nodeType":"VariableDeclaration","scope":5942,"src":"2335:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2283:67:15"},"src":"2272:79:15"},{"anonymous":false,"id":5952,"name":"Unstake","nameLocation":"2362:7:15","nodeType":"EventDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"indexed":true,"mutability":"mutable","name":"staker","nameLocation":"2386:6:15","nodeType":"VariableDeclaration","scope":5952,"src":"2370:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5943,"name":"address","nodeType":"ElementaryTypeName","src":"2370:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5946,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"2410:9:15","nodeType":"VariableDeclaration","scope":5952,"src":"2394:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5945,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5948,"indexed":false,"mutability":"mutable","name":"unstakeAmount","nameLocation":"2429:13:15","nodeType":"VariableDeclaration","scope":5952,"src":"2421:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2421:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5950,"indexed":false,"mutability":"mutable","name":"claimedReward","nameLocation":"2452:13:15","nodeType":"VariableDeclaration","scope":5952,"src":"2444:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2444:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2369:97:15"},"src":"2356:111:15"},{"anonymous":false,"id":5958,"name":"WithdrawalInitiated","nameLocation":"2478:19:15","nodeType":"EventDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2514:7:15","nodeType":"VariableDeclaration","scope":5958,"src":"2498:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5953,"name":"address","nodeType":"ElementaryTypeName","src":"2498:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5956,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2531:6:15","nodeType":"VariableDeclaration","scope":5958,"src":"2523:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2523:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2497:41:15"},"src":"2472:67:15"},{"anonymous":false,"id":5966,"name":"WithdrawalCompleted","nameLocation":"2550:19:15","nodeType":"EventDefinition","parameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2586:7:15","nodeType":"VariableDeclaration","scope":5966,"src":"2570:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5959,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5962,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2611:9:15","nodeType":"VariableDeclaration","scope":5966,"src":"2595:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5961,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5964,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2630:6:15","nodeType":"VariableDeclaration","scope":5966,"src":"2622:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5963,"name":"uint256","nodeType":"ElementaryTypeName","src":"2622:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:68:15"},"src":"2544:94:15"},{"body":{"id":5994,"nodeType":"Block","src":"2760:208:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5974,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"2770:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2770:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5976,"nodeType":"ExpressionStatement","src":"2770:22:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5978,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"2810:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2828:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"39","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2834:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"2828:7:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"}},"src":"2810:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d696e696d616c207374616b6520616d6f756e742e","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2837:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32","typeString":"literal_string \"Invalid minimal stake amount.\""},"value":"Invalid minimal stake amount."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32","typeString":"literal_string \"Invalid minimal stake amount.\""}],"id":5977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2802:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2802:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5985,"nodeType":"ExpressionStatement","src":"2802:67:15"},{"expression":{"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5986,"name":"MIN_STAKE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"2879:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5987,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"2898:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2879:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5989,"nodeType":"ExpressionStatement","src":"2879:33:15"},{"expression":{"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5990,"name":"MIN_WITHDRAW_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"2922:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5991,"name":"minWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"2944:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2922:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5993,"nodeType":"ExpressionStatement","src":"2922:39:15"}]},"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"2644:48:15","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":5995,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"minStakeAmount","nameLocation":"2717:14:15","nodeType":"VariableDeclaration","scope":5995,"src":"2709:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5971,"mutability":"mutable","name":"minWithdrawAmount","nameLocation":"2741:17:15","nodeType":"VariableDeclaration","scope":5995,"src":"2733:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:51:15"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[],"src":"2760:0:15"},"scope":7509,"src":"2697:271:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6038,"nodeType":"Block","src":"3049:471:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6004,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3059:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3059:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6006,"nodeType":"ExpressionStatement","src":"3059:24:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6007,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"3093:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3093:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6009,"nodeType":"ExpressionStatement","src":"3093:17:15"},{"expression":{"arguments":[{"id":6011,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"3139:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6010,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"3120:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3120:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6013,"nodeType":"ExpressionStatement","src":"3120:25:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6014,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"3155:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3155:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6016,"nodeType":"ExpressionStatement","src":"3155:24:15"},{"expression":{"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6017,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"3190:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3199:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3199:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3190:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6021,"nodeType":"ExpressionStatement","src":"3190:19:15"},{"expression":{"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6022,"name":"validatorLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"3261:14:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3231","id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3278:2:15","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"3261:19:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6025,"nodeType":"ExpressionStatement","src":"3261:19:15"},{"expression":{"arguments":[{"hexValue":"35","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3357:7:15","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5000000000000000000_by_1","typeString":"int_const 5000000000000000000"}],"id":6026,"name":"_setRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"3338:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6029,"nodeType":"ExpressionStatement","src":"3338:27:15"},{"expression":{"arguments":[{"hexValue":"37","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:6:15","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"}],"id":6030,"name":"_setLockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"3425:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3425:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6033,"nodeType":"ExpressionStatement","src":"3425:22:15"},{"expression":{"arguments":[{"id":6035,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"3503:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6034,"name":"_addValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"3489:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3489:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6037,"nodeType":"ExpressionStatement","src":"3489:24:15"}]},"functionSelector":"485cc955","id":6039,"implemented":true,"kind":"function","modifiers":[{"id":6002,"kind":"modifierInvocation","modifierName":{"id":6001,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":591,"src":"3037:11:15"},"nodeType":"ModifierInvocation","src":"3037:11:15"}],"name":"initialize","nameLocation":"2983:10:15","nodeType":"FunctionDefinition","parameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"owner","nameLocation":"3002:5:15","nodeType":"VariableDeclaration","scope":6039,"src":"2994:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5996,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5999,"mutability":"mutable","name":"validator","nameLocation":"3017:9:15","nodeType":"VariableDeclaration","scope":6039,"src":"3009:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5998,"name":"address","nodeType":"ElementaryTypeName","src":"3009:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:34:15"},"returnParameters":{"id":6003,"nodeType":"ParameterList","parameters":[],"src":"3049:0:15"},"scope":7509,"src":"2974:546:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6049,"nodeType":"Block","src":"3553:53:15","statements":[{"eventCall":{"arguments":[{"expression":{"id":6043,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3577:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3577:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3589:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3589:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6042,"name":"Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"3568:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3568:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6048,"nodeType":"EmitStatement","src":"3563:36:15"}]},"id":6050,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6040,"nodeType":"ParameterList","parameters":[],"src":"3533:2:15"},"returnParameters":{"id":6041,"nodeType":"ParameterList","parameters":[],"src":"3553:0:15"},"scope":7509,"src":"3526:80:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6057,"nodeType":"Block","src":"3666:25:15","statements":[{"expression":{"hexValue":"32","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3683:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"functionReturnParameters":6054,"id":6056,"nodeType":"Return","src":"3676:8:15"}]},"functionSelector":"0d8e6e2c","id":6058,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3621:10:15","nodeType":"FunctionDefinition","parameters":{"id":6051,"nodeType":"ParameterList","parameters":[],"src":"3631:2:15"},"returnParameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6058,"src":"3657:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:15"},"scope":7509,"src":"3612:79:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":6066,"nodeType":"Block","src":"3848:25:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6063,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3858:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3858:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6065,"nodeType":"ExpressionStatement","src":"3858:8:15"}]},"functionSelector":"8456cb59","id":6067,"implemented":true,"kind":"function","modifiers":[{"id":6061,"kind":"modifierInvocation","modifierName":{"id":6060,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3838:9:15"},"nodeType":"ModifierInvocation","src":"3838:9:15"}],"name":"pause","nameLocation":"3821:5:15","nodeType":"FunctionDefinition","parameters":{"id":6059,"nodeType":"ParameterList","parameters":[],"src":"3826:2:15"},"returnParameters":{"id":6062,"nodeType":"ParameterList","parameters":[],"src":"3848:0:15"},"scope":7509,"src":"3812:61:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6075,"nodeType":"Block","src":"3917:27:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6072,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3927:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3927:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6074,"nodeType":"ExpressionStatement","src":"3927:10:15"}]},"functionSelector":"3f4ba83a","id":6076,"implemented":true,"kind":"function","modifiers":[{"id":6070,"kind":"modifierInvocation","modifierName":{"id":6069,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3907:9:15"},"nodeType":"ModifierInvocation","src":"3907:9:15"}],"name":"unpause","nameLocation":"3888:7:15","nodeType":"FunctionDefinition","parameters":{"id":6068,"nodeType":"ParameterList","parameters":[],"src":"3895:2:15"},"returnParameters":{"id":6071,"nodeType":"ParameterList","parameters":[],"src":"3917:0:15"},"scope":7509,"src":"3879:65:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6097,"nodeType":"Block","src":"4051:125:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"4069:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4078:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4069:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265776172642070657220626c6f636b2e","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4081:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e","typeString":"literal_string \"Invalid reward per block.\""},"value":"Invalid reward per block."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e","typeString":"literal_string \"Invalid reward per block.\""}],"id":6083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4061:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4061:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6089,"nodeType":"ExpressionStatement","src":"4061:48:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6090,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"4119:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function () returns (struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4119:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"tuple(struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"id":6092,"nodeType":"ExpressionStatement","src":"4119:14:15"},{"expression":{"arguments":[{"id":6094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"4162:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6093,"name":"_setRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"4143:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4143:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6096,"nodeType":"ExpressionStatement","src":"4143:26:15"}]},"functionSelector":"bb872b4a","id":6098,"implemented":true,"kind":"function","modifiers":[{"id":6081,"kind":"modifierInvocation","modifierName":{"id":6080,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4041:9:15"},"nodeType":"ModifierInvocation","src":"4041:9:15"}],"name":"setRewardPerBlock","nameLocation":"3998:17:15","nodeType":"FunctionDefinition","parameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"amount","nameLocation":"4024:6:15","nodeType":"VariableDeclaration","scope":6098,"src":"4016:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6077,"name":"uint256","nodeType":"ElementaryTypeName","src":"4016:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4015:16:15"},"returnParameters":{"id":6082,"nodeType":"ParameterList","parameters":[],"src":"4051:0:15"},"scope":7509,"src":"3989:187:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6116,"nodeType":"Block","src":"4239:98:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6106,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"4257:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4267:6:15","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"4257:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f636b20706572696f642e","id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4275:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8","typeString":"literal_string \"Invalid lock period.\""},"value":"Invalid lock period."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8","typeString":"literal_string \"Invalid lock period.\""}],"id":6105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4249:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4249:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6111,"nodeType":"ExpressionStatement","src":"4249:49:15"},{"expression":{"arguments":[{"id":6113,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"4323:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":6112,"name":"_setLockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"4308:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4308:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6115,"nodeType":"ExpressionStatement","src":"4308:22:15"}]},"functionSelector":"f489f23b","id":6117,"implemented":true,"kind":"function","modifiers":[{"id":6103,"kind":"modifierInvocation","modifierName":{"id":6102,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4229:9:15"},"nodeType":"ModifierInvocation","src":"4229:9:15"}],"name":"setLockPeriod","nameLocation":"4191:13:15","nodeType":"FunctionDefinition","parameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"period","nameLocation":"4212:6:15","nodeType":"VariableDeclaration","scope":6117,"src":"4205:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6099,"name":"uint32","nodeType":"ElementaryTypeName","src":"4205:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4204:15:15"},"returnParameters":{"id":6104,"nodeType":"ParameterList","parameters":[],"src":"4239:0:15"},"scope":7509,"src":"4182:155:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6138,"nodeType":"Block","src":"4400:104:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6125,"name":"newKeeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"4418:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4439:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4431:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6126,"name":"address","nodeType":"ElementaryTypeName","src":"4431:7:15","typeDescriptions":{}}},"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4431:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4418:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206b656570657220616464726573732e","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4443:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f","typeString":"literal_string \"Invalid keeper address.\""},"value":"Invalid keeper address."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f","typeString":"literal_string \"Invalid keeper address.\""}],"id":6124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4410:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4410:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6133,"nodeType":"ExpressionStatement","src":"4410:59:15"},{"expression":{"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6134,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"4479:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6135,"name":"newKeeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"4488:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4479:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6137,"nodeType":"ExpressionStatement","src":"4479:18:15"}]},"functionSelector":"748747e6","id":6139,"implemented":true,"kind":"function","modifiers":[{"id":6122,"kind":"modifierInvocation","modifierName":{"id":6121,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4390:9:15"},"nodeType":"ModifierInvocation","src":"4390:9:15"}],"name":"setKeeper","nameLocation":"4352:9:15","nodeType":"FunctionDefinition","parameters":{"id":6120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6119,"mutability":"mutable","name":"newKeeper","nameLocation":"4370:9:15","nodeType":"VariableDeclaration","scope":6139,"src":"4362:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6118,"name":"address","nodeType":"ElementaryTypeName","src":"4362:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4361:19:15"},"returnParameters":{"id":6123,"nodeType":"ParameterList","parameters":[],"src":"4400:0:15"},"scope":7509,"src":"4343:161:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6159,"nodeType":"Block","src":"4607:111:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6147,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"4625:5:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6148,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"4634:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"4634:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4634:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4625:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c696d69742076616c75652e","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4656:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a","typeString":"literal_string \"Invalid limit value.\""},"value":"Invalid limit value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a","typeString":"literal_string \"Invalid limit value.\""}],"id":6146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4617:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6154,"nodeType":"ExpressionStatement","src":"4617:62:15"},{"expression":{"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6155,"name":"validatorLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"4689:14:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6156,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"4706:5:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4689:22:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6158,"nodeType":"ExpressionStatement","src":"4689:22:15"}]},"functionSelector":"522abc40","id":6160,"implemented":true,"kind":"function","modifiers":[{"id":6144,"kind":"modifierInvocation","modifierName":{"id":6143,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4597:9:15"},"nodeType":"ModifierInvocation","src":"4597:9:15"}],"name":"setValidatorLimit","nameLocation":"4556:17:15","nodeType":"FunctionDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"limit","nameLocation":"4581:5:15","nodeType":"VariableDeclaration","scope":6160,"src":"4574:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6140,"name":"uint32","nodeType":"ElementaryTypeName","src":"4574:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4573:14:15"},"returnParameters":{"id":6145,"nodeType":"ParameterList","parameters":[],"src":"4607:0:15"},"scope":7509,"src":"4547:171:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6171,"nodeType":"Block","src":"4805:41:15","statements":[{"expression":{"arguments":[{"id":6168,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"4829:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6167,"name":"_addValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"4815:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4815:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6170,"nodeType":"ExpressionStatement","src":"4815:24:15"}]},"functionSelector":"4d238c8e","id":6172,"implemented":true,"kind":"function","modifiers":[{"id":6165,"kind":"modifierInvocation","modifierName":{"id":6164,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4795:9:15"},"nodeType":"ModifierInvocation","src":"4795:9:15"}],"name":"addValidator","nameLocation":"4754:12:15","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"validator","nameLocation":"4775:9:15","nodeType":"VariableDeclaration","scope":6172,"src":"4767:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6161,"name":"address","nodeType":"ElementaryTypeName","src":"4767:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4766:19:15"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[],"src":"4805:0:15"},"scope":7509,"src":"4745:101:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6266,"nodeType":"Block","src":"4943:659:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6180,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"4961:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"4961:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4961:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4984:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4961:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742072656d6f766520746865206f6e6c792076616c696461746f722e","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4987:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a","typeString":"literal_string \"Cannot remove the only validator.\""},"value":"Cannot remove the only validator."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a","typeString":"literal_string \"Cannot remove the only validator.\""}],"id":6179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4953:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4953:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6187,"nodeType":"ExpressionStatement","src":"4953:70:15"},{"expression":{"arguments":[{"arguments":[{"id":6190,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5059:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6189,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"5041:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5041:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f72206e6f74206578697374206f7220686173206265656e2072656d6f7665642e","id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5071:42:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""},"value":"Validator not exist or has been removed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""}],"id":6188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5033:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5033:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6194,"nodeType":"ExpressionStatement","src":"5033:81:15"},{"assignments":[6197,6200],"declarations":[{"constant":false,"id":6197,"mutability":"mutable","name":"vPool","nameLocation":"5138:5:15","nodeType":"VariableDeclaration","scope":6266,"src":"5126:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6196,"nodeType":"UserDefinedTypeName","pathNode":{"id":6195,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"5126:4:15"},"referencedDeclaration":5851,"src":"5126:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},{"constant":false,"id":6200,"mutability":"mutable","name":"sPool","nameLocation":"5157:5:15","nodeType":"VariableDeclaration","scope":6266,"src":"5145:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6199,"nodeType":"UserDefinedTypeName","pathNode":{"id":6198,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"5145:4:15"},"referencedDeclaration":5851,"src":"5145:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"}],"id":6203,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6201,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"5166:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function () returns (struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5166:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"tuple(struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"5125:55:15"},{"assignments":[6206],"declarations":[{"constant":false,"id":6206,"mutability":"mutable","name":"info","nameLocation":"5207:4:15","nodeType":"VariableDeclaration","scope":6266,"src":"5190:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":6205,"nodeType":"UserDefinedTypeName","pathNode":{"id":6204,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"5190:9:15"},"referencedDeclaration":5860,"src":"5190:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"id":6215,"initialValue":{"baseExpression":{"baseExpression":{"id":6207,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"5214:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6212,"indexExpression":{"arguments":[{"hexValue":"30","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5233:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5225:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6208,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:15","typeDescriptions":{}}},"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5225:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5214:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6214,"indexExpression":{"id":6213,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5237:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5214:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5190:57:15"},{"expression":{"arguments":[{"id":6217,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"5272:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6218,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"5279:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6216,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"5257:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5257:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6220,"nodeType":"ExpressionStatement","src":"5257:27:15"},{"expression":{"arguments":[{"id":6222,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"5312:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6223,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"5319:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6221,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"5294:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5294:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6225,"nodeType":"ExpressionStatement","src":"5294:30:15"},{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6226,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"5334:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"5334:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6229,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5353:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"5353:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5334:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6232,"nodeType":"ExpressionStatement","src":"5334:31:15"},{"expression":{"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6233,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"5375:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6239,"indexExpression":{"arguments":[{"hexValue":"30","id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5394:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5386:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6234,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:15","typeDescriptions":{}}},"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5386:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5375:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6240,"indexExpression":{"id":6238,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5398:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5375:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6241,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"5411:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"src":"5375:40:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"id":6243,"nodeType":"ExpressionStatement","src":"5375:40:15"},{"expression":{"arguments":[{"id":6247,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5445:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6244,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"5426:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"5426:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3842_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5426:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6249,"nodeType":"ExpressionStatement","src":"5426:29:15"},{"expression":{"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6250,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"5465:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$5851_storage_$","typeString":"mapping(address => struct CMTStakingMock.Pool storage ref)"}},"id":6252,"indexExpression":{"id":6251,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5479:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5465:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6253,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"5492:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"src":"5465:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"id":6255,"nodeType":"ExpressionStatement","src":"5465:32:15"},{"expression":{"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6256,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"5508:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":6257,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"5529:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"5529:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6260,"nodeType":"ExpressionStatement","src":"5508:37:15"},{"eventCall":{"arguments":[{"id":6262,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5578:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5589:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6261,"name":"ValidatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"5561:16:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5561:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6265,"nodeType":"EmitStatement","src":"5556:39:15"}]},"functionSelector":"40a141ff","id":6267,"implemented":true,"kind":"function","modifiers":[{"id":6177,"kind":"modifierInvocation","modifierName":{"id":6176,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"4933:9:15"},"nodeType":"ModifierInvocation","src":"4933:9:15"}],"name":"removeValidator","nameLocation":"4889:15:15","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"validator","nameLocation":"4913:9:15","nodeType":"VariableDeclaration","scope":6267,"src":"4905:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6173,"name":"address","nodeType":"ElementaryTypeName","src":"4905:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4904:19:15"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[],"src":"4943:0:15"},"scope":7509,"src":"4880:722:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6354,"nodeType":"Block","src":"5840:548:15","statements":[{"assignments":[6278,null],"declarations":[{"constant":false,"id":6278,"mutability":"mutable","name":"vPool","nameLocation":"5863:5:15","nodeType":"VariableDeclaration","scope":6354,"src":"5851:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6277,"nodeType":"UserDefinedTypeName","pathNode":{"id":6276,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"5851:4:15"},"referencedDeclaration":5851,"src":"5851:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},null],"id":6281,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6279,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"5874:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function () returns (struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5874:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"tuple(struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"5850:38:15"},{"assignments":[6284],"declarations":[{"constant":false,"id":6284,"mutability":"mutable","name":"info","nameLocation":"5915:4:15","nodeType":"VariableDeclaration","scope":6354,"src":"5898:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":6283,"nodeType":"UserDefinedTypeName","pathNode":{"id":6282,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"5898:9:15"},"referencedDeclaration":5860,"src":"5898:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"id":6294,"initialValue":{"baseExpression":{"baseExpression":{"id":6285,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"5922:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6290,"indexExpression":{"arguments":[{"hexValue":"30","id":6288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5941:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5933:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6286,"name":"address","nodeType":"ElementaryTypeName","src":"5933:7:15","typeDescriptions":{}}},"id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5933:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5922:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6293,"indexExpression":{"expression":{"id":6291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5945:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5945:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5922:34:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5898:58:15"},{"condition":{"arguments":[{"expression":{"id":6296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5988:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5988:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6295,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"5970:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6310,"nodeType":"IfStatement","src":"5966:131:15","trueBody":{"id":6309,"nodeType":"Block","src":"6001:96:15","statements":[{"expression":{"arguments":[{"id":6300,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"6030:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6301,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"6037:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6299,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"6015:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6303,"nodeType":"ExpressionStatement","src":"6015:27:15"},{"expression":{"arguments":[{"id":6305,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"6074:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6306,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"6081:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6304,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"6056:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6056:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6308,"nodeType":"ExpressionStatement","src":"6056:30:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"6115:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6124:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6115:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6315,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"6129:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6316,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"6139:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"6139:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6129:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6115:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74206f7220696e73756666696369656e742062616c616e63652e","id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6159:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92","typeString":"literal_string \"Invalid amount or insufficient balance.\""},"value":"Invalid amount or insufficient balance."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92","typeString":"literal_string \"Invalid amount or insufficient balance.\""}],"id":6311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6107:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6107:94:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6322,"nodeType":"ExpressionStatement","src":"6107:94:15"},{"expression":{"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6323,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"6211:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"6211:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6326,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"6233:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6211:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6328,"nodeType":"ExpressionStatement","src":"6211:28:15"},{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6329,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"6249:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"6249:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6332,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6268:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"6268:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6249:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6335,"nodeType":"ExpressionStatement","src":"6249:31:15"},{"expression":{"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6336,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"6290:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6343,"indexExpression":{"arguments":[{"hexValue":"30","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6309:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6301:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6337,"name":"address","nodeType":"ElementaryTypeName","src":"6301:7:15","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6301:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6290:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6344,"indexExpression":{"expression":{"id":6341,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6313:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6313:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6290:34:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6345,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"6327:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"src":"6290:41:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"id":6347,"nodeType":"ExpressionStatement","src":"6290:41:15"},{"expression":{"arguments":[{"expression":{"id":6349,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6362:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6362:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6351,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"6374:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6348,"name":"_initiateWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"6342:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6342:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6353,"nodeType":"ExpressionStatement","src":"6342:39:15"}]},"functionSelector":"eaf7c9dc","id":6355,"implemented":true,"kind":"function","modifiers":[{"id":6272,"kind":"modifierInvocation","modifierName":{"id":6271,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":987,"src":"5813:12:15"},"nodeType":"ModifierInvocation","src":"5813:12:15"},{"id":6274,"kind":"modifierInvocation","modifierName":{"id":6273,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":856,"src":"5826:13:15"},"nodeType":"ModifierInvocation","src":"5826:13:15"}],"name":"validatorWithdraw","nameLocation":"5770:17:15","nodeType":"FunctionDefinition","parameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6269,"mutability":"mutable","name":"amount","nameLocation":"5796:6:15","nodeType":"VariableDeclaration","scope":6355,"src":"5788:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5787:16:15"},"returnParameters":{"id":6275,"nodeType":"ParameterList","parameters":[],"src":"5840:0:15"},"scope":7509,"src":"5761:627:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6494,"nodeType":"Block","src":"6601:984:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6619:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"6619:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6365,"name":"MIN_STAKE_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"6632:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6619:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616d6f756e74206d757374203e3d204d494e5f5354414b455f414d4f554e542e","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6650:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca","typeString":"literal_string \"Stake amount must >= MIN_STAKE_AMOUNT.\""},"value":"Stake amount must >= MIN_STAKE_AMOUNT."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca","typeString":"literal_string \"Stake amount must >= MIN_STAKE_AMOUNT.\""}],"id":6362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6611:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6611:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6369,"nodeType":"ExpressionStatement","src":"6611:80:15"},{"expression":{"arguments":[{"arguments":[{"id":6372,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"6728:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6371,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"6710:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6710:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f72206e6f74206578697374206f7220686173206265656e2072656d6f7665642e","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6740:42:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""},"value":"Validator not exist or has been removed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706","typeString":"literal_string \"Validator not exist or has been removed.\""}],"id":6370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6702:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6702:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"ExpressionStatement","src":"6702:81:15"},{"assignments":[6379,6382],"declarations":[{"constant":false,"id":6379,"mutability":"mutable","name":"vPool","nameLocation":"6807:5:15","nodeType":"VariableDeclaration","scope":6494,"src":"6795:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6378,"nodeType":"UserDefinedTypeName","pathNode":{"id":6377,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"6795:4:15"},"referencedDeclaration":5851,"src":"6795:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},{"constant":false,"id":6382,"mutability":"mutable","name":"sPool","nameLocation":"6826:5:15","nodeType":"VariableDeclaration","scope":6494,"src":"6814:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6381,"nodeType":"UserDefinedTypeName","pathNode":{"id":6380,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"6814:4:15"},"referencedDeclaration":5851,"src":"6814:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"}],"id":6385,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6383,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"6835:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function () returns (struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6835:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"tuple(struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"6794:55:15"},{"assignments":[6388],"declarations":[{"constant":false,"id":6388,"mutability":"mutable","name":"vInfo","nameLocation":"6876:5:15","nodeType":"VariableDeclaration","scope":6494,"src":"6859:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":6387,"nodeType":"UserDefinedTypeName","pathNode":{"id":6386,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"6859:9:15"},"referencedDeclaration":5860,"src":"6859:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"id":6397,"initialValue":{"baseExpression":{"baseExpression":{"id":6389,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"6884:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6394,"indexExpression":{"arguments":[{"hexValue":"30","id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6903:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6895:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6390,"name":"address","nodeType":"ElementaryTypeName","src":"6895:7:15","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6895:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6884:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6396,"indexExpression":{"id":6395,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"6907:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6884:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6859:58:15"},{"assignments":[6400],"declarations":[{"constant":false,"id":6400,"mutability":"mutable","name":"sInfo","nameLocation":"6944:5:15","nodeType":"VariableDeclaration","scope":6494,"src":"6927:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":6399,"nodeType":"UserDefinedTypeName","pathNode":{"id":6398,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"6927:9:15"},"referencedDeclaration":5860,"src":"6927:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"id":6407,"initialValue":{"baseExpression":{"baseExpression":{"id":6401,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"6952:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6403,"indexExpression":{"id":6402,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"6963:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6952:21:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6406,"indexExpression":{"expression":{"id":6404,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6974:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6974:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6952:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6927:58:15"},{"expression":{"arguments":[{"id":6409,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"7010:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6410,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"7017:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6408,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"6995:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6412,"nodeType":"ExpressionStatement","src":"6995:28:15"},{"expression":{"arguments":[{"id":6414,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"7048:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6415,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"7055:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6413,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"7033:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7033:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6417,"nodeType":"ExpressionStatement","src":"7033:28:15"},{"expression":{"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6418,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"7071:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"7071:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":6421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7092:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7092:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7071:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6424,"nodeType":"ExpressionStatement","src":"7071:30:15"},{"expression":{"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6425,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"7111:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"7111:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":6428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7132:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7132:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6431,"nodeType":"ExpressionStatement","src":"7111:30:15"},{"expression":{"arguments":[{"id":6433,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"7169:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6434,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"7176:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6432,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"7151:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7151:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6436,"nodeType":"ExpressionStatement","src":"7151:31:15"},{"expression":{"arguments":[{"id":6438,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"7210:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6439,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"7217:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6437,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"7192:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7192:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6441,"nodeType":"ExpressionStatement","src":"7192:31:15"},{"expression":{"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6442,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"7233:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"7233:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6445,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7253:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7253:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7233:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6448,"nodeType":"ExpressionStatement","src":"7233:32:15"},{"expression":{"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6449,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"7275:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"7275:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6452,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7295:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"7295:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7275:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6455,"nodeType":"ExpressionStatement","src":"7275:32:15"},{"expression":{"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6456,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"7317:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6462,"indexExpression":{"arguments":[{"hexValue":"30","id":6459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7336:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7328:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6457,"name":"address","nodeType":"ElementaryTypeName","src":"7328:7:15","typeDescriptions":{}}},"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7328:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7317:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6463,"indexExpression":{"id":6461,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"7340:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7317:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6464,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"7353:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"src":"7317:41:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"id":6466,"nodeType":"ExpressionStatement","src":"7317:41:15"},{"expression":{"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6467,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"7368:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6471,"indexExpression":{"id":6468,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"7379:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7368:21:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6472,"indexExpression":{"expression":{"id":6469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7390:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7390:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7368:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6473,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"7404:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"src":"7368:41:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"id":6475,"nodeType":"ExpressionStatement","src":"7368:41:15"},{"expression":{"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6476,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"7454:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":6477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7475:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7475:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7454:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6480,"nodeType":"ExpressionStatement","src":"7454:30:15"},{"expression":{"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6481,"name":"totalStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"7494:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":6482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7514:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7514:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7494:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6485,"nodeType":"ExpressionStatement","src":"7494:29:15"},{"eventCall":{"arguments":[{"expression":{"id":6487,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7545:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7545:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6489,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"7557:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7568:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7568:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6486,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"7539:5:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7539:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6493,"nodeType":"EmitStatement","src":"7534:44:15"}]},"functionSelector":"26476204","id":6495,"implemented":true,"kind":"function","modifiers":[{"id":6360,"kind":"modifierInvocation","modifierName":{"id":6359,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":856,"src":"6587:13:15"},"nodeType":"ModifierInvocation","src":"6587:13:15"}],"name":"stake","nameLocation":"6545:5:15","nodeType":"FunctionDefinition","parameters":{"id":6358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"validator","nameLocation":"6559:9:15","nodeType":"VariableDeclaration","scope":6495,"src":"6551:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6356,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6550:19:15"},"returnParameters":{"id":6361,"nodeType":"ParameterList","parameters":[],"src":"6601:0:15"},"scope":7509,"src":"6536:1049:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6678,"nodeType":"Block","src":"7730:1258:15","statements":[{"assignments":[6508,6511],"declarations":[{"constant":false,"id":6508,"mutability":"mutable","name":"vPool","nameLocation":"7753:5:15","nodeType":"VariableDeclaration","scope":6678,"src":"7741:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6507,"nodeType":"UserDefinedTypeName","pathNode":{"id":6506,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"7741:4:15"},"referencedDeclaration":5851,"src":"7741:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},{"constant":false,"id":6511,"mutability":"mutable","name":"sPool","nameLocation":"7772:5:15","nodeType":"VariableDeclaration","scope":6678,"src":"7760:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6510,"nodeType":"UserDefinedTypeName","pathNode":{"id":6509,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"7760:4:15"},"referencedDeclaration":5851,"src":"7760:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"}],"id":6514,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6512,"name":"_updatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"7781:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function () returns (struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7781:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"tuple(struct CMTStakingMock.Pool memory,struct CMTStakingMock.Pool memory)"}},"nodeType":"VariableDeclarationStatement","src":"7740:55:15"},{"assignments":[6517],"declarations":[{"constant":false,"id":6517,"mutability":"mutable","name":"vInfo","nameLocation":"7822:5:15","nodeType":"VariableDeclaration","scope":6678,"src":"7805:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":6516,"nodeType":"UserDefinedTypeName","pathNode":{"id":6515,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"7805:9:15"},"referencedDeclaration":5860,"src":"7805:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"id":6526,"initialValue":{"baseExpression":{"baseExpression":{"id":6518,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"7830:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6523,"indexExpression":{"arguments":[{"hexValue":"30","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7849:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6519,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:15","typeDescriptions":{}}},"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7841:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7830:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6525,"indexExpression":{"id":6524,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"7853:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7830:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7805:58:15"},{"assignments":[6529],"declarations":[{"constant":false,"id":6529,"mutability":"mutable","name":"sInfo","nameLocation":"7890:5:15","nodeType":"VariableDeclaration","scope":6678,"src":"7873:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":6528,"nodeType":"UserDefinedTypeName","pathNode":{"id":6527,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"7873:9:15"},"referencedDeclaration":5860,"src":"7873:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"id":6536,"initialValue":{"baseExpression":{"baseExpression":{"id":6530,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"7898:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6532,"indexExpression":{"id":6531,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"7909:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7898:21:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6535,"indexExpression":{"expression":{"id":6533,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7920:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7920:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7898:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7873:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6538,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"7950:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7971:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7963:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6539,"name":"address","nodeType":"ElementaryTypeName","src":"7963:7:15","typeDescriptions":{}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7963:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7950:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6544,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"7977:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"7977:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7998:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7977:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7950:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b65207265636f7264206e6f7420666f756e642e","id":6549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8001:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219","typeString":"literal_string \"Stake record not found.\""},"value":"Stake record not found."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219","typeString":"literal_string \"Stake record not found.\""}],"id":6537,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7942:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7942:85:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6551,"nodeType":"ExpressionStatement","src":"7942:85:15"},{"assignments":[6553],"declarations":[{"constant":false,"id":6553,"mutability":"mutable","name":"unstaked","nameLocation":"8046:8:15","nodeType":"VariableDeclaration","scope":6678,"src":"8038:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6552,"name":"uint256","nodeType":"ElementaryTypeName","src":"8038:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6554,"nodeType":"VariableDeclarationStatement","src":"8038:16:15"},{"assignments":[6556],"declarations":[{"constant":false,"id":6556,"mutability":"mutable","name":"reward","nameLocation":"8072:6:15","nodeType":"VariableDeclaration","scope":6678,"src":"8064:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6555,"name":"uint256","nodeType":"ElementaryTypeName","src":"8064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6557,"nodeType":"VariableDeclarationStatement","src":"8064:14:15"},{"condition":{"arguments":[{"id":6559,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"8111:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6558,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"8093:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8093:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6622,"nodeType":"Block","src":"8422:209:15","statements":[{"expression":{"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6596,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"8436:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6597,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"8444:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$5851_storage_$","typeString":"mapping(address => struct CMTStakingMock.Pool storage ref)"}},"id":6599,"indexExpression":{"id":6598,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"8458:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8444:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"src":"8436:32:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":6601,"nodeType":"ExpressionStatement","src":"8436:32:15"},{"expression":{"arguments":[{"id":6603,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"8497:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6604,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8504:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6602,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"8482:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8482:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6606,"nodeType":"ExpressionStatement","src":"8482:28:15"},{"expression":{"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6607,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"8525:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6608,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"8535:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6609,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8524:18:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6611,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"8554:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},{"id":6612,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8561:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},{"id":6613,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"8568:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6610,"name":"_unstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"8545:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_StakeInfo_$5860_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct CMTStakingMock.StakeInfo memory,struct CMTStakingMock.StakeInfo memory,uint256) pure returns (uint256,uint256)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8545:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"8524:51:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"ExpressionStatement","src":"8524:51:15"},{"expression":{"arguments":[{"id":6618,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"8607:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6619,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8614:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6617,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"8589:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8589:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6621,"nodeType":"ExpressionStatement","src":"8589:31:15"}]},"id":6623,"nodeType":"IfStatement","src":"8089:542:15","trueBody":{"id":6595,"nodeType":"Block","src":"8123:293:15","statements":[{"expression":{"arguments":[{"id":6562,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"8152:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6563,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"8159:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6561,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"8137:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8137:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6565,"nodeType":"ExpressionStatement","src":"8137:28:15"},{"expression":{"arguments":[{"id":6567,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"8194:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6568,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8201:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6566,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"8179:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8179:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6570,"nodeType":"ExpressionStatement","src":"8179:28:15"},{"expression":{"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6571,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"8222:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6572,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"8232:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6573,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8221:18:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6575,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"8251:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},{"id":6576,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8258:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},{"id":6577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"8265:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6574,"name":"_unstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"8242:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_StakeInfo_$5860_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct CMTStakingMock.StakeInfo memory,struct CMTStakingMock.StakeInfo memory,uint256) pure returns (uint256,uint256)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8242:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"8221:51:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6580,"nodeType":"ExpressionStatement","src":"8221:51:15"},{"expression":{"arguments":[{"id":6582,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"8304:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6583,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"8311:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6581,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"8286:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8286:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6585,"nodeType":"ExpressionStatement","src":"8286:31:15"},{"expression":{"arguments":[{"id":6587,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"8349:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6588,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8356:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6586,"name":"_updateRewardDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"8331:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8331:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6590,"nodeType":"ExpressionStatement","src":"8331:31:15"},{"expression":{"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6591,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"8376:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6592,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"8397:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8376:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6594,"nodeType":"ExpressionStatement","src":"8376:29:15"}]}},{"expression":{"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6624,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"8641:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"8641:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6627,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8661:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8661:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8641:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6630,"nodeType":"ExpressionStatement","src":"8641:32:15"},{"expression":{"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6631,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8683:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"8683:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6634,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8703:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"8703:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6637,"nodeType":"ExpressionStatement","src":"8683:32:15"},{"expression":{"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6638,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"8725:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6644,"indexExpression":{"arguments":[{"hexValue":"30","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8744:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8736:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6639,"name":"address","nodeType":"ElementaryTypeName","src":"8736:7:15","typeDescriptions":{}}},"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8736:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8725:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6645,"indexExpression":{"id":6643,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"8748:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8725:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6646,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"8761:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"src":"8725:41:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"id":6648,"nodeType":"ExpressionStatement","src":"8725:41:15"},{"expression":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6649,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"8776:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6653,"indexExpression":{"id":6650,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"8787:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8776:21:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6654,"indexExpression":{"expression":{"id":6651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8798:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8798:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8776:33:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6655,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"8812:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"src":"8776:41:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"id":6657,"nodeType":"ExpressionStatement","src":"8776:41:15"},{"expression":{"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6658,"name":"totalStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"8828:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6659,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"8848:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8828:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6661,"nodeType":"ExpressionStatement","src":"8828:28:15"},{"eventCall":{"arguments":[{"expression":{"id":6663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8880:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8880:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6665,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"8892:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6666,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"8903:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6667,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"8913:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6662,"name":"Unstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"8872:7:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8872:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6669,"nodeType":"EmitStatement","src":"8867:53:15"},{"expression":{"arguments":[{"expression":{"id":6671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8951:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8951:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"8963:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6674,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"8974:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8963:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"name":"_initiateWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"8931:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8931:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6677,"nodeType":"ExpressionStatement","src":"8931:50:15"}]},"functionSelector":"c2a672e0","id":6679,"implemented":true,"kind":"function","modifiers":[{"id":6502,"kind":"modifierInvocation","modifierName":{"id":6501,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":987,"src":"7703:12:15"},"nodeType":"ModifierInvocation","src":"7703:12:15"},{"id":6504,"kind":"modifierInvocation","modifierName":{"id":6503,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":856,"src":"7716:13:15"},"nodeType":"ModifierInvocation","src":"7716:13:15"}],"name":"unstake","nameLocation":"7651:7:15","nodeType":"FunctionDefinition","parameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"validator","nameLocation":"7667:9:15","nodeType":"VariableDeclaration","scope":6679,"src":"7659:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6496,"name":"address","nodeType":"ElementaryTypeName","src":"7659:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6499,"mutability":"mutable","name":"amount","nameLocation":"7686:6:15","nodeType":"VariableDeclaration","scope":6679,"src":"7678:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"7678:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7658:35:15"},"returnParameters":{"id":6505,"nodeType":"ParameterList","parameters":[],"src":"7730:0:15"},"scope":7509,"src":"7642:1346:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6693,"nodeType":"Block","src":"9072:67:15","statements":[{"expression":{"arguments":[{"expression":{"id":6687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9102:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9102:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6689,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"9114:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6690,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"9125:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6686,"name":"_completeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"9082:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address,address payable,uint256)"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9082:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6692,"nodeType":"ExpressionStatement","src":"9082:50:15"}]},"functionSelector":"7b66394c","id":6694,"implemented":true,"kind":"function","modifiers":[],"name":"completeWithdraw","nameLocation":"9003:16:15","nodeType":"FunctionDefinition","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"recipient","nameLocation":"9036:9:15","nodeType":"VariableDeclaration","scope":6694,"src":"9020:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6680,"name":"address","nodeType":"ElementaryTypeName","src":"9020:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":6683,"mutability":"mutable","name":"amount","nameLocation":"9055:6:15","nodeType":"VariableDeclaration","scope":6694,"src":"9047:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6682,"name":"uint256","nodeType":"ElementaryTypeName","src":"9047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9019:43:15"},"returnParameters":{"id":6685,"nodeType":"ParameterList","parameters":[],"src":"9072:0:15"},"scope":7509,"src":"8994:145:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6777,"nodeType":"Block","src":"9235:694:15","statements":[{"assignments":[6705],"declarations":[{"constant":false,"id":6705,"mutability":"mutable","name":"info","nameLocation":"9262:4:15","nodeType":"VariableDeclaration","scope":6777,"src":"9245:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":6704,"nodeType":"UserDefinedTypeName","pathNode":{"id":6703,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"9245:9:15"},"referencedDeclaration":5860,"src":"9245:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"id":6711,"initialValue":{"baseExpression":{"baseExpression":{"id":6706,"name":"stakeTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"9269:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$_$","typeString":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo storage ref))"}},"id":6708,"indexExpression":{"id":6707,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9280:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9269:21:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$5860_storage_$","typeString":"mapping(address => struct CMTStakingMock.StakeInfo storage ref)"}},"id":6710,"indexExpression":{"id":6709,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"9291:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9269:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage","typeString":"struct CMTStakingMock.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9245:53:15"},{"assignments":[6714],"declarations":[{"constant":false,"id":6714,"mutability":"mutable","name":"pool","nameLocation":"9320:4:15","nodeType":"VariableDeclaration","scope":6777,"src":"9308:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":6713,"nodeType":"UserDefinedTypeName","pathNode":{"id":6712,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"9308:4:15"},"referencedDeclaration":5851,"src":"9308:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"}],"id":6715,"nodeType":"VariableDeclarationStatement","src":"9308:16:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6716,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9338:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9359:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9351:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6717,"name":"address","nodeType":"ElementaryTypeName","src":"9351:7:15","typeDescriptions":{}}},"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9351:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9338:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6746,"nodeType":"IfStatement","src":"9334:299:15","trueBody":{"id":6745,"nodeType":"Block","src":"9363:270:15","statements":[{"condition":{"arguments":[{"id":6723,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"9399:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6722,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"9381:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9381:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6741,"nodeType":"IfStatement","src":"9377:207:15","trueBody":{"id":6740,"nodeType":"Block","src":"9408:176:15","statements":[{"expression":{"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6725,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"9426:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6726,"name":"validatorPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"9433:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"src":"9426:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":6728,"nodeType":"ExpressionStatement","src":"9426:20:15"},{"expression":{"arguments":[{"id":6730,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"9476:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6731,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"9482:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6732,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"9507:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6729,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"9464:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$5851_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function (struct CMTStakingMock.Pool memory,uint256,uint256) view returns (struct CMTStakingMock.Pool memory)"}},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9464:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":6734,"nodeType":"ExpressionStatement","src":"9464:61:15"},{"expression":{"arguments":[{"id":6736,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"9558:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6737,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"9564:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6735,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"9543:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9543:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6739,"nodeType":"ExpressionStatement","src":"9543:26:15"}]}},{"expression":{"expression":{"id":6742,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"9604:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"9604:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6702,"id":6744,"nodeType":"Return","src":"9597:25:15"}]}},{"condition":{"arguments":[{"id":6748,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9664:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6747,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"9646:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9646:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6767,"nodeType":"Block","src":"9796:56:15","statements":[{"expression":{"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6761,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"9810:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6762,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"9817:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$5851_storage_$","typeString":"mapping(address => struct CMTStakingMock.Pool storage ref)"}},"id":6764,"indexExpression":{"id":6763,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"9831:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9817:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"src":"9810:31:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":6766,"nodeType":"ExpressionStatement","src":"9810:31:15"}]},"id":6768,"nodeType":"IfStatement","src":"9642:210:15","trueBody":{"id":6760,"nodeType":"Block","src":"9676:114:15","statements":[{"expression":{"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6750,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"9690:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6751,"name":"stakerPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"9697:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"src":"9690:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":6753,"nodeType":"ExpressionStatement","src":"9690:17:15"},{"expression":{"arguments":[{"id":6755,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"9733:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6756,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"9739:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6757,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"9761:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6754,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"9721:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$5851_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function (struct CMTStakingMock.Pool memory,uint256,uint256) view returns (struct CMTStakingMock.Pool memory)"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9721:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":6759,"nodeType":"ExpressionStatement","src":"9721:58:15"}]}},{"expression":{"arguments":[{"id":6770,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"9876:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},{"id":6771,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"9882:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"},{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}],"id":6769,"name":"_updateRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"9861:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Pool_$5851_memory_ptr_$_t_struct$_StakeInfo_$5860_memory_ptr_$returns$__$","typeString":"function (struct CMTStakingMock.Pool memory,struct CMTStakingMock.StakeInfo memory) pure"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9861:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6773,"nodeType":"ExpressionStatement","src":"9861:26:15"},{"expression":{"expression":{"id":6774,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"9904:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":6775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"9904:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6702,"id":6776,"nodeType":"Return","src":"9897:25:15"}]},"functionSelector":"9ced7e76","id":6778,"implemented":true,"kind":"function","modifiers":[],"name":"pendingReward","nameLocation":"9154:13:15","nodeType":"FunctionDefinition","parameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"validator","nameLocation":"9176:9:15","nodeType":"VariableDeclaration","scope":6778,"src":"9168:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6695,"name":"address","nodeType":"ElementaryTypeName","src":"9168:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6698,"mutability":"mutable","name":"staker","nameLocation":"9195:6:15","nodeType":"VariableDeclaration","scope":6778,"src":"9187:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6697,"name":"address","nodeType":"ElementaryTypeName","src":"9187:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9167:35:15"},"returnParameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6778,"src":"9226:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6700,"name":"uint256","nodeType":"ElementaryTypeName","src":"9226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9225:9:15"},"scope":7509,"src":"9145:784:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6843,"nodeType":"Block","src":"10036:373:15","statements":[{"assignments":[6791],"declarations":[{"constant":false,"id":6791,"mutability":"mutable","name":"queue","nameLocation":"10084:5:15","nodeType":"VariableDeclaration","scope":6843,"src":"10046:43:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":6790,"nodeType":"UserDefinedTypeName","pathNode":{"id":6789,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"10046:29:15"},"referencedDeclaration":3208,"src":"10046:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"id":6795,"initialValue":{"baseExpression":{"id":6792,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"10092:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":6794,"indexExpression":{"id":6793,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"10106:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10092:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10046:68:15"},{"assignments":[6797],"declarations":[{"constant":false,"id":6797,"mutability":"mutable","name":"length","nameLocation":"10132:6:15","nodeType":"VariableDeclaration","scope":6843,"src":"10124:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6801,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6798,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"10141:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":6799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"10141:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10141:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10124:31:15"},{"expression":{"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6802,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"10165:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6807,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"10196:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10179:16:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct CMTStakingMock.Withdrawal memory[] memory)"},"typeName":{"baseType":{"id":6804,"nodeType":"UserDefinedTypeName","pathNode":{"id":6803,"name":"Withdrawal","nodeType":"IdentifierPath","referencedDeclaration":5865,"src":"10183:10:15"},"referencedDeclaration":5865,"src":"10183:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5865_storage_ptr","typeString":"struct CMTStakingMock.Withdrawal"}},"id":6805,"nodeType":"ArrayTypeName","src":"10183:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5865_storage_$dyn_storage_ptr","typeString":"struct CMTStakingMock.Withdrawal[]"}}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10179:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal memory[] memory"}},"src":"10165:38:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal memory[] memory"}},"id":6810,"nodeType":"ExpressionStatement","src":"10165:38:15"},{"body":{"id":6841,"nodeType":"Block","src":"10250:153:15","statements":[{"assignments":[6822,6824],"declarations":[{"constant":false,"id":6822,"mutability":"mutable","name":"amount","nameLocation":"10273:6:15","nodeType":"VariableDeclaration","scope":6841,"src":"10265:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"10265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6824,"mutability":"mutable","name":"timestamp","nameLocation":"10289:9:15","nodeType":"VariableDeclaration","scope":6841,"src":"10281:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6823,"name":"uint256","nodeType":"ElementaryTypeName","src":"10281:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6831,"initialValue":{"arguments":[{"arguments":[{"id":6828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"10329:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6826,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"10320:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":6827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"10320:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10320:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6825,"name":"_decodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"10302:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10302:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10264:68:15"},{"expression":{"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6832,"name":"withdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"10346:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal memory[] memory"}},"id":6834,"indexExpression":{"id":6833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"10358:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10346:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5865_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"10374:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6837,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"10382:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6835,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"10363:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Withdrawal_$5865_storage_ptr_$","typeString":"type(struct CMTStakingMock.Withdrawal storage pointer)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10363:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5865_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal memory"}},"src":"10346:46:15","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5865_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal memory"}},"id":6840,"nodeType":"ExpressionStatement","src":"10346:46:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"10233:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6816,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"10237:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10233:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6842,"initializationExpression":{"assignments":[6812],"declarations":[{"constant":false,"id":6812,"mutability":"mutable","name":"i","nameLocation":"10226:1:15","nodeType":"VariableDeclaration","scope":6842,"src":"10218:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"10218:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6814,"initialValue":{"hexValue":"30","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10230:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10218:13:15"},"loopExpression":{"expression":{"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10245:3:15","subExpression":{"id":6818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"10247:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6820,"nodeType":"ExpressionStatement","src":"10245:3:15"},"nodeType":"ForStatement","src":"10213:190:15"}]},"functionSelector":"f3f43703","id":6844,"implemented":true,"kind":"function","modifiers":[],"name":"pendingWithdrawals","nameLocation":"9944:18:15","nodeType":"FunctionDefinition","parameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"account","nameLocation":"9971:7:15","nodeType":"VariableDeclaration","scope":6844,"src":"9963:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6779,"name":"address","nodeType":"ElementaryTypeName","src":"9963:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9962:17:15"},"returnParameters":{"id":6786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6785,"mutability":"mutable","name":"withdrawals","nameLocation":"10023:11:15","nodeType":"VariableDeclaration","scope":6844,"src":"10003:31:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr","typeString":"struct CMTStakingMock.Withdrawal[]"},"typeName":{"baseType":{"id":6783,"nodeType":"UserDefinedTypeName","pathNode":{"id":6782,"name":"Withdrawal","nodeType":"IdentifierPath","referencedDeclaration":5865,"src":"10003:10:15"},"referencedDeclaration":5865,"src":"10003:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Withdrawal_$5865_storage_ptr","typeString":"struct CMTStakingMock.Withdrawal"}},"id":6784,"nodeType":"ArrayTypeName","src":"10003:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Withdrawal_$5865_storage_$dyn_storage_ptr","typeString":"struct CMTStakingMock.Withdrawal[]"}},"visibility":"internal"}],"src":"10002:33:15"},"scope":7509,"src":"9935:474:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6857,"nodeType":"Block","src":"10493:69:15","statements":[{"expression":{"arguments":[{"id":6852,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"10530:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6853,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10539:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10539:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6851,"name":"dueWithdrawalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"10510:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10510:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6850,"id":6856,"nodeType":"Return","src":"10503:52:15"}]},"functionSelector":"dab31689","id":6858,"implemented":true,"kind":"function","modifiers":[],"name":"dueWithdrawalAmount","nameLocation":"10424:19:15","nodeType":"FunctionDefinition","parameters":{"id":6847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"account","nameLocation":"10452:7:15","nodeType":"VariableDeclaration","scope":6858,"src":"10444:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6845,"name":"address","nodeType":"ElementaryTypeName","src":"10444:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10443:17:15"},"returnParameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6858,"src":"10484:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6848,"name":"uint256","nodeType":"ElementaryTypeName","src":"10484:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10483:9:15"},"scope":7509,"src":"10415:147:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6923,"nodeType":"Block","src":"10663:455:15","statements":[{"assignments":[6871],"declarations":[{"constant":false,"id":6871,"mutability":"mutable","name":"queue","nameLocation":"10711:5:15","nodeType":"VariableDeclaration","scope":6923,"src":"10673:43:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":6870,"nodeType":"UserDefinedTypeName","pathNode":{"id":6869,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"10673:29:15"},"referencedDeclaration":3208,"src":"10673:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"id":6875,"initialValue":{"baseExpression":{"id":6872,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"10719:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":6874,"indexExpression":{"id":6873,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"10733:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10719:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10673:68:15"},{"assignments":[6877],"declarations":[{"constant":false,"id":6877,"mutability":"mutable","name":"amount","nameLocation":"10759:6:15","nodeType":"VariableDeclaration","scope":6923,"src":"10751:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6876,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6879,"initialValue":{"hexValue":"30","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10768:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10751:18:15"},{"assignments":[6881],"declarations":[{"constant":false,"id":6881,"mutability":"mutable","name":"length","nameLocation":"10787:6:15","nodeType":"VariableDeclaration","scope":6923,"src":"10779:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6880,"name":"uint256","nodeType":"ElementaryTypeName","src":"10779:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6885,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6882,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"10796:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":6883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"10796:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10796:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10779:31:15"},{"body":{"id":6919,"nodeType":"Block","src":"10857:232:15","statements":[{"assignments":[6897,6899],"declarations":[{"constant":false,"id":6897,"mutability":"mutable","name":"available","nameLocation":"10880:9:15","nodeType":"VariableDeclaration","scope":6919,"src":"10872:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6896,"name":"uint256","nodeType":"ElementaryTypeName","src":"10872:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6899,"mutability":"mutable","name":"recordTimestamp","nameLocation":"10899:15:15","nodeType":"VariableDeclaration","scope":6919,"src":"10891:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6898,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6906,"initialValue":{"arguments":[{"arguments":[{"id":6903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"10945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6901,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"10936:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":6902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"10936:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10936:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6900,"name":"_decodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"10918:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10918:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10871:77:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6907,"name":"recordTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"10966:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6908,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"10984:10:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10966:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6910,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"10997:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10966:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6914,"nodeType":"IfStatement","src":"10962:84:15","trueBody":{"id":6913,"nodeType":"Block","src":"11008:38:15","statements":[{"id":6912,"nodeType":"Break","src":"11026:5:15"}]}},{"expression":{"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"11059:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6916,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"11069:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11059:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6918,"nodeType":"ExpressionStatement","src":"11059:19:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"10840:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6891,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"10844:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10840:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6920,"initializationExpression":{"assignments":[6887],"declarations":[{"constant":false,"id":6887,"mutability":"mutable","name":"i","nameLocation":"10833:1:15","nodeType":"VariableDeclaration","scope":6920,"src":"10825:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6886,"name":"uint256","nodeType":"ElementaryTypeName","src":"10825:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6889,"initialValue":{"hexValue":"30","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10837:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10825:13:15"},"loopExpression":{"expression":{"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10852:3:15","subExpression":{"id":6893,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"10854:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6895,"nodeType":"ExpressionStatement","src":"10852:3:15"},"nodeType":"ForStatement","src":"10820:269:15"},{"expression":{"id":6921,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"11105:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6866,"id":6922,"nodeType":"Return","src":"11098:13:15"}]},"functionSelector":"19d41774","id":6924,"implemented":true,"kind":"function","modifiers":[],"name":"dueWithdrawalAmount","nameLocation":"10577:19:15","nodeType":"FunctionDefinition","parameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"account","nameLocation":"10605:7:15","nodeType":"VariableDeclaration","scope":6924,"src":"10597:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6859,"name":"address","nodeType":"ElementaryTypeName","src":"10597:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"timestamp","nameLocation":"10622:9:15","nodeType":"VariableDeclaration","scope":6924,"src":"10614:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"10614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10596:36:15"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6924,"src":"10654:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10653:9:15"},"scope":7509,"src":"10568:550:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6936,"nodeType":"Block","src":"11197:55:15","statements":[{"expression":{"arguments":[{"id":6933,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"11235:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6931,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"11214:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"11214:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11214:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6930,"id":6935,"nodeType":"Return","src":"11207:38:15"}]},"functionSelector":"40550a1c","id":6937,"implemented":true,"kind":"function","modifiers":[],"name":"isActiveValidator","nameLocation":"11133:17:15","nodeType":"FunctionDefinition","parameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"mutability":"mutable","name":"validator","nameLocation":"11159:9:15","nodeType":"VariableDeclaration","scope":6937,"src":"11151:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6925,"name":"address","nodeType":"ElementaryTypeName","src":"11151:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11150:19:15"},"returnParameters":{"id":6930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6937,"src":"11191:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6928,"name":"bool","nodeType":"ElementaryTypeName","src":"11191:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11190:6:15"},"scope":7509,"src":"11124:128:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6947,"nodeType":"Block","src":"11325:44:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6943,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"11342:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"11342:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11342:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":6942,"id":6946,"nodeType":"Return","src":"11335:27:15"}]},"functionSelector":"d2d49c4b","id":6948,"implemented":true,"kind":"function","modifiers":[],"name":"activeValidators","nameLocation":"11267:16:15","nodeType":"FunctionDefinition","parameters":{"id":6938,"nodeType":"ParameterList","parameters":[],"src":"11283:2:15"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6948,"src":"11307:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6939,"name":"address","nodeType":"ElementaryTypeName","src":"11307:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6940,"nodeType":"ArrayTypeName","src":"11307:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11306:18:15"},"scope":7509,"src":"11258:111:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6988,"nodeType":"Block","src":"11475:161:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"11493:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11508:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6960,"name":"uint224","nodeType":"ElementaryTypeName","src":"11508:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11503:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11503:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11503:17:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"11493:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"11524:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11542:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6967,"name":"uint32","nodeType":"ElementaryTypeName","src":"11542:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11537:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11537:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11537:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11524:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11493:60:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207769746864726177616c","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11555:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5","typeString":"literal_string \"Invalid withdrawal\""},"value":"Invalid withdrawal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5","typeString":"literal_string \"Invalid withdrawal\""}],"id":6957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11485:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11485:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6975,"nodeType":"ExpressionStatement","src":"11485:91:15"},{"expression":{"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"11586:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6979,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"11603:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11613:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11603:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11602:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":6983,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"11619:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11602:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11594:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11594:7:15","typeDescriptions":{}}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11594:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11586:43:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6987,"nodeType":"ExpressionStatement","src":"11586:43:15"}]},"id":6989,"implemented":true,"kind":"function","modifiers":[],"name":"_encodeWithdrawal","nameLocation":"11384:17:15","nodeType":"FunctionDefinition","parameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"amount","nameLocation":"11410:6:15","nodeType":"VariableDeclaration","scope":6989,"src":"11402:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6949,"name":"uint256","nodeType":"ElementaryTypeName","src":"11402:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6952,"mutability":"mutable","name":"timestamp","nameLocation":"11426:9:15","nodeType":"VariableDeclaration","scope":6989,"src":"11418:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11418:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11401:35:15"},"returnParameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"value","nameLocation":"11468:5:15","nodeType":"VariableDeclaration","scope":6989,"src":"11460:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11460:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11459:15:15"},"scope":7509,"src":"11375:261:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7022,"nodeType":"Block","src":"11742:117:15","statements":[{"assignments":[6999],"declarations":[{"constant":false,"id":6999,"mutability":"mutable","name":"temp","nameLocation":"11760:4:15","nodeType":"VariableDeclaration","scope":7022,"src":"11752:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6998,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7004,"initialValue":{"arguments":[{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"11775:5:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11767:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11767:7:15","typeDescriptions":{}}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11767:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11752:29:15"},{"expression":{"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7005,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"11791:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7006,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"11800:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11808:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11800:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11791:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7010,"nodeType":"ExpressionStatement","src":"11791:19:15"},{"expression":{"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7011,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"11820:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"11832:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11840:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11845:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11840:7:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11850:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11840:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}}],"id":7018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11839:13:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"11832:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11820:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7021,"nodeType":"ExpressionStatement","src":"11820:32:15"}]},"id":7023,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeWithdrawal","nameLocation":"11651:17:15","nodeType":"FunctionDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"value","nameLocation":"11677:5:15","nodeType":"VariableDeclaration","scope":7023,"src":"11669:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11669:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11668:15:15"},"returnParameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"amount","nameLocation":"11715:6:15","nodeType":"VariableDeclaration","scope":7023,"src":"11707:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6993,"name":"uint256","nodeType":"ElementaryTypeName","src":"11707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6996,"mutability":"mutable","name":"timestamp","nameLocation":"11731:9:15","nodeType":"VariableDeclaration","scope":7023,"src":"11723:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"11723:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11706:35:15"},"scope":7509,"src":"11642:217:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"11936:238:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7031,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"11954:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7032,"name":"MIN_WITHDRAW_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"11964:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11954:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"776974686472617720616d6f756e74206d757374203e3d204d494e5f57495448445241575f414d4f554e54","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11985:45:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9","typeString":"literal_string \"withdraw amount must >= MIN_WITHDRAW_AMOUNT\""},"value":"withdraw amount must >= MIN_WITHDRAW_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9","typeString":"literal_string \"withdraw amount must >= MIN_WITHDRAW_AMOUNT\""}],"id":7030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11946:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11946:85:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7036,"nodeType":"ExpressionStatement","src":"11946:85:15"},{"expression":{"arguments":[{"arguments":[{"id":7042,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"12091:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7043,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12099:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12099:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7041,"name":"_encodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"12073:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12073:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":7037,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"12041:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":7039,"indexExpression":{"id":7038,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"12055:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12041:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":7040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pushBack","nodeType":"MemberAccess","referencedDeclaration":3240,"src":"12041:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12041:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7047,"nodeType":"ExpressionStatement","src":"12041:75:15"},{"eventCall":{"arguments":[{"id":7049,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"12151:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7050,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"12160:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7048,"name":"WithdrawalInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"12131:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12131:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"EmitStatement","src":"12126:41:15"}]},"id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"_initiateWithdrawal","nameLocation":"11874:19:15","nodeType":"FunctionDefinition","parameters":{"id":7028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"mutability":"mutable","name":"account","nameLocation":"11902:7:15","nodeType":"VariableDeclaration","scope":7054,"src":"11894:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7024,"name":"address","nodeType":"ElementaryTypeName","src":"11894:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7027,"mutability":"mutable","name":"amount","nameLocation":"11919:6:15","nodeType":"VariableDeclaration","scope":7054,"src":"11911:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7026,"name":"uint256","nodeType":"ElementaryTypeName","src":"11911:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11893:33:15"},"returnParameters":{"id":7029,"nodeType":"ParameterList","parameters":[],"src":"11936:0:15"},"scope":7509,"src":"11865:309:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7149,"nodeType":"Block","src":"12278:743:15","statements":[{"assignments":[7067],"declarations":[{"constant":false,"id":7067,"mutability":"mutable","name":"queue","nameLocation":"12326:5:15","nodeType":"VariableDeclaration","scope":7149,"src":"12288:43:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7066,"nodeType":"UserDefinedTypeName","pathNode":{"id":7065,"name":"DoubleEndedQueue.Bytes32Deque","nodeType":"IdentifierPath","referencedDeclaration":3208,"src":"12288:29:15"},"referencedDeclaration":3208,"src":"12288:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"id":7071,"initialValue":{"baseExpression":{"id":7068,"name":"withdrawTable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"12334:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Deque_$3208_storage_$","typeString":"mapping(address => struct DoubleEndedQueue.Bytes32Deque storage ref)"}},"id":7070,"indexExpression":{"id":7069,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"12348:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12334:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12288:68:15"},{"assignments":[7073],"declarations":[{"constant":false,"id":7073,"mutability":"mutable","name":"sum","nameLocation":"12374:3:15","nodeType":"VariableDeclaration","scope":7149,"src":"12366:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7072,"name":"uint256","nodeType":"ElementaryTypeName","src":"12366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7075,"initialValue":{"hexValue":"30","id":7074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12380:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12366:15:15"},{"body":{"id":7129,"nodeType":"Block","src":"12414:431:15","statements":[{"assignments":[7081,7083],"declarations":[{"constant":false,"id":7081,"mutability":"mutable","name":"available","nameLocation":"12437:9:15","nodeType":"VariableDeclaration","scope":7129,"src":"12429:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7080,"name":"uint256","nodeType":"ElementaryTypeName","src":"12429:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7083,"mutability":"mutable","name":"timestamp","nameLocation":"12456:9:15","nodeType":"VariableDeclaration","scope":7129,"src":"12448:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7089,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7085,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"12487:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"front","nodeType":"MemberAccess","referencedDeclaration":3393,"src":"12487:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bytes32)"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12487:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7084,"name":"_decodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"12469:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12469:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"12428:73:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7090,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"12519:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7091,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"12531:10:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12519:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12544:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12544:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12519:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7098,"nodeType":"IfStatement","src":"12515:84:15","trueBody":{"id":7097,"nodeType":"Block","src":"12561:38:15","statements":[{"id":7096,"nodeType":"Break","src":"12579:5:15"}]}},{"expression":{"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7099,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"12612:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7100,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"12619:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12612:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7102,"nodeType":"ExpressionStatement","src":"12612:16:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7103,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"12642:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"popFront","nodeType":"MemberAccess","referencedDeclaration":3366,"src":"12642:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12642:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7107,"nodeType":"ExpressionStatement","src":"12642:16:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7108,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"12676:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7109,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"12682:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12676:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7128,"nodeType":"IfStatement","src":"12672:163:15","trueBody":{"id":7127,"nodeType":"Block","src":"12690:145:15","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7115,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"12742:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7116,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"12748:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12742:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7118,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"12756:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7114,"name":"_encodeWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"12724:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12724:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7111,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"12708:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pushFront","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"12708:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$3208_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12708:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7121,"nodeType":"ExpressionStatement","src":"12708:59:15"},{"expression":{"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7122,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"12785:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7123,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"12791:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12785:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7125,"nodeType":"ExpressionStatement","src":"12785:12:15"},{"id":7126,"nodeType":"Break","src":"12815:5:15"}]}}]},"condition":{"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12398:14:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7076,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"12399:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$3208_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"empty","nodeType":"MemberAccess","referencedDeclaration":3529,"src":"12399:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$3208_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Deque_$3208_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12399:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7130,"nodeType":"WhileStatement","src":"12391:454:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7132,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"12862:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7133,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"12869:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12862:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420776974686472617761626c6520616d6f756e742e","id":7135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12877:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6","typeString":"literal_string \"Insufficient withdrawable amount.\""},"value":"Insufficient withdrawable amount."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6","typeString":"literal_string \"Insufficient withdrawable amount.\""}],"id":7131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12854:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12854:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7137,"nodeType":"ExpressionStatement","src":"12854:59:15"},{"eventCall":{"arguments":[{"id":7139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"12948:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7140,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"12957:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7141,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"12968:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7138,"name":"WithdrawalCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"12928:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12928:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7143,"nodeType":"EmitStatement","src":"12923:52:15"},{"expression":{"arguments":[{"id":7145,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"12996:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7146,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"13007:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7144,"name":"_sendValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7405,"src":"12985:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12985:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7148,"nodeType":"ExpressionStatement","src":"12985:29:15"}]},"id":7150,"implemented":true,"kind":"function","modifiers":[],"name":"_completeWithdrawal","nameLocation":"12189:19:15","nodeType":"FunctionDefinition","parameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7056,"mutability":"mutable","name":"account","nameLocation":"12217:7:15","nodeType":"VariableDeclaration","scope":7150,"src":"12209:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7055,"name":"address","nodeType":"ElementaryTypeName","src":"12209:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7058,"mutability":"mutable","name":"recipient","nameLocation":"12242:9:15","nodeType":"VariableDeclaration","scope":7150,"src":"12226:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7057,"name":"address","nodeType":"ElementaryTypeName","src":"12226:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7060,"mutability":"mutable","name":"amount","nameLocation":"12261:6:15","nodeType":"VariableDeclaration","scope":7150,"src":"12253:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12208:60:15"},"returnParameters":{"id":7062,"nodeType":"ParameterList","parameters":[],"src":"12278:0:15"},"scope":7509,"src":"12180:841:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7183,"nodeType":"Block","src":"13107:236:15","statements":[{"expression":{"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7159,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"13117:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7161,"name":"validatorPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"13137:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},{"id":7162,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"13152:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7163,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13177:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7160,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"13125:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$5851_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function (struct CMTStakingMock.Pool memory,uint256,uint256) view returns (struct CMTStakingMock.Pool memory)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13125:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"src":"13117:78:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7166,"nodeType":"ExpressionStatement","src":"13117:78:15"},{"expression":{"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7167,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"13205:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7169,"name":"stakerPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"13225:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},{"id":7170,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"13237:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7171,"name":"activeStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"13259:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7168,"name":"_updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"13213:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Pool_$5851_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Pool_$5851_memory_ptr_$","typeString":"function (struct CMTStakingMock.Pool memory,uint256,uint256) view returns (struct CMTStakingMock.Pool memory)"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13213:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"src":"13205:72:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7174,"nodeType":"ExpressionStatement","src":"13205:72:15"},{"expression":{"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7175,"name":"validatorPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"13287:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7176,"name":"vPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"13303:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"src":"13287:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"id":7178,"nodeType":"ExpressionStatement","src":"13287:21:15"},{"expression":{"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7179,"name":"stakerPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"13318:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7180,"name":"sPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"13331:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"src":"13318:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"id":7182,"nodeType":"ExpressionStatement","src":"13318:18:15"}]},"id":7184,"implemented":true,"kind":"function","modifiers":[],"name":"_updatePools","nameLocation":"13036:12:15","nodeType":"FunctionDefinition","parameters":{"id":7151,"nodeType":"ParameterList","parameters":[],"src":"13048:2:15"},"returnParameters":{"id":7158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7154,"mutability":"mutable","name":"vPool","nameLocation":"13081:5:15","nodeType":"VariableDeclaration","scope":7184,"src":"13069:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":7153,"nodeType":"UserDefinedTypeName","pathNode":{"id":7152,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"13069:4:15"},"referencedDeclaration":5851,"src":"13069:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},{"constant":false,"id":7157,"mutability":"mutable","name":"sPool","nameLocation":"13100:5:15","nodeType":"VariableDeclaration","scope":7184,"src":"13088:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":7156,"nodeType":"UserDefinedTypeName","pathNode":{"id":7155,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"13088:4:15"},"referencedDeclaration":5851,"src":"13088:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"}],"src":"13068:38:15"},"scope":7509,"src":"13027:316:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7242,"nodeType":"Block","src":"13499:317:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7197,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"13513:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13528:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13513:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7210,"nodeType":"IfStatement","src":"13509:103:15","trueBody":{"id":7209,"nodeType":"Block","src":"13531:81:15","statements":[{"expression":{"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7200,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13545:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5850,"src":"13545:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7203,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13564:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"13564:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13545:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7206,"nodeType":"ExpressionStatement","src":"13545:31:15"},{"expression":{"id":7207,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13597:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"functionReturnParameters":7196,"id":7208,"nodeType":"Return","src":"13590:11:15"}]}},{"assignments":[7212],"declarations":[{"constant":false,"id":7212,"mutability":"mutable","name":"reward","nameLocation":"13629:6:15","nodeType":"VariableDeclaration","scope":7242,"src":"13621:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7211,"name":"uint256","nodeType":"ElementaryTypeName","src":"13621:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7221,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7213,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13639:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"13639:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7215,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13654:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5850,"src":"13654:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13639:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13638:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7219,"name":"rewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"13674:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13638:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13621:67:15"},{"expression":{"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7222,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13698:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"lastAUR","nodeType":"MemberAccess","referencedDeclaration":5848,"src":"13698:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7225,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"13715:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7226,"name":"AUR_PREC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"13724:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13715:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13714:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7229,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"13736:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13714:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13698:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7232,"nodeType":"ExpressionStatement","src":"13698:49:15"},{"expression":{"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7233,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13757:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5850,"src":"13757:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7236,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13776:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"13776:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13757:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7239,"nodeType":"ExpressionStatement","src":"13757:31:15"},{"expression":{"id":7240,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"13805:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"functionReturnParameters":7196,"id":7241,"nodeType":"Return","src":"13798:11:15"}]},"id":7243,"implemented":true,"kind":"function","modifiers":[],"name":"_updatePool","nameLocation":"13358:11:15","nodeType":"FunctionDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"pool","nameLocation":"13391:4:15","nodeType":"VariableDeclaration","scope":7243,"src":"13379:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":7186,"nodeType":"UserDefinedTypeName","pathNode":{"id":7185,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"13379:4:15"},"referencedDeclaration":5851,"src":"13379:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},{"constant":false,"id":7189,"mutability":"mutable","name":"rewardPerBlock","nameLocation":"13413:14:15","nodeType":"VariableDeclaration","scope":7243,"src":"13405:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7191,"mutability":"mutable","name":"stakeAmount","nameLocation":"13445:11:15","nodeType":"VariableDeclaration","scope":7243,"src":"13437:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7190,"name":"uint256","nodeType":"ElementaryTypeName","src":"13437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13369:93:15"},"returnParameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7243,"src":"13486:11:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":7194,"nodeType":"UserDefinedTypeName","pathNode":{"id":7193,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"13486:4:15"},"referencedDeclaration":5851,"src":"13486:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"}],"src":"13485:13:15"},"scope":7509,"src":"13349:467:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7275,"nodeType":"Block","src":"13901:168:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7252,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"13915:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"13915:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13935:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13915:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7258,"nodeType":"IfStatement","src":"13911:58:15","trueBody":{"id":7257,"nodeType":"Block","src":"13938:31:15","statements":[{"functionReturnParameters":7251,"id":7256,"nodeType":"Return","src":"13952:7:15"}]}},{"expression":{"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7259,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"13978:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"13978:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7262,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"14001:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"14001:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7264,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"14020:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastAUR","nodeType":"MemberAccess","referencedDeclaration":5848,"src":"14020:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14001:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14000:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7268,"name":"AUR_PREC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"14036:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14000:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7270,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"14047:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":5855,"src":"14047:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14000:62:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13978:84:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7274,"nodeType":"ExpressionStatement","src":"13978:84:15"}]},"id":7276,"implemented":true,"kind":"function","modifiers":[],"name":"_updateRewards","nameLocation":"13831:14:15","nodeType":"FunctionDefinition","parameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"pool","nameLocation":"13858:4:15","nodeType":"VariableDeclaration","scope":7276,"src":"13846:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":7245,"nodeType":"UserDefinedTypeName","pathNode":{"id":7244,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"13846:4:15"},"referencedDeclaration":5851,"src":"13846:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},{"constant":false,"id":7249,"mutability":"mutable","name":"info","nameLocation":"13881:4:15","nodeType":"VariableDeclaration","scope":7276,"src":"13864:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":7248,"nodeType":"UserDefinedTypeName","pathNode":{"id":7247,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"13864:9:15"},"referencedDeclaration":5860,"src":"13864:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"src":"13845:41:15"},"returnParameters":{"id":7251,"nodeType":"ParameterList","parameters":[],"src":"13901:0:15"},"scope":7509,"src":"13822:247:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7298,"nodeType":"Block","src":"14157:79:15","statements":[{"expression":{"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7285,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"14167:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":5855,"src":"14167:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7288,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"14186:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"14186:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7290,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"14205:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool memory"}},"id":7291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lastAUR","nodeType":"MemberAccess","referencedDeclaration":5848,"src":"14205:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14186:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14185:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7294,"name":"AUR_PREC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"14221:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14185:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14167:62:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7297,"nodeType":"ExpressionStatement","src":"14167:62:15"}]},"id":7299,"implemented":true,"kind":"function","modifiers":[],"name":"_updateRewardDebt","nameLocation":"14084:17:15","nodeType":"FunctionDefinition","parameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7279,"mutability":"mutable","name":"pool","nameLocation":"14114:4:15","nodeType":"VariableDeclaration","scope":7299,"src":"14102:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_memory_ptr","typeString":"struct CMTStakingMock.Pool"},"typeName":{"id":7278,"nodeType":"UserDefinedTypeName","pathNode":{"id":7277,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":5851,"src":"14102:4:15"},"referencedDeclaration":5851,"src":"14102:4:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage_ptr","typeString":"struct CMTStakingMock.Pool"}},"visibility":"internal"},{"constant":false,"id":7282,"mutability":"mutable","name":"info","nameLocation":"14137:4:15","nodeType":"VariableDeclaration","scope":7299,"src":"14120:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":7281,"nodeType":"UserDefinedTypeName","pathNode":{"id":7280,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"14120:9:15"},"referencedDeclaration":5860,"src":"14120:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"}],"src":"14101:41:15"},"returnParameters":{"id":7284,"nodeType":"ParameterList","parameters":[],"src":"14157:0:15"},"scope":7509,"src":"14075:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7382,"nodeType":"Block","src":"14411:507:15","statements":[{"assignments":[7315],"declarations":[{"constant":false,"id":7315,"mutability":"mutable","name":"maxAmount","nameLocation":"14429:9:15","nodeType":"VariableDeclaration","scope":7382,"src":"14421:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7314,"name":"uint256","nodeType":"ElementaryTypeName","src":"14421:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7321,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7316,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"14441:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"14441:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":7318,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"14461:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"14461:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14441:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14421:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7323,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"14498:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7324,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"14508:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14498:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e63652e","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14519:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""},"value":"Insufficient balance."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9","typeString":"literal_string \"Insufficient balance.\""}],"id":7322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14490:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14490:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7328,"nodeType":"ExpressionStatement","src":"14490:53:15"},{"expression":{"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7329,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"14553:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7330,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"14562:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"14562:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14553:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7333,"nodeType":"ExpressionStatement","src":"14553:28:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7334,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"14595:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14605:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14595:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"14661:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7343,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"14671:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14661:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7356,"nodeType":"IfStatement","src":"14657:108:15","trueBody":{"id":7355,"nodeType":"Block","src":"14679:86:15","statements":[{"expression":{"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7345,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"14693:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"14693:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7348,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"14716:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14693:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7350,"nodeType":"ExpressionStatement","src":"14693:29:15"},{"expression":{"components":[{"hexValue":"30","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14744:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7352,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"14747:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14743:11:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint256_$","typeString":"tuple(int_const 0,uint256)"}},"functionReturnParameters":7313,"id":7354,"nodeType":"Return","src":"14736:18:15"}]}},"id":7357,"nodeType":"IfStatement","src":"14591:174:15","trueBody":{"id":7341,"nodeType":"Block","src":"14608:43:15","statements":[{"expression":{"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7337,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"14622:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7338,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"14631:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14622:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7340,"nodeType":"ExpressionStatement","src":"14622:18:15"}]}},{"expression":{"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7358,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"14774:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingReward","nodeType":"MemberAccess","referencedDeclaration":5857,"src":"14774:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14796:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14774:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7363,"nodeType":"ExpressionStatement","src":"14774:23:15"},{"expression":{"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7364,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"14807:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7365,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"14818:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7366,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"14827:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14818:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14807:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7369,"nodeType":"ExpressionStatement","src":"14807:26:15"},{"expression":{"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7370,"name":"vInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"14843:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"14843:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7373,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"14864:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14843:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7375,"nodeType":"ExpressionStatement","src":"14843:29:15"},{"expression":{"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7376,"name":"sInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"14882:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo memory"}},"id":7378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":5853,"src":"14882:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7379,"name":"unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"14903:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14882:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7381,"nodeType":"ExpressionStatement","src":"14882:29:15"}]},"id":7383,"implemented":true,"kind":"function","modifiers":[],"name":"_unstake","nameLocation":"14251:8:15","nodeType":"FunctionDefinition","parameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"vInfo","nameLocation":"14286:5:15","nodeType":"VariableDeclaration","scope":7383,"src":"14269:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":7301,"nodeType":"UserDefinedTypeName","pathNode":{"id":7300,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"14269:9:15"},"referencedDeclaration":5860,"src":"14269:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":7305,"mutability":"mutable","name":"sInfo","nameLocation":"14318:5:15","nodeType":"VariableDeclaration","scope":7383,"src":"14301:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_memory_ptr","typeString":"struct CMTStakingMock.StakeInfo"},"typeName":{"id":7304,"nodeType":"UserDefinedTypeName","pathNode":{"id":7303,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":5860,"src":"14301:9:15"},"referencedDeclaration":5860,"src":"14301:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$5860_storage_ptr","typeString":"struct CMTStakingMock.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":7307,"mutability":"mutable","name":"amount","nameLocation":"14341:6:15","nodeType":"VariableDeclaration","scope":7383,"src":"14333:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7306,"name":"uint256","nodeType":"ElementaryTypeName","src":"14333:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14259:94:15"},"returnParameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7310,"mutability":"mutable","name":"unstaked","nameLocation":"14385:8:15","nodeType":"VariableDeclaration","scope":7383,"src":"14377:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7309,"name":"uint256","nodeType":"ElementaryTypeName","src":"14377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7312,"mutability":"mutable","name":"reward","nameLocation":"14403:6:15","nodeType":"VariableDeclaration","scope":7383,"src":"14395:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7311,"name":"uint256","nodeType":"ElementaryTypeName","src":"14395:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14376:34:15"},"scope":7509,"src":"14242:676:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7404,"nodeType":"Block","src":"14989:120:15","statements":[{"assignments":[7391,null],"declarations":[{"constant":false,"id":7391,"mutability":"mutable","name":"success","nameLocation":"15005:7:15","nodeType":"VariableDeclaration","scope":7404,"src":"15000:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7390,"name":"bool","nodeType":"ElementaryTypeName","src":"15000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7398,"initialValue":{"arguments":[{"hexValue":"","id":7396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15041:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7392,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"15018:2:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"15018:7:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"15033:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15018:22:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15018:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14999:45:15"},{"expression":{"arguments":[{"id":7400,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"15062:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64206e617469766520746f6b656e2e","id":7401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15071:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a","typeString":"literal_string \"Failed to send native token.\""},"value":"Failed to send native token."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a","typeString":"literal_string \"Failed to send native token.\""}],"id":7399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15054:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15054:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7403,"nodeType":"ExpressionStatement","src":"15054:48:15"}]},"id":7405,"implemented":true,"kind":"function","modifiers":[],"name":"_sendValue","nameLocation":"14933:10:15","nodeType":"FunctionDefinition","parameters":{"id":7388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7385,"mutability":"mutable","name":"to","nameLocation":"14960:2:15","nodeType":"VariableDeclaration","scope":7405,"src":"14944:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7384,"name":"address","nodeType":"ElementaryTypeName","src":"14944:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7387,"mutability":"mutable","name":"amount","nameLocation":"14972:6:15","nodeType":"VariableDeclaration","scope":7405,"src":"14964:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7386,"name":"uint256","nodeType":"ElementaryTypeName","src":"14964:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14943:36:15"},"returnParameters":{"id":7389,"nodeType":"ParameterList","parameters":[],"src":"14989:0:15"},"scope":7509,"src":"14924:185:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7427,"nodeType":"Block","src":"15168:201:15","statements":[{"expression":{"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7410,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"15178:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7411,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"15204:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":7412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15213:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"15204:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15178:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7415,"nodeType":"ExpressionStatement","src":"15178:36:15"},{"expression":{"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7416,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"15224:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"15247:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7418,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"15256:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15247:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15224:55:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7421,"nodeType":"ExpressionStatement","src":"15224:55:15"},{"eventCall":{"arguments":[{"id":7423,"name":"validatorRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"15316:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7424,"name":"stakerRewardPerBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"15341:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7422,"name":"RewardPerBlockChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"15294:21:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15294:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7426,"nodeType":"EmitStatement","src":"15289:73:15"}]},"id":7428,"implemented":true,"kind":"function","modifiers":[],"name":"_setRewardPerBlock","nameLocation":"15124:18:15","nodeType":"FunctionDefinition","parameters":{"id":7408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7407,"mutability":"mutable","name":"amount","nameLocation":"15151:6:15","nodeType":"VariableDeclaration","scope":7428,"src":"15143:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7406,"name":"uint256","nodeType":"ElementaryTypeName","src":"15143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15142:16:15"},"returnParameters":{"id":7409,"nodeType":"ParameterList","parameters":[],"src":"15168:0:15"},"scope":7509,"src":"15115:254:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7441,"nodeType":"Block","src":"15423:76:15","statements":[{"expression":{"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7433,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"15433:10:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7434,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"15446:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15433:19:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":7436,"nodeType":"ExpressionStatement","src":"15433:19:15"},{"eventCall":{"arguments":[{"id":7438,"name":"period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"15485:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":7437,"name":"LockPeriodChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"15467:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32)"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15467:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7440,"nodeType":"EmitStatement","src":"15462:30:15"}]},"id":7442,"implemented":true,"kind":"function","modifiers":[],"name":"_setLockPeriod","nameLocation":"15384:14:15","nodeType":"FunctionDefinition","parameters":{"id":7431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7430,"mutability":"mutable","name":"period","nameLocation":"15406:6:15","nodeType":"VariableDeclaration","scope":7442,"src":"15399:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7429,"name":"uint32","nodeType":"ElementaryTypeName","src":"15399:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15398:15:15"},"returnParameters":{"id":7432,"nodeType":"ParameterList","parameters":[],"src":"15423:0:15"},"scope":7509,"src":"15375:124:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7492,"nodeType":"Block","src":"15556:389:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7448,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"15574:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15595:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15587:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7449,"name":"address","nodeType":"ElementaryTypeName","src":"15587:7:15","typeDescriptions":{}}},"id":7452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15587:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15574:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616464726573732e","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15599:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34","typeString":"literal_string \"Invalid address.\""},"value":"Invalid address."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34","typeString":"literal_string \"Invalid address.\""}],"id":7447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15566:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15566:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7456,"nodeType":"ExpressionStatement","src":"15566:52:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7458,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"15636:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"15636:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3842_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15636:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7461,"name":"validatorLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"15659:14:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15636:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f7273206172652066756c6c2e","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15675:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19","typeString":"literal_string \"Validators are full.\""},"value":"Validators are full."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19","typeString":"literal_string \"Validators are full.\""}],"id":7457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15628:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15628:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7465,"nodeType":"ExpressionStatement","src":"15628:70:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15729:29:15","subExpression":{"arguments":[{"id":7468,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"15748:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7467,"name":"isActiveValidator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"15730:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15730:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7471,"name":"inactivePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"15762:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Pool_$5851_storage_$","typeString":"mapping(address => struct CMTStakingMock.Pool storage ref)"}},"id":7473,"indexExpression":{"id":7472,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"15776:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15762:24:15","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$5851_storage","typeString":"struct CMTStakingMock.Pool storage ref"}},"id":7474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updateBlock","nodeType":"MemberAccess","referencedDeclaration":5850,"src":"15762:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15802:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15762:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15729:74:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696461746f7220686164206265656e2061646465642e","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15817:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e","typeString":"literal_string \"Validator had been added.\""},"value":"Validator had been added."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e","typeString":"literal_string \"Validator had been added.\""}],"id":7466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15708:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15708:146:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7480,"nodeType":"ExpressionStatement","src":"15708:146:15"},{"expression":{"arguments":[{"id":7484,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"15880:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7481,"name":"_validators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"15864:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3842_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"15864:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3842_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$3842_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15864:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7486,"nodeType":"ExpressionStatement","src":"15864:26:15"},{"eventCall":{"arguments":[{"id":7488,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7444,"src":"15922:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15933:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7487,"name":"ValidatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"15905:16:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15905:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7491,"nodeType":"EmitStatement","src":"15900:38:15"}]},"id":7493,"implemented":true,"kind":"function","modifiers":[],"name":"_addValidator","nameLocation":"15514:13:15","nodeType":"FunctionDefinition","parameters":{"id":7445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7444,"mutability":"mutable","name":"validator","nameLocation":"15536:9:15","nodeType":"VariableDeclaration","scope":7493,"src":"15528:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7443,"name":"address","nodeType":"ElementaryTypeName","src":"15528:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15527:19:15"},"returnParameters":{"id":7446,"nodeType":"ParameterList","parameters":[],"src":"15556:0:15"},"scope":7509,"src":"15505:440:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[801],"body":{"id":7507,"nodeType":"Block","src":"16028:83:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16046:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16046:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7502,"name":"keeper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"16060:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16046:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206b65657065722063616e207570677261646520636f6e74726163742e","id":7504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16068:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc","typeString":"literal_string \"Only keeper can upgrade contract.\""},"value":"Only keeper can upgrade contract."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc","typeString":"literal_string \"Only keeper can upgrade contract.\""}],"id":7499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16038:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16038:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7506,"nodeType":"ExpressionStatement","src":"16038:66:15"}]},"id":7508,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"15960:17:15","nodeType":"FunctionDefinition","overrides":{"id":7497,"nodeType":"OverrideSpecifier","overrides":[],"src":"16019:8:15"},"parameters":{"id":7496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7495,"mutability":"mutable","name":"newImplementation","nameLocation":"15986:17:15","nodeType":"VariableDeclaration","scope":7508,"src":"15978:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7494,"name":"address","nodeType":"ElementaryTypeName","src":"15978:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15977:27:15"},"returnParameters":{"id":7498,"nodeType":"ParameterList","parameters":[],"src":"16028:0:15"},"scope":7509,"src":"15951:160:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7510,"src":"588:15525:15","usedErrors":[3196,3199]}],"src":"32:16082:15"},"id":15}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1277,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":509,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfa467c53a0d60b4d09bf04aa952b1d1d44e5766fcc053aace078d7859b8419\",\"dweb:/ipfs/QmebVTZpyNxYfKYTuLMywzEJTdc1Ca8ME4xm3kR9gQgToG\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":509,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":806,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1277,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":828,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":933,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":948,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":992,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f6fce71ff4c5012423740f5f5b316fc848588710680713e1cd4c13b4ca1118764736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F PUSH16 0xCE71FF4C5012423740F5F5B316FC8485 DUP9 PUSH18 0x680713E1CD4C13B4CA1118764736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"194:7172:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f6fce71ff4c5012423740f5f5b316fc848588710680713e1cd4c13b4ca1118764736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F PUSH16 0xCE71FF4C5012423740F5F5B316FC8485 DUP9 PUSH18 0x680713E1CD4C13B4CA1118764736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"194:7172:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1277,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220991bf44d389cde11056252cdd7a748380c5a290c408a597e58d751c569b9c3bb64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SHL DELEGATECALL 0x4D CODESIZE SWAP13 0xDE GT SDIV PUSH3 0x52CDD7 0xA7 0x48 CODESIZE 0xC GAS 0x29 0xC BLOCKHASH DUP11 MSIZE PUSH31 0x58D751C569B9C3BB64736F6C63430008040033000000000000000000000000 ","sourceMap":"1279:1402:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1402:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220991bf44d389cde11056252cdd7a748380c5a290c408a597e58d751c569b9c3bb64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 SHL DELEGATECALL 0x4D CODESIZE SWAP13 0xDE GT SDIV PUSH3 0x52CDD7 0xA7 0x48 CODESIZE 0xC GAS 0x29 0xC BLOCKHASH DUP11 MSIZE PUSH31 0x58D751C569B9C3BB64736F6C63430008040033000000000000000000000000 ","sourceMap":"1279:1402:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a3c693c2b1aa5fe94ed9efc8ad3bac926a90fce60c92ef3bfc016e662d3f0bb64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS EXTCODECOPY PUSH10 0x3C2B1AA5FE94ED9EFC8A 0xD3 0xBA 0xC9 0x26 0xA9 0xF 0xCE PUSH1 0xC9 0x2E RETURN 0xBF 0xC0 AND 0xE6 PUSH3 0xD3F0BB PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"842:34685:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;842:34685:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a3c693c2b1aa5fe94ed9efc8ad3bac926a90fce60c92ef3bfc016e662d3f0bb64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS EXTCODECOPY PUSH10 0x3C2B1AA5FE94ED9EFC8A 0xD3 0xBA 0xC9 0x26 0xA9 0xF 0xCE PUSH1 0xC9 0x2E RETURN 0xBF 0xC0 AND 0xE6 PUSH3 0xD3F0BB PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"842:34685:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"DoubleEndedQueue":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"OutOfBounds","type":"error"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203de97913fe96bbbfbe00110bf4c51884755d7542201955152c423f73c96dc7f864736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE9 PUSH26 0x13FE96BBBFBE00110BF4C51884755D7542201955152C423F73C9 PUSH14 0xC7F864736F6C6343000804003300 ","sourceMap":"835:5066:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;835:5066:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203de97913fe96bbbfbe00110bf4c51884755d7542201955152c423f73c96dc7f864736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE9 PUSH26 0x13FE96BBBFBE00110BF4C51884755D7542201955152C423F73C9 PUSH14 0xC7F864736F6C6343000804003300 ","sourceMap":"835:5066:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that the existing queue contents are left in storage. The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be used in storage, and not in memory. ``` DoubleEndedQueue.Bytes32Deque queue; ``` _Available since v4.6._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":\"DoubleEndedQueue\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d72e2f7cb4f2b23f33e5f692aeaba6d5fd57f1142ad250c69e03d59ed9f3fb8564736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x2E 0x2F PUSH29 0xB4F2B23F33E5F692AEABA6D5FD57F1142AD250C69E03D59ED9F3FB8564 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"1228:11454:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d72e2f7cb4f2b23f33e5f692aeaba6d5fd57f1142ad250c69e03d59ed9f3fb8564736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x2E 0x2F PUSH29 0xB4F2B23F33E5F692AEABA6D5FD57F1142AD250C69E03D59ED9F3FB8564 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"1228:11454:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/CMTStaking.sol":{"CMTStaking":{"abi":[{"inputs":[{"internalType":"uint256","name":"minStakeAmount","type":"uint256"},{"internalType":"uint256","name":"minWithdrawAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"OutOfBounds","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"newLockPeriod","type":"uint32"}],"name":"LockPeriodChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"validatorReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stakerReward","type":"uint256"}],"name":"RewardPerBlockChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint256","name":"unstakeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"claimedReward","type":"uint256"}],"name":"Unstake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"}],"name":"ValidatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawalCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawalInitiated","type":"event"},{"inputs":[],"name":"AUR_PREC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_STAKE_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_WITHDRAW_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activeStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activeValidators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"addValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"completeWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"dueWithdrawalAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"dueWithdrawalAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"inactivePools","outputs":[{"internalType":"uint256","name":"lastAUR","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"validator","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"isActiveValidator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"keeper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockPeriod","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"address","name":"staker","type":"address"}],"name":"pendingReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pendingWithdrawals","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct CMTStaking.Withdrawal[]","name":"withdrawals","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"removeValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newKeeper","type":"address"}],"name":"setKeeper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"period","type":"uint32"}],"name":"setLockPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setRewardPerBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"limit","type":"uint32"}],"name":"setValidatorLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"stakeTable","outputs":[{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"},{"internalType":"uint256","name":"pendingReward","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakerPool","outputs":[{"internalType":"uint256","name":"lastAUR","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakerRewardPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"validatorLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"validatorPool","outputs":[{"internalType":"uint256","name":"lastAUR","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"validatorRewardPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"validatorWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"withdrawTable","outputs":[{"internalType":"int128","name":"_begin","type":"int128"},{"internalType":"int128","name":"_end","type":"int128"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1226:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:157:16","statements":[{"body":{"nodeType":"YulBlock","src":"158:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"167:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"175:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:16"},"nodeType":"YulFunctionCall","src":"160:22:16"},"nodeType":"YulExpressionStatement","src":"160:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:16"},"nodeType":"YulFunctionCall","src":"129:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:16"},"nodeType":"YulFunctionCall","src":"125:32:16"},"nodeType":"YulIf","src":"122:2:16"},{"nodeType":"YulAssignment","src":"193:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"209:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"203:5:16"},"nodeType":"YulFunctionCall","src":"203:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"193:6:16"}]},{"nodeType":"YulAssignment","src":"228:35:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"259:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"244:3:16"},"nodeType":"YulFunctionCall","src":"244:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:16"},"nodeType":"YulFunctionCall","src":"238:25:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"228:6:16"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"70:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"81:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"93:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"101:6:16","type":""}],"src":"14:255:16"},{"body":{"nodeType":"YulBlock","src":"448:179:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"465:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"476:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"458:6:16"},"nodeType":"YulFunctionCall","src":"458:21:16"},"nodeType":"YulExpressionStatement","src":"458:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"495:3:16"},"nodeType":"YulFunctionCall","src":"495:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"515:2:16","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"488:6:16"},"nodeType":"YulFunctionCall","src":"488:30:16"},"nodeType":"YulExpressionStatement","src":"488:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"538:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"549:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:16"},"nodeType":"YulFunctionCall","src":"534:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"554:31:16","type":"","value":"Invalid minimal stake amount."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"527:6:16"},"nodeType":"YulFunctionCall","src":"527:59:16"},"nodeType":"YulExpressionStatement","src":"527:59:16"},{"nodeType":"YulAssignment","src":"595:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"607:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"618:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"603:3:16"},"nodeType":"YulFunctionCall","src":"603:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"595:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"425:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"439:4:16","type":""}],"src":"274:353:16"},{"body":{"nodeType":"YulBlock","src":"806:229:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"823:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"834:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"816:6:16"},"nodeType":"YulFunctionCall","src":"816:21:16"},"nodeType":"YulExpressionStatement","src":"816:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"857:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"868:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"853:3:16"},"nodeType":"YulFunctionCall","src":"853:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"873:2:16","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:16"},"nodeType":"YulFunctionCall","src":"846:30:16"},"nodeType":"YulExpressionStatement","src":"846:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"896:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"907:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"892:3:16"},"nodeType":"YulFunctionCall","src":"892:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"912:34:16","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"885:6:16"},"nodeType":"YulFunctionCall","src":"885:62:16"},"nodeType":"YulExpressionStatement","src":"885:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"967:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"978:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:16"},"nodeType":"YulFunctionCall","src":"963:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"983:9:16","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:16"},"nodeType":"YulFunctionCall","src":"956:37:16"},"nodeType":"YulExpressionStatement","src":"956:37:16"},{"nodeType":"YulAssignment","src":"1002:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1025:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:16"},"nodeType":"YulFunctionCall","src":"1010:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1002:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"783:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"797:4:16","type":""}],"src":"632:403:16"},{"body":{"nodeType":"YulBlock","src":"1137:87:16","statements":[{"nodeType":"YulAssignment","src":"1147:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1170:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1155:3:16"},"nodeType":"YulFunctionCall","src":"1155:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1147:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1189:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1204:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1212:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1200:3:16"},"nodeType":"YulFunctionCall","src":"1200:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1182:6:16"},"nodeType":"YulFunctionCall","src":"1182:36:16"},"nodeType":"YulExpressionStatement","src":"1182:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1106:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1117:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1128:4:16","type":""}],"src":"1040:184:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid minimal stake amount.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x374A CODESIZE SUB DUP1 PUSH3 0x374A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3B SWAP2 PUSH3 0x16D JUMP JUMPDEST PUSH3 0x45 PUSH3 0xAE JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 LT ISZERO PUSH3 0x9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E696D616C207374616B6520616D6F756E742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 MSTORE PUSH3 0x191 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x96 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND LT ISZERO PUSH3 0x16B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x180 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x355C PUSH3 0x1EE PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x691 ADD MSTORE PUSH2 0x26E7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x317 ADD MSTORE PUSH2 0x94C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xC01 ADD MSTORE DUP2 DUP2 PUSH2 0xC41 ADD MSTORE DUP2 DUP2 PUSH2 0x107D ADD MSTORE DUP2 DUP2 PUSH2 0x10BD ADD MSTORE PUSH2 0x11CC ADD MSTORE PUSH2 0x355C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x748747E6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC2A672E0 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xEAF7C9DC GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEAF7C9DC EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xF0544AC8 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0xF489F23B EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xF6A2314A EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2A672E0 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0xD4C6D1DE EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0xD849A502 EQ PUSH2 0x732 JUMPI DUP1 PUSH4 0xDAB31689 EQ PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x94409A56 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x94409A56 EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x9CED7E76 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xB6857844 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xBB872B4A EQ PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x748747E6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x7B66394C EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x7EA5DB42 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x522ABC40 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x57525CBC EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x40A141FF EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x45F7B8F4 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x4D238C8E EQ PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29451893 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x29451893 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x340C5A25 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x19D41774 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x24E770D0 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x26476204 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x27ED7188 EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x291 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x139 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xCD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0x465 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x524 CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x11BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x46A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x138 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH2 0x60F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x1466 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6EE CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x708 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x318E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 SLOAD PUSH2 0x131 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1813 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 SLOAD PUSH2 0x133 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x7C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x19DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E6 PUSH2 0x7E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x31DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x80E CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1B78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x861 PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 PUSH2 0x8B8 DUP4 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 PUSH2 0x8E6 PUSH2 0x8D5 DUP8 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x20 DUP2 SWAP1 SHR SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP9 SWAP1 PUSH2 0x909 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x916 JUMPI POP POP PUSH2 0x935 JUMP JUMPDEST PUSH2 0x920 DUP3 DUP7 PUSH2 0x33C9 JUMP JUMPDEST SWAP5 POP POP POP DUP1 PUSH2 0x92E SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BD JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x94A PUSH2 0x1C54 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374203E3D204D494E5F5354414B455F41 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x26A7AAA72A17 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FE PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP9 DUP9 MSTORE PUSH2 0x135 DUP8 MSTORE DUP6 DUP9 KECCAK256 CALLER DUP10 MSTORE DUP8 MSTORE SWAP7 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP3 DUP4 ADD DUP7 MSTORE DUP1 SLOAD DUP4 MSTORE SWAP1 DUP2 ADD SLOAD SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP5 ADD SLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0xAA8 DUP5 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD CALLVALUE SWAP1 DUP3 SWAP1 PUSH2 0xAD8 SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xAE5 DUP5 DUP4 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0xAEF DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP5 ADD DUP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 MLOAD DUP2 SSTORE DUP3 DUP9 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP10 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 MLOAD DUP2 SSTORE SWAP4 DUP9 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP7 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13B DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0xB90 SWAP1 DUP5 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH2 0x13A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x99039FCF0A98F484616C5196EE8B2ECFA971BABF0B519848289EA4DB381F85F7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC88 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0xCB7 DUP2 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x1FF6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C PUSH2 0x12E DUP4 PUSH2 0x2048 JUMP JUMPDEST PUSH2 0xCFE PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD0B PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST GT PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656D6F766520746865206F6E6C792076616C696461746F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD92 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH2 0xDF9 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xE03 DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0xE5E PUSH2 0x12E DUP6 PUSH2 0x2077 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP2 MLOAD PUSH2 0x13B DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE9E SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF0B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xF25 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xFB3 PUSH2 0x208C JUMP JUMPDEST PUSH2 0xFBB PUSH2 0x20BB JUMP JUMPDEST PUSH2 0xFC4 DUP4 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0xFCC PUSH2 0x213C JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0x15 OR SWAP1 SSTORE PUSH2 0x1001 PUSH8 0x4563918244F40000 PUSH2 0x2163 JUMP JUMPDEST PUSH2 0x100D PUSH3 0x93A80 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x1016 DUP3 PUSH2 0x2220 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x2220 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1104 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x112A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x1133 DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x113F DUP3 DUP3 PUSH1 0x1 PUSH2 0x1E22 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x114B PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x1156 PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103634B6B4BA103B30B63AB297 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH1 0x0 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x128C PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206B656570657220616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x113F CALLER DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x80 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP3 DUP6 MSTORE SWAP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x13DC JUMPI PUSH2 0x1393 DUP5 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x13C5 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x13D0 DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH2 0x93C JUMP JUMPDEST PUSH2 0x13E5 DUP6 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x141D JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1417 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x1450 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE JUMPDEST PUSH2 0x145A DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x146E PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265776172642070657220626C6F636B2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x14C6 PUSH2 0x1C9A JUMP JUMPDEST POP POP PUSH2 0xCD3 DUP2 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1531 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x153C PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 DUP10 MSTORE PUSH2 0x135 DUP9 MSTORE DUP7 DUP10 KECCAK256 CALLER DUP11 MSTORE DUP9 MSTORE SWAP8 DUP7 SWAP1 KECCAK256 DUP7 MLOAD SWAP4 DUP5 ADD DUP8 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD SLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15EA JUMPI POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO JUMPDEST PUSH2 0x1636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65207265636F7264206E6F7420666F756E642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1642 DUP9 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x169D JUMPI PUSH2 0x1651 DUP7 DUP6 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x165B DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1666 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1675 DUP7 DUP6 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x167F DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST DUP2 PUSH2 0x13B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16F4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE SWAP5 POP PUSH2 0x16DA DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x16E5 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x16F4 DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE SWAP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 MLOAD DUP2 SSTORE DUP3 DUP11 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP12 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 MLOAD DUP2 SSTORE SWAP4 DUP11 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP9 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13A DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1795 SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 CALLER SWAP2 PUSH32 0x18EDD09E80386CD99DF397E2E0D87D2BB259423EAE08645E776321A36FE680EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17F3 CALLER PUSH2 0x17EE DUP4 DUP6 PUSH2 0x33C9 JUMP JUMPDEST PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x180E PUSH2 0x12E PUSH2 0x281D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 TIMESTAMP PUSH2 0x881 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x187F PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1889 PUSH2 0x1C9A JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x18E5 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18F4 DUP3 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x18FE DUP3 DUP3 PUSH2 0x1D93 JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1912 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0x196E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74206F7220696E73756666696369656E742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x30B630B731B297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1980 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x19D6 SWAP1 DUP5 PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x1A8D DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AFB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1AD4 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B70 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1B19 PUSH2 0x8D5 DUP7 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 PUSH2 0x1B69 SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B01 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B80 PUSH2 0x1F9C JUMP JUMPDEST PUSH3 0x15180 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103637B1B5903832B934B7B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C00 PUSH2 0x1BE8 DUP5 PUSH2 0x282A JUMP JUMPDEST DUP6 SLOAD PUSH2 0x1BFB SWAP2 SWAP1 PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH2 0x3388 JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1CEE SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD SWAP3 SWAP5 POP PUSH2 0x1D1B SWAP3 PUSH2 0x257B JUMP JUMPDEST DUP3 MLOAD PUSH2 0x130 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH2 0x131 SSTORE DUP2 MLOAD PUSH2 0x132 SSTORE DUP2 ADD MLOAD PUSH2 0x133 SSTORE SWAP2 SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1D4B JUMPI POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MLOAD DUP3 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1D67 SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1D71 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1D8C SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1DAA SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206B65657065722063616E207570677261646520636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E55 JUMPI PUSH2 0x105C DUP4 PUSH2 0x2927 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EBE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1EBB SWAP2 DUP2 ADD SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH2 0x105C DUP4 DUP4 DUP4 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x1FFE PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B81 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x216E PUSH1 0x5 DUP3 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x138 DUP2 SWAP1 SSTORE PUSH2 0x217E SWAP1 DUP3 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x139 DUP2 SWAP1 SSTORE PUSH2 0x138 SLOAD PUSH1 0x40 MLOAD PUSH32 0x79A5349732F93288ABBB68E251C3DFC325BF3EE6FDE7786D919155D39733E0F5 SWAP3 PUSH2 0x21BE SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x401DAE40EDAC291EC00AD4F9E16968C6C86B73FCD6FAAD7E35A55A27FA64D048 SWAP1 PUSH1 0x20 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B21030B2323932B9B997 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x227E PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST LT PUSH2 0x22C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2B30B634B230BA37B9399030B93290333AB63617 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0xCE8 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x22F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST PUSH2 0x233E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220686164206265656E2061646465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x234A PUSH2 0x12E DUP3 PUSH2 0x2BB4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 DUP1 PUSH2 0x23CF PUSH2 0x8D5 DUP6 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP TIMESTAMP SWAP1 PUSH2 0x23F2 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x23FF JUMPI POP POP PUSH2 0x2487 JUMP JUMPDEST PUSH2 0x2409 DUP3 DUP5 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2414 DUP5 PUSH2 0x2C27 JUMP JUMPDEST POP DUP5 DUP4 GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x2476 PUSH2 0x2433 PUSH2 0x242D DUP8 DUP7 PUSH2 0x3420 JUMP JUMPDEST DUP4 PUSH2 0x2CAA JUMP JUMPDEST DUP6 SWAP1 DUP2 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND PUSH1 0x0 NOT ADD DUP2 SIGNEXTEND SWAP1 DUP2 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SWAP3 POP POP POP PUSH2 0x2487 JUMP JUMPDEST POP POP PUSH2 0x23A5 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x24E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420776974686472617761626C6520616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB00382203B46C3B6AD0A2D7AF0268E334BD9406256A7C7BA8F7FC8BC47F8CDE9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2525 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2537 DUP5 DUP5 PUSH2 0x2D13 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2546 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x202B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH2 0x25A1 JUMPI POP NUMBER PUSH1 0x20 DUP5 ADD MSTORE DUP3 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x25B4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x3401 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x25D3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x25DD SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST DUP6 MLOAD DUP7 SWAP1 PUSH2 0x25EC SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP NUMBER PUSH1 0x20 DUP6 ADD MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0x2661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP DUP4 PUSH2 0x2675 JUMPI DUP1 SWAP4 POP PUSH2 0x269F JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0x269F JUMPI DUP4 DUP6 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 SWAP3 POP DUP4 SWAP2 POP PUSH2 0x26DD SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x26B0 DUP3 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP3 POP DUP3 DUP7 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x26C4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP DUP5 MLOAD DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x26D8 SWAP1 DUP4 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x2769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617720616D6F756E74206D757374203E3D204D494E5F57495448 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x11149055D7D05353D55395 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x27D6 PUSH2 0x2776 DUP3 TIMESTAMP PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP5 SLOAD SWAP4 ADD SWAP1 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MUL SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6D92F7D3303F995BF21956BB0C51B388BAE348EAF45C23DEBD2CFA3FCD9EC646 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2811 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x28CB JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x29CC DUP4 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x29D9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x105C JUMPI PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2E52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2B4A JUMPI PUSH1 0x0 PUSH2 0x2A5B PUSH1 0x1 DUP4 PUSH2 0x3420 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2A6F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2AF0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2ACE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2B0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2F46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C46 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP5 SLOAD SWAP3 ADD SWAP1 SWAP3 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x2CC7 JUMPI POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO JUMPDEST PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081DDA5D1A191C985DD85B PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64206E617469766520746F6B656E2E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2DF2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1B DUP2 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE PUSH2 0x2EBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2ED5 SWAP2 SWAP1 PUSH2 0x3172 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F10 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F3D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3500 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2F95 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2F8D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2FA4 JUMPI POP DUP2 PUSH2 0x2066 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2FB4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FDF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2066 DUP2 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3007 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3027 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3032 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3042 DUP2 PUSH2 0x34AA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x305F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x306A DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3086 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3099 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30AB JUMPI PUSH2 0x30AB PUSH2 0x3494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x30D3 JUMPI PUSH2 0x30D3 PUSH2 0x3494 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x30EB JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x312F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3147 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2066 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3184 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31CF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31AA JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x31F8 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3249 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206E6F74206578697374206F7220686173206265656E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3932B6B7BB32B217 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x33AA JUMPI PUSH2 0x33AA PUSH2 0x347E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x33C3 JUMPI PUSH2 0x33C3 PUSH2 0x347E JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x33DC JUMPI PUSH2 0x33DC PUSH2 0x347E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x33FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x341B JUMPI PUSH2 0x341B PUSH2 0x347E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3432 JUMPI PUSH2 0x3432 PUSH2 0x347E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3452 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x343A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29E8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3477 JUMPI PUSH2 0x3477 PUSH2 0x347E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID JUMPDEST KECCAK256 DELEGATECALL 0xC 0xB5 0xE9 0xE6 CALLVALUE 0xA9 0xD 0xF9 0xA7 0x2B MLOAD PUSH13 0x11CC52281A4D1B7B67E672E2FE SLOAD 0x4F CALLCODE 0x2F CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A2646970667358221220E6 PUSH30 0xEB715580C2EB88646F83977211BD17A8CF09A5456A2A72870D6D984DB095 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"588:15521:14:-:0;;;1332:4:5;1289:48;;;;2693:271:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2766:22;:20;:22::i;:::-;2824:7;2806:14;:25;;2798:67;;;;-1:-1:-1;;;2798:67:14;;476:2:16;2798:67:14;;;458:21:16;515:2;495:18;;;488:30;554:31;534:18;;;527:59;603:18;;2798:67:14;;;;;;;;;2875:33;;;;;2918:39;;588:15521;;5388:279:4;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:4;;834:2:16;5447:66:4;;;816:21:16;873:2;853:18;;;846:30;912:34;892:18;;;885:62;-1:-1:-1;;;963:18:16;;;956:37;1010:19;;5447:66:4;806:229:16;5447:66:4;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:4;5588:15;5573:30;;;;;;5622:28;;1182:36:16;;;5622:28:4;;1170:2:16;1155:18;5622:28:4;;;;;;;5523:138;5388:279::o;14:255:16:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:2;;;175:6;167;160:22;122:2;-1:-1:-1;;203:16:16;;259:2;244:18;;;238:25;203:16;;238:25;;-1:-1:-1;112:157:16:o;1137:87::-;588:15521:14;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22665:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:187:16","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:16"},"nodeType":"YulFunctionCall","src":"132:22:16"},"nodeType":"YulExpressionStatement","src":"132:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:16"},"nodeType":"YulFunctionCall","src":"101:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:16"},"nodeType":"YulFunctionCall","src":"97:32:16"},"nodeType":"YulIf","src":"94:2:16"},{"nodeType":"YulVariableDeclaration","src":"165:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:16"},"nodeType":"YulFunctionCall","src":"178:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"235:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"210:24:16"},"nodeType":"YulFunctionCall","src":"210:31:16"},"nodeType":"YulExpressionStatement","src":"210:31:16"},{"nodeType":"YulAssignment","src":"250:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"260:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"250:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:16","type":""}],"src":"14:257:16"},{"body":{"nodeType":"YulBlock","src":"371:238:16","statements":[{"body":{"nodeType":"YulBlock","src":"417:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"426:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"434:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"419:6:16"},"nodeType":"YulFunctionCall","src":"419:22:16"},"nodeType":"YulExpressionStatement","src":"419:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"392:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"401:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"388:3:16"},"nodeType":"YulFunctionCall","src":"388:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"413:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"384:3:16"},"nodeType":"YulFunctionCall","src":"384:32:16"},"nodeType":"YulIf","src":"381:2:16"},{"nodeType":"YulVariableDeclaration","src":"452:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"465:12:16"},"nodeType":"YulFunctionCall","src":"465:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"456:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"497:24:16"},"nodeType":"YulFunctionCall","src":"497:31:16"},"nodeType":"YulExpressionStatement","src":"497:31:16"},{"nodeType":"YulAssignment","src":"537:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"547:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"537:6:16"}]},{"nodeType":"YulAssignment","src":"561:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"588:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"599:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"584:3:16"},"nodeType":"YulFunctionCall","src":"584:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"571:12:16"},"nodeType":"YulFunctionCall","src":"571:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"561:6:16"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"329:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"340:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"352:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"360:6:16","type":""}],"src":"276:333:16"},{"body":{"nodeType":"YulBlock","src":"701:311:16","statements":[{"body":{"nodeType":"YulBlock","src":"747:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"756:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"764:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"749:6:16"},"nodeType":"YulFunctionCall","src":"749:22:16"},"nodeType":"YulExpressionStatement","src":"749:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"722:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"731:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"718:3:16"},"nodeType":"YulFunctionCall","src":"718:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"743:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"714:3:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulIf","src":"711:2:16"},{"nodeType":"YulVariableDeclaration","src":"782:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"808:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"795:12:16"},"nodeType":"YulFunctionCall","src":"795:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"786:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"852:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"827:24:16"},"nodeType":"YulFunctionCall","src":"827:31:16"},"nodeType":"YulExpressionStatement","src":"827:31:16"},{"nodeType":"YulAssignment","src":"867:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"877:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"867:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"891:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"923:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"934:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:16"},"nodeType":"YulFunctionCall","src":"919:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"906:12:16"},"nodeType":"YulFunctionCall","src":"906:32:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"895:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"972:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"947:24:16"},"nodeType":"YulFunctionCall","src":"947:33:16"},"nodeType":"YulExpressionStatement","src":"947:33:16"},{"nodeType":"YulAssignment","src":"989:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"999:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"989:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"659:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"670:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"682:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"690:6:16","type":""}],"src":"614:398:16"},{"body":{"nodeType":"YulBlock","src":"1113:1005:16","statements":[{"body":{"nodeType":"YulBlock","src":"1159:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1168:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:22:16"},"nodeType":"YulExpressionStatement","src":"1161:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1134:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1143:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1130:3:16"},"nodeType":"YulFunctionCall","src":"1130:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1155:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1126:3:16"},"nodeType":"YulFunctionCall","src":"1126:32:16"},"nodeType":"YulIf","src":"1123:2:16"},{"nodeType":"YulVariableDeclaration","src":"1194:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1220:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1207:12:16"},"nodeType":"YulFunctionCall","src":"1207:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1198:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1264:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1239:24:16"},"nodeType":"YulFunctionCall","src":"1239:31:16"},"nodeType":"YulExpressionStatement","src":"1239:31:16"},{"nodeType":"YulAssignment","src":"1279:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1289:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1279:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1303:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1334:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1345:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1330:3:16"},"nodeType":"YulFunctionCall","src":"1330:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1317:12:16"},"nodeType":"YulFunctionCall","src":"1317:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1307:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1358:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1368:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1362:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1413:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1422:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"1430:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1415:6:16"},"nodeType":"YulFunctionCall","src":"1415:22:16"},"nodeType":"YulExpressionStatement","src":"1415:22:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1401:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1409:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1398:2:16"},"nodeType":"YulFunctionCall","src":"1398:14:16"},"nodeType":"YulIf","src":"1395:2:16"},{"nodeType":"YulVariableDeclaration","src":"1448:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1462:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1473:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1458:3:16"},"nodeType":"YulFunctionCall","src":"1458:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1452:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1528:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1537:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"1545:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:22:16"},"nodeType":"YulExpressionStatement","src":"1530:22:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1507:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"1511:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1503:3:16"},"nodeType":"YulFunctionCall","src":"1503:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1492:6:16"},"nodeType":"YulFunctionCall","src":"1492:35:16"},"nodeType":"YulIf","src":"1489:2:16"},{"nodeType":"YulVariableDeclaration","src":"1563:26:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1586:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1573:12:16"},"nodeType":"YulFunctionCall","src":"1573:16:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1567:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1612:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1614:16:16"},"nodeType":"YulFunctionCall","src":"1614:18:16"},"nodeType":"YulExpressionStatement","src":"1614:18:16"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1604:2:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1608:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1601:2:16"},"nodeType":"YulFunctionCall","src":"1601:10:16"},"nodeType":"YulIf","src":"1598:2:16"},{"nodeType":"YulVariableDeclaration","src":"1643:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1657:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1653:3:16"},"nodeType":"YulFunctionCall","src":"1653:7:16"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1647:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1669:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1689:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1683:5:16"},"nodeType":"YulFunctionCall","src":"1683:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1673:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1701:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1747:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"1751:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1743:3:16"},"nodeType":"YulFunctionCall","src":"1743:13:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1758:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1739:3:16"},"nodeType":"YulFunctionCall","src":"1739:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"1763:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1735:3:16"},"nodeType":"YulFunctionCall","src":"1735:31:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1768:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1731:3:16"},"nodeType":"YulFunctionCall","src":"1731:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:16"},"nodeType":"YulFunctionCall","src":"1719:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1705:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1831:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1833:16:16"},"nodeType":"YulFunctionCall","src":"1833:18:16"},"nodeType":"YulExpressionStatement","src":"1833:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1790:10:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1802:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:16"},"nodeType":"YulFunctionCall","src":"1787:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1810:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1822:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1807:2:16"},"nodeType":"YulFunctionCall","src":"1807:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1784:2:16"},"nodeType":"YulFunctionCall","src":"1784:46:16"},"nodeType":"YulIf","src":"1781:2:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1873:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1862:6:16"},"nodeType":"YulFunctionCall","src":"1862:22:16"},"nodeType":"YulExpressionStatement","src":"1862:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1900:6:16"},{"name":"_3","nodeType":"YulIdentifier","src":"1908:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1893:6:16"},"nodeType":"YulFunctionCall","src":"1893:18:16"},"nodeType":"YulExpressionStatement","src":"1893:18:16"},{"body":{"nodeType":"YulBlock","src":"1957:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1966:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"1974:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1959:6:16"},"nodeType":"YulFunctionCall","src":"1959:22:16"},"nodeType":"YulExpressionStatement","src":"1959:22:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1934:2:16"},{"name":"_3","nodeType":"YulIdentifier","src":"1938:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1930:3:16"},"nodeType":"YulFunctionCall","src":"1930:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"1943:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1926:3:16"},"nodeType":"YulFunctionCall","src":"1926:20:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1948:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1923:2:16"},"nodeType":"YulFunctionCall","src":"1923:33:16"},"nodeType":"YulIf","src":"1920:2:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2009:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2017:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2005:3:16"},"nodeType":"YulFunctionCall","src":"2005:15:16"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2026:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2030:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2022:3:16"},"nodeType":"YulFunctionCall","src":"2022:11:16"},{"name":"_3","nodeType":"YulIdentifier","src":"2035:2:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1992:12:16"},"nodeType":"YulFunctionCall","src":"1992:46:16"},"nodeType":"YulExpressionStatement","src":"1992:46:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2062:6:16"},{"name":"_3","nodeType":"YulIdentifier","src":"2070:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2058:3:16"},"nodeType":"YulFunctionCall","src":"2058:15:16"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2054:3:16"},"nodeType":"YulFunctionCall","src":"2054:24:16"},{"name":"value1","nodeType":"YulIdentifier","src":"2080:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2047:6:16"},"nodeType":"YulFunctionCall","src":"2047:40:16"},"nodeType":"YulExpressionStatement","src":"2047:40:16"},{"nodeType":"YulAssignment","src":"2096:16:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2106:6:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2096:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1071:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1082:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1094:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1102:6:16","type":""}],"src":"1017:1101:16"},{"body":{"nodeType":"YulBlock","src":"2210:238:16","statements":[{"body":{"nodeType":"YulBlock","src":"2256:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2265:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2273:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2258:6:16"},"nodeType":"YulFunctionCall","src":"2258:22:16"},"nodeType":"YulExpressionStatement","src":"2258:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2231:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2240:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2227:3:16"},"nodeType":"YulFunctionCall","src":"2227:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2252:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2223:3:16"},"nodeType":"YulFunctionCall","src":"2223:32:16"},"nodeType":"YulIf","src":"2220:2:16"},{"nodeType":"YulVariableDeclaration","src":"2291:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2317:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2304:12:16"},"nodeType":"YulFunctionCall","src":"2304:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2295:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2361:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2336:24:16"},"nodeType":"YulFunctionCall","src":"2336:31:16"},"nodeType":"YulExpressionStatement","src":"2336:31:16"},{"nodeType":"YulAssignment","src":"2376:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2386:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2376:6:16"}]},{"nodeType":"YulAssignment","src":"2400:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2427:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2438:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2423:3:16"},"nodeType":"YulFunctionCall","src":"2423:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2410:12:16"},"nodeType":"YulFunctionCall","src":"2410:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2400:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2168:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2179:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2191:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2199:6:16","type":""}],"src":"2123:325:16"},{"body":{"nodeType":"YulBlock","src":"2534:113:16","statements":[{"body":{"nodeType":"YulBlock","src":"2580:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2589:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2582:6:16"},"nodeType":"YulFunctionCall","src":"2582:22:16"},"nodeType":"YulExpressionStatement","src":"2582:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2555:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2564:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2551:3:16"},"nodeType":"YulFunctionCall","src":"2551:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2576:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2547:3:16"},"nodeType":"YulFunctionCall","src":"2547:32:16"},"nodeType":"YulIf","src":"2544:2:16"},{"nodeType":"YulAssignment","src":"2615:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2631:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2625:5:16"},"nodeType":"YulFunctionCall","src":"2625:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2615:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2500:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2511:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2523:6:16","type":""}],"src":"2453:194:16"},{"body":{"nodeType":"YulBlock","src":"2722:120:16","statements":[{"body":{"nodeType":"YulBlock","src":"2768:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2777:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2785:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2770:6:16"},"nodeType":"YulFunctionCall","src":"2770:22:16"},"nodeType":"YulExpressionStatement","src":"2770:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2743:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2752:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2739:3:16"},"nodeType":"YulFunctionCall","src":"2739:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2764:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2735:3:16"},"nodeType":"YulFunctionCall","src":"2735:32:16"},"nodeType":"YulIf","src":"2732:2:16"},{"nodeType":"YulAssignment","src":"2803:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2826:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2813:12:16"},"nodeType":"YulFunctionCall","src":"2813:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2803:6:16"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2688:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2699:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2711:6:16","type":""}],"src":"2652:190:16"},{"body":{"nodeType":"YulBlock","src":"2916:227:16","statements":[{"body":{"nodeType":"YulBlock","src":"2962:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2971:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2979:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2964:6:16"},"nodeType":"YulFunctionCall","src":"2964:22:16"},"nodeType":"YulExpressionStatement","src":"2964:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2937:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2946:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2933:3:16"},"nodeType":"YulFunctionCall","src":"2933:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2958:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2929:3:16"},"nodeType":"YulFunctionCall","src":"2929:32:16"},"nodeType":"YulIf","src":"2926:2:16"},{"nodeType":"YulVariableDeclaration","src":"2997:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3023:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3010:12:16"},"nodeType":"YulFunctionCall","src":"3010:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3001:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3087:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3096:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"3104:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3089:6:16"},"nodeType":"YulFunctionCall","src":"3089:22:16"},"nodeType":"YulExpressionStatement","src":"3089:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3055:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3066:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3073:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3062:3:16"},"nodeType":"YulFunctionCall","src":"3062:22:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3052:2:16"},"nodeType":"YulFunctionCall","src":"3052:33:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3045:6:16"},"nodeType":"YulFunctionCall","src":"3045:41:16"},"nodeType":"YulIf","src":"3042:2:16"},{"nodeType":"YulAssignment","src":"3122:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"3132:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3122:6:16"}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2882:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2893:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2905:6:16","type":""}],"src":"2847:296:16"},{"body":{"nodeType":"YulBlock","src":"3285:137:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3295:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3315:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3309:5:16"},"nodeType":"YulFunctionCall","src":"3309:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3299:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3357:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3365:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3353:3:16"},"nodeType":"YulFunctionCall","src":"3353:17:16"},{"name":"pos","nodeType":"YulIdentifier","src":"3372:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3377:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3331:21:16"},"nodeType":"YulFunctionCall","src":"3331:53:16"},"nodeType":"YulExpressionStatement","src":"3331:53:16"},{"nodeType":"YulAssignment","src":"3393:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3404:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3409:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3400:3:16"},"nodeType":"YulFunctionCall","src":"3400:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3393:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3261:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3266:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3277:3:16","type":""}],"src":"3148:274:16"},{"body":{"nodeType":"YulBlock","src":"3618:14:16","statements":[{"nodeType":"YulAssignment","src":"3620:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"3627:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3620:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3602:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3610:3:16","type":""}],"src":"3427:205:16"},{"body":{"nodeType":"YulBlock","src":"3738:102:16","statements":[{"nodeType":"YulAssignment","src":"3748:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3760:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3771:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3756:3:16"},"nodeType":"YulFunctionCall","src":"3756:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3748:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3790:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3805:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3821:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3826:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3817:3:16"},"nodeType":"YulFunctionCall","src":"3817:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3813:3:16"},"nodeType":"YulFunctionCall","src":"3813:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3801:3:16"},"nodeType":"YulFunctionCall","src":"3801:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3783:6:16"},"nodeType":"YulFunctionCall","src":"3783:51:16"},"nodeType":"YulExpressionStatement","src":"3783:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3707:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3718:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3729:4:16","type":""}],"src":"3637:203:16"},{"body":{"nodeType":"YulBlock","src":"3968:161:16","statements":[{"nodeType":"YulAssignment","src":"3978:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3990:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4001:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3986:3:16"},"nodeType":"YulFunctionCall","src":"3986:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3978:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4020:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4035:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4051:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4056:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4047:3:16"},"nodeType":"YulFunctionCall","src":"4047:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4060:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4043:3:16"},"nodeType":"YulFunctionCall","src":"4043:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4031:3:16"},"nodeType":"YulFunctionCall","src":"4031:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4013:6:16"},"nodeType":"YulFunctionCall","src":"4013:51:16"},"nodeType":"YulExpressionStatement","src":"4013:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4084:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4095:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4080:3:16"},"nodeType":"YulFunctionCall","src":"4080:18:16"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4114:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4107:6:16"},"nodeType":"YulFunctionCall","src":"4107:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4100:6:16"},"nodeType":"YulFunctionCall","src":"4100:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4073:6:16"},"nodeType":"YulFunctionCall","src":"4073:50:16"},"nodeType":"YulExpressionStatement","src":"4073:50:16"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3929:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3940:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3948:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3959:4:16","type":""}],"src":"3845:284:16"},{"body":{"nodeType":"YulBlock","src":"4285:510:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4295:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4305:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4299:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4316:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4345:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4330:3:16"},"nodeType":"YulFunctionCall","src":"4330:18:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4320:6:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4375:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4357:6:16"},"nodeType":"YulFunctionCall","src":"4357:21:16"},"nodeType":"YulExpressionStatement","src":"4357:21:16"},{"nodeType":"YulVariableDeclaration","src":"4387:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4398:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4391:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4413:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4433:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4427:5:16"},"nodeType":"YulFunctionCall","src":"4427:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4417:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4456:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"4464:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4449:6:16"},"nodeType":"YulFunctionCall","src":"4449:22:16"},"nodeType":"YulExpressionStatement","src":"4449:22:16"},{"nodeType":"YulAssignment","src":"4480:25:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4502:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4487:3:16"},"nodeType":"YulFunctionCall","src":"4487:18:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4480:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"4514:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4532:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4540:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4528:3:16"},"nodeType":"YulFunctionCall","src":"4528:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4518:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4552:13:16","value":{"name":"tail","nodeType":"YulIdentifier","src":"4561:4:16"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4556:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4623:146:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4644:3:16"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4659:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4653:5:16"},"nodeType":"YulFunctionCall","src":"4653:13:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4676:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4681:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4672:3:16"},"nodeType":"YulFunctionCall","src":"4672:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4685:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4668:3:16"},"nodeType":"YulFunctionCall","src":"4668:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4649:3:16"},"nodeType":"YulFunctionCall","src":"4649:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4637:6:16"},"nodeType":"YulFunctionCall","src":"4637:52:16"},"nodeType":"YulExpressionStatement","src":"4637:52:16"},{"nodeType":"YulAssignment","src":"4702:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4713:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4718:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4709:3:16"},"nodeType":"YulFunctionCall","src":"4709:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4702:3:16"}]},{"nodeType":"YulAssignment","src":"4734:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4748:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4756:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:16"},"nodeType":"YulFunctionCall","src":"4744:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4734:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4585:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"4588:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4582:2:16"},"nodeType":"YulFunctionCall","src":"4582:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4596:18:16","statements":[{"nodeType":"YulAssignment","src":"4598:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4607:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"4610:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4603:3:16"},"nodeType":"YulFunctionCall","src":"4603:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4598:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4578:3:16","statements":[]},"src":"4574:195:16"},{"nodeType":"YulAssignment","src":"4778:11:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"4786:3:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4778:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4254:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4265:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4276:4:16","type":""}],"src":"4134:661:16"},{"body":{"nodeType":"YulBlock","src":"5007:590:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5017:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5021:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5038:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5056:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5067:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5052:3:16"},"nodeType":"YulFunctionCall","src":"5052:18:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5042:6:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5086:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5097:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5079:6:16"},"nodeType":"YulFunctionCall","src":"5079:21:16"},"nodeType":"YulExpressionStatement","src":"5079:21:16"},{"nodeType":"YulVariableDeclaration","src":"5109:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5120:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5113:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5135:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5155:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5149:5:16"},"nodeType":"YulFunctionCall","src":"5149:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5139:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5178:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"5186:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5171:6:16"},"nodeType":"YulFunctionCall","src":"5171:22:16"},"nodeType":"YulExpressionStatement","src":"5171:22:16"},{"nodeType":"YulVariableDeclaration","src":"5202:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5212:2:16","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5206:2:16","type":""}]},{"nodeType":"YulAssignment","src":"5223:25:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5234:9:16"},{"name":"_2","nodeType":"YulIdentifier","src":"5245:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5230:3:16"},"nodeType":"YulFunctionCall","src":"5230:18:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5223:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"5257:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5275:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5283:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5271:3:16"},"nodeType":"YulFunctionCall","src":"5271:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5261:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5295:13:16","value":{"name":"tail","nodeType":"YulIdentifier","src":"5304:4:16"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5299:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5366:205:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5380:23:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5396:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5390:5:16"},"nodeType":"YulFunctionCall","src":"5390:13:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5384:2:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5423:3:16"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5434:2:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5428:5:16"},"nodeType":"YulFunctionCall","src":"5428:9:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5416:6:16"},"nodeType":"YulFunctionCall","src":"5416:22:16"},"nodeType":"YulExpressionStatement","src":"5416:22:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5462:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5467:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5458:3:16"},"nodeType":"YulFunctionCall","src":"5458:12:16"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5482:2:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5486:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5478:3:16"},"nodeType":"YulFunctionCall","src":"5478:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5472:5:16"},"nodeType":"YulFunctionCall","src":"5472:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5451:6:16"},"nodeType":"YulFunctionCall","src":"5451:40:16"},"nodeType":"YulExpressionStatement","src":"5451:40:16"},{"nodeType":"YulAssignment","src":"5504:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5515:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"5520:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5511:3:16"},"nodeType":"YulFunctionCall","src":"5511:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5504:3:16"}]},{"nodeType":"YulAssignment","src":"5536:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5550:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5558:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5546:3:16"},"nodeType":"YulFunctionCall","src":"5546:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5536:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5328:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"5331:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5325:2:16"},"nodeType":"YulFunctionCall","src":"5325:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5339:18:16","statements":[{"nodeType":"YulAssignment","src":"5341:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5350:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"5353:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5346:3:16"},"nodeType":"YulFunctionCall","src":"5346:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5341:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5321:3:16","statements":[]},"src":"5317:254:16"},{"nodeType":"YulAssignment","src":"5580:11:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"5588:3:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5580:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4976:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4987:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4998:4:16","type":""}],"src":"4800:797:16"},{"body":{"nodeType":"YulBlock","src":"5697:92:16","statements":[{"nodeType":"YulAssignment","src":"5707:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5719:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5730:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5715:3:16"},"nodeType":"YulFunctionCall","src":"5715:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5707:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5749:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5774:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5767:6:16"},"nodeType":"YulFunctionCall","src":"5767:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5760:6:16"},"nodeType":"YulFunctionCall","src":"5760:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5742:6:16"},"nodeType":"YulFunctionCall","src":"5742:41:16"},"nodeType":"YulExpressionStatement","src":"5742:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5666:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5677:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5688:4:16","type":""}],"src":"5602:187:16"},{"body":{"nodeType":"YulBlock","src":"5895:76:16","statements":[{"nodeType":"YulAssignment","src":"5905:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5917:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5928:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5913:3:16"},"nodeType":"YulFunctionCall","src":"5913:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5905:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5947:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"5958:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:16"},"nodeType":"YulFunctionCall","src":"5940:25:16"},"nodeType":"YulExpressionStatement","src":"5940:25:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5864:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5875:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5886:4:16","type":""}],"src":"5794:177:16"},{"body":{"nodeType":"YulBlock","src":"6101:151:16","statements":[{"nodeType":"YulAssignment","src":"6111:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6123:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6134:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6119:3:16"},"nodeType":"YulFunctionCall","src":"6119:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6111:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6153:9:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6175:2:16","type":"","value":"15"},{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:16"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6164:10:16"},"nodeType":"YulFunctionCall","src":"6164:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6146:6:16"},"nodeType":"YulFunctionCall","src":"6146:41:16"},"nodeType":"YulExpressionStatement","src":"6146:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6207:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6218:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6203:3:16"},"nodeType":"YulFunctionCall","src":"6203:18:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6234:2:16","type":"","value":"15"},{"name":"value1","nodeType":"YulIdentifier","src":"6238:6:16"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6223:10:16"},"nodeType":"YulFunctionCall","src":"6223:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6196:6:16"},"nodeType":"YulFunctionCall","src":"6196:50:16"},"nodeType":"YulExpressionStatement","src":"6196:50:16"}]},"name":"abi_encode_tuple_t_int128_t_int128__to_t_int128_t_int128__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6062:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6073:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6081:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6092:4:16","type":""}],"src":"5976:276:16"},{"body":{"nodeType":"YulBlock","src":"6364:87:16","statements":[{"nodeType":"YulAssignment","src":"6374:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6386:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6397:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6382:3:16"},"nodeType":"YulFunctionCall","src":"6382:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6374:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6416:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6431:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6439:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6427:3:16"},"nodeType":"YulFunctionCall","src":"6427:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6409:6:16"},"nodeType":"YulFunctionCall","src":"6409:36:16"},"nodeType":"YulExpressionStatement","src":"6409:36:16"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6333:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6344:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6355:4:16","type":""}],"src":"6257:194:16"},{"body":{"nodeType":"YulBlock","src":"6577:262:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6594:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6605:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6587:6:16"},"nodeType":"YulFunctionCall","src":"6587:21:16"},"nodeType":"YulExpressionStatement","src":"6587:21:16"},{"nodeType":"YulVariableDeclaration","src":"6617:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6637:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6631:5:16"},"nodeType":"YulFunctionCall","src":"6631:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6621:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6664:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6675:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:16"},"nodeType":"YulFunctionCall","src":"6660:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"6680:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6653:6:16"},"nodeType":"YulFunctionCall","src":"6653:34:16"},"nodeType":"YulExpressionStatement","src":"6653:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6722:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6730:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6718:3:16"},"nodeType":"YulFunctionCall","src":"6718:15:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6739:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6750:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6735:3:16"},"nodeType":"YulFunctionCall","src":"6735:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"6755:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6696:21:16"},"nodeType":"YulFunctionCall","src":"6696:66:16"},"nodeType":"YulExpressionStatement","src":"6696:66:16"},{"nodeType":"YulAssignment","src":"6771:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6806:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6814:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6802:3:16"},"nodeType":"YulFunctionCall","src":"6802:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6823:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6819:3:16"},"nodeType":"YulFunctionCall","src":"6819:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6798:3:16"},"nodeType":"YulFunctionCall","src":"6798:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:16"},"nodeType":"YulFunctionCall","src":"6783:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"6830:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:16"},"nodeType":"YulFunctionCall","src":"6779:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6771:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6546:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6557:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6568:4:16","type":""}],"src":"6456:383:16"},{"body":{"nodeType":"YulBlock","src":"7018:229:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7035:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7046:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7028:6:16"},"nodeType":"YulFunctionCall","src":"7028:21:16"},"nodeType":"YulExpressionStatement","src":"7028:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7069:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7080:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7065:3:16"},"nodeType":"YulFunctionCall","src":"7065:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7085:2:16","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7058:6:16"},"nodeType":"YulFunctionCall","src":"7058:30:16"},"nodeType":"YulExpressionStatement","src":"7058:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7108:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7119:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7104:3:16"},"nodeType":"YulFunctionCall","src":"7104:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7124:34:16","type":"","value":"Invalid amount or insufficient b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7097:6:16"},"nodeType":"YulFunctionCall","src":"7097:62:16"},"nodeType":"YulExpressionStatement","src":"7097:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7179:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7190:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7175:3:16"},"nodeType":"YulFunctionCall","src":"7175:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7195:9:16","type":"","value":"alance."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7168:6:16"},"nodeType":"YulFunctionCall","src":"7168:37:16"},"nodeType":"YulExpressionStatement","src":"7168:37:16"},{"nodeType":"YulAssignment","src":"7214:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7226:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7237:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7222:3:16"},"nodeType":"YulFunctionCall","src":"7222:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7214:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6995:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7009:4:16","type":""}],"src":"6844:403:16"},{"body":{"nodeType":"YulBlock","src":"7426:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7443:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7454:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7436:6:16"},"nodeType":"YulFunctionCall","src":"7436:21:16"},"nodeType":"YulExpressionStatement","src":"7436:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7477:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7488:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7473:3:16"},"nodeType":"YulFunctionCall","src":"7473:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7493:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7466:6:16"},"nodeType":"YulFunctionCall","src":"7466:30:16"},"nodeType":"YulExpressionStatement","src":"7466:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7516:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7527:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7512:3:16"},"nodeType":"YulFunctionCall","src":"7512:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7532:22:16","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7505:6:16"},"nodeType":"YulFunctionCall","src":"7505:50:16"},"nodeType":"YulExpressionStatement","src":"7505:50:16"},{"nodeType":"YulAssignment","src":"7564:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7576:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7587:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7572:3:16"},"nodeType":"YulFunctionCall","src":"7572:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7564:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7403:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7417:4:16","type":""}],"src":"7252:344:16"},{"body":{"nodeType":"YulBlock","src":"7775:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7792:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7803:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7785:6:16"},"nodeType":"YulFunctionCall","src":"7785:21:16"},"nodeType":"YulExpressionStatement","src":"7785:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7826:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7837:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7822:3:16"},"nodeType":"YulFunctionCall","src":"7822:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7842:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7815:6:16"},"nodeType":"YulFunctionCall","src":"7815:30:16"},"nodeType":"YulExpressionStatement","src":"7815:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7865:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7876:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7861:3:16"},"nodeType":"YulFunctionCall","src":"7861:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7881:34:16","type":"","value":"Cannot remove the only validator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7854:6:16"},"nodeType":"YulFunctionCall","src":"7854:62:16"},"nodeType":"YulExpressionStatement","src":"7854:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7936:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7947:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:16"},"nodeType":"YulFunctionCall","src":"7932:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7952:3:16","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7925:6:16"},"nodeType":"YulFunctionCall","src":"7925:31:16"},"nodeType":"YulExpressionStatement","src":"7925:31:16"},{"nodeType":"YulAssignment","src":"7965:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7977:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7988:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7973:3:16"},"nodeType":"YulFunctionCall","src":"7973:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7965:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7752:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7766:4:16","type":""}],"src":"7601:397:16"},{"body":{"nodeType":"YulBlock","src":"8177:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8194:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8205:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8187:6:16"},"nodeType":"YulFunctionCall","src":"8187:21:16"},"nodeType":"YulExpressionStatement","src":"8187:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8228:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8239:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:16"},"nodeType":"YulFunctionCall","src":"8224:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8244:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:16"},"nodeType":"YulFunctionCall","src":"8217:30:16"},"nodeType":"YulExpressionStatement","src":"8217:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8267:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8278:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8263:3:16"},"nodeType":"YulFunctionCall","src":"8263:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8283:34:16","type":"","value":"Stake amount must >= MIN_STAKE_A"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8256:6:16"},"nodeType":"YulFunctionCall","src":"8256:62:16"},"nodeType":"YulExpressionStatement","src":"8256:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8338:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8349:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8334:3:16"},"nodeType":"YulFunctionCall","src":"8334:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8354:8:16","type":"","value":"MOUNT."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8327:6:16"},"nodeType":"YulFunctionCall","src":"8327:36:16"},"nodeType":"YulExpressionStatement","src":"8327:36:16"},{"nodeType":"YulAssignment","src":"8372:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8395:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:16"},"nodeType":"YulFunctionCall","src":"8380:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8154:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8168:4:16","type":""}],"src":"8003:402:16"},{"body":{"nodeType":"YulBlock","src":"8584:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8601:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8612:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8594:6:16"},"nodeType":"YulFunctionCall","src":"8594:21:16"},"nodeType":"YulExpressionStatement","src":"8594:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8635:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8646:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8631:3:16"},"nodeType":"YulFunctionCall","src":"8631:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8651:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8624:6:16"},"nodeType":"YulFunctionCall","src":"8624:30:16"},"nodeType":"YulExpressionStatement","src":"8624:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8674:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8685:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8670:3:16"},"nodeType":"YulFunctionCall","src":"8670:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8690:34:16","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8663:6:16"},"nodeType":"YulFunctionCall","src":"8663:62:16"},"nodeType":"YulExpressionStatement","src":"8663:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8745:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8756:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8741:3:16"},"nodeType":"YulFunctionCall","src":"8741:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8761:8:16","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8734:6:16"},"nodeType":"YulFunctionCall","src":"8734:36:16"},"nodeType":"YulExpressionStatement","src":"8734:36:16"},{"nodeType":"YulAssignment","src":"8779:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8791:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8802:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8787:3:16"},"nodeType":"YulFunctionCall","src":"8787:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8779:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8561:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8575:4:16","type":""}],"src":"8410:402:16"},{"body":{"nodeType":"YulBlock","src":"8991:175:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9008:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9019:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9001:6:16"},"nodeType":"YulFunctionCall","src":"9001:21:16"},"nodeType":"YulExpressionStatement","src":"9001:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9042:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9053:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:16"},"nodeType":"YulFunctionCall","src":"9038:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9058:2:16","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9031:6:16"},"nodeType":"YulFunctionCall","src":"9031:30:16"},"nodeType":"YulExpressionStatement","src":"9031:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9081:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9092:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9077:3:16"},"nodeType":"YulFunctionCall","src":"9077:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9097:27:16","type":"","value":"Validator had been added."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9070:6:16"},"nodeType":"YulFunctionCall","src":"9070:55:16"},"nodeType":"YulExpressionStatement","src":"9070:55:16"},{"nodeType":"YulAssignment","src":"9134:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9146:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9157:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9142:3:16"},"nodeType":"YulFunctionCall","src":"9142:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9134:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8968:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8982:4:16","type":""}],"src":"8817:349:16"},{"body":{"nodeType":"YulBlock","src":"9345:234:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9362:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9373:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9355:6:16"},"nodeType":"YulFunctionCall","src":"9355:21:16"},"nodeType":"YulExpressionStatement","src":"9355:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9396:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9407:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9392:3:16"},"nodeType":"YulFunctionCall","src":"9392:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9412:2:16","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9385:6:16"},"nodeType":"YulFunctionCall","src":"9385:30:16"},"nodeType":"YulExpressionStatement","src":"9385:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9435:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9446:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:16"},"nodeType":"YulFunctionCall","src":"9431:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9451:34:16","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9424:6:16"},"nodeType":"YulFunctionCall","src":"9424:62:16"},"nodeType":"YulExpressionStatement","src":"9424:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9506:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9517:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9502:3:16"},"nodeType":"YulFunctionCall","src":"9502:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9522:14:16","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9495:6:16"},"nodeType":"YulFunctionCall","src":"9495:42:16"},"nodeType":"YulExpressionStatement","src":"9495:42:16"},{"nodeType":"YulAssignment","src":"9546:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9569:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:16"},"nodeType":"YulFunctionCall","src":"9554:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9546:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9322:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9336:4:16","type":""}],"src":"9171:408:16"},{"body":{"nodeType":"YulBlock","src":"9758:229:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9775:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9786:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9768:6:16"},"nodeType":"YulFunctionCall","src":"9768:21:16"},"nodeType":"YulExpressionStatement","src":"9768:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9809:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9820:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9805:3:16"},"nodeType":"YulFunctionCall","src":"9805:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9825:2:16","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:16"},"nodeType":"YulFunctionCall","src":"9798:30:16"},"nodeType":"YulExpressionStatement","src":"9798:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9848:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9859:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9844:3:16"},"nodeType":"YulFunctionCall","src":"9844:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9864:34:16","type":"","value":"SafeCast: value doesn't fit in 1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9837:6:16"},"nodeType":"YulFunctionCall","src":"9837:62:16"},"nodeType":"YulExpressionStatement","src":"9837:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9919:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9930:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9915:3:16"},"nodeType":"YulFunctionCall","src":"9915:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9935:9:16","type":"","value":"28 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9908:6:16"},"nodeType":"YulFunctionCall","src":"9908:37:16"},"nodeType":"YulExpressionStatement","src":"9908:37:16"},{"nodeType":"YulAssignment","src":"9954:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9966:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9977:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9962:3:16"},"nodeType":"YulFunctionCall","src":"9962:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9954:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9735:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9749:4:16","type":""}],"src":"9584:403:16"},{"body":{"nodeType":"YulBlock","src":"10166:175:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10183:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10194:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10176:6:16"},"nodeType":"YulFunctionCall","src":"10176:21:16"},"nodeType":"YulExpressionStatement","src":"10176:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10217:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10228:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10213:3:16"},"nodeType":"YulFunctionCall","src":"10213:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10233:2:16","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10206:6:16"},"nodeType":"YulFunctionCall","src":"10206:30:16"},"nodeType":"YulExpressionStatement","src":"10206:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10256:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10267:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10252:3:16"},"nodeType":"YulFunctionCall","src":"10252:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"10272:27:16","type":"","value":"Invalid reward per block."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10245:6:16"},"nodeType":"YulFunctionCall","src":"10245:55:16"},"nodeType":"YulExpressionStatement","src":"10245:55:16"},{"nodeType":"YulAssignment","src":"10309:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10321:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10332:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10317:3:16"},"nodeType":"YulFunctionCall","src":"10317:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10309:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10143:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10157:4:16","type":""}],"src":"9992:349:16"},{"body":{"nodeType":"YulBlock","src":"10520:234:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10537:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10548:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10530:6:16"},"nodeType":"YulFunctionCall","src":"10530:21:16"},"nodeType":"YulExpressionStatement","src":"10530:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10571:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10582:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10567:3:16"},"nodeType":"YulFunctionCall","src":"10567:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10587:2:16","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10560:6:16"},"nodeType":"YulFunctionCall","src":"10560:30:16"},"nodeType":"YulExpressionStatement","src":"10560:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10610:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10621:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10606:3:16"},"nodeType":"YulFunctionCall","src":"10606:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"10626:34:16","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10599:6:16"},"nodeType":"YulFunctionCall","src":"10599:62:16"},"nodeType":"YulExpressionStatement","src":"10599:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10681:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10692:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10677:3:16"},"nodeType":"YulFunctionCall","src":"10677:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"10697:14:16","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10670:6:16"},"nodeType":"YulFunctionCall","src":"10670:42:16"},"nodeType":"YulExpressionStatement","src":"10670:42:16"},{"nodeType":"YulAssignment","src":"10721:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10733:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10744:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10729:3:16"},"nodeType":"YulFunctionCall","src":"10729:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10721:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10497:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10511:4:16","type":""}],"src":"10346:408:16"},{"body":{"nodeType":"YulBlock","src":"10933:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10950:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10961:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10943:6:16"},"nodeType":"YulFunctionCall","src":"10943:21:16"},"nodeType":"YulExpressionStatement","src":"10943:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10984:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10995:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10980:3:16"},"nodeType":"YulFunctionCall","src":"10980:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11000:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:16"},"nodeType":"YulFunctionCall","src":"10973:30:16"},"nodeType":"YulExpressionStatement","src":"10973:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11023:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11034:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11019:3:16"},"nodeType":"YulFunctionCall","src":"11019:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11039:34:16","type":"","value":"Insufficient withdrawable amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11012:6:16"},"nodeType":"YulFunctionCall","src":"11012:62:16"},"nodeType":"YulExpressionStatement","src":"11012:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11094:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11105:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11090:3:16"},"nodeType":"YulFunctionCall","src":"11090:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11110:3:16","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11083:6:16"},"nodeType":"YulFunctionCall","src":"11083:31:16"},"nodeType":"YulExpressionStatement","src":"11083:31:16"},{"nodeType":"YulAssignment","src":"11123:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11135:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11146:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11131:3:16"},"nodeType":"YulFunctionCall","src":"11131:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11123:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10910:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10924:4:16","type":""}],"src":"10759:397:16"},{"body":{"nodeType":"YulBlock","src":"11335:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11363:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11345:6:16"},"nodeType":"YulFunctionCall","src":"11345:21:16"},"nodeType":"YulExpressionStatement","src":"11345:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11386:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11397:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:16"},"nodeType":"YulFunctionCall","src":"11382:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11402:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11375:6:16"},"nodeType":"YulFunctionCall","src":"11375:30:16"},"nodeType":"YulExpressionStatement","src":"11375:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11436:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11421:3:16"},"nodeType":"YulFunctionCall","src":"11421:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11441:18:16","type":"","value":"Invalid address."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11414:6:16"},"nodeType":"YulFunctionCall","src":"11414:46:16"},"nodeType":"YulExpressionStatement","src":"11414:46:16"},{"nodeType":"YulAssignment","src":"11469:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11481:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11492:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11477:3:16"},"nodeType":"YulFunctionCall","src":"11477:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11469:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11312:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11326:4:16","type":""}],"src":"11161:340:16"},{"body":{"nodeType":"YulBlock","src":"11680:246:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11697:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11708:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11690:6:16"},"nodeType":"YulFunctionCall","src":"11690:21:16"},"nodeType":"YulExpressionStatement","src":"11690:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11742:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11727:3:16"},"nodeType":"YulFunctionCall","src":"11727:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11747:2:16","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11720:6:16"},"nodeType":"YulFunctionCall","src":"11720:30:16"},"nodeType":"YulExpressionStatement","src":"11720:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11770:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11766:3:16"},"nodeType":"YulFunctionCall","src":"11766:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11786:34:16","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11759:6:16"},"nodeType":"YulFunctionCall","src":"11759:62:16"},"nodeType":"YulExpressionStatement","src":"11759:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11841:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11852:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11837:3:16"},"nodeType":"YulFunctionCall","src":"11837:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11857:26:16","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11830:6:16"},"nodeType":"YulFunctionCall","src":"11830:54:16"},"nodeType":"YulExpressionStatement","src":"11830:54:16"},{"nodeType":"YulAssignment","src":"11893:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11905:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11916:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11901:3:16"},"nodeType":"YulFunctionCall","src":"11901:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11893:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11657:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11671:4:16","type":""}],"src":"11506:420:16"},{"body":{"nodeType":"YulBlock","src":"12105:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12122:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12133:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12115:6:16"},"nodeType":"YulFunctionCall","src":"12115:21:16"},"nodeType":"YulExpressionStatement","src":"12115:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12156:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12167:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12152:3:16"},"nodeType":"YulFunctionCall","src":"12152:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12172:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12145:6:16"},"nodeType":"YulFunctionCall","src":"12145:30:16"},"nodeType":"YulExpressionStatement","src":"12145:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12195:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12206:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12191:3:16"},"nodeType":"YulFunctionCall","src":"12191:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12211:18:16","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12184:6:16"},"nodeType":"YulFunctionCall","src":"12184:46:16"},"nodeType":"YulExpressionStatement","src":"12184:46:16"},{"nodeType":"YulAssignment","src":"12239:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12251:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12262:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12247:3:16"},"nodeType":"YulFunctionCall","src":"12247:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12239:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12082:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12096:4:16","type":""}],"src":"11931:340:16"},{"body":{"nodeType":"YulBlock","src":"12450:171:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12467:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12478:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12460:6:16"},"nodeType":"YulFunctionCall","src":"12460:21:16"},"nodeType":"YulExpressionStatement","src":"12460:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12501:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12512:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12497:3:16"},"nodeType":"YulFunctionCall","src":"12497:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12517:2:16","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12490:6:16"},"nodeType":"YulFunctionCall","src":"12490:30:16"},"nodeType":"YulExpressionStatement","src":"12490:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12540:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12551:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12536:3:16"},"nodeType":"YulFunctionCall","src":"12536:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12556:23:16","type":"","value":"Insufficient balance."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12529:6:16"},"nodeType":"YulFunctionCall","src":"12529:51:16"},"nodeType":"YulExpressionStatement","src":"12529:51:16"},{"nodeType":"YulAssignment","src":"12589:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12601:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12612:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12597:3:16"},"nodeType":"YulFunctionCall","src":"12597:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12589:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12427:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12441:4:16","type":""}],"src":"12276:345:16"},{"body":{"nodeType":"YulBlock","src":"12800:231:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12817:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12828:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12810:6:16"},"nodeType":"YulFunctionCall","src":"12810:21:16"},"nodeType":"YulExpressionStatement","src":"12810:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12851:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12862:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12847:3:16"},"nodeType":"YulFunctionCall","src":"12847:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12867:2:16","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12840:6:16"},"nodeType":"YulFunctionCall","src":"12840:30:16"},"nodeType":"YulExpressionStatement","src":"12840:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12890:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12901:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12886:3:16"},"nodeType":"YulFunctionCall","src":"12886:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12906:34:16","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12879:6:16"},"nodeType":"YulFunctionCall","src":"12879:62:16"},"nodeType":"YulExpressionStatement","src":"12879:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12961:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12972:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12957:3:16"},"nodeType":"YulFunctionCall","src":"12957:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12977:11:16","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12950:6:16"},"nodeType":"YulFunctionCall","src":"12950:39:16"},"nodeType":"YulExpressionStatement","src":"12950:39:16"},{"nodeType":"YulAssignment","src":"12998:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13010:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13021:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13006:3:16"},"nodeType":"YulFunctionCall","src":"13006:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12998:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12777:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12791:4:16","type":""}],"src":"12626:405:16"},{"body":{"nodeType":"YulBlock","src":"13210:236:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13227:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13238:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13220:6:16"},"nodeType":"YulFunctionCall","src":"13220:21:16"},"nodeType":"YulExpressionStatement","src":"13220:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13261:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13272:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13257:3:16"},"nodeType":"YulFunctionCall","src":"13257:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13277:2:16","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13250:6:16"},"nodeType":"YulFunctionCall","src":"13250:30:16"},"nodeType":"YulExpressionStatement","src":"13250:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13300:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13311:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13296:3:16"},"nodeType":"YulFunctionCall","src":"13296:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13316:34:16","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13289:6:16"},"nodeType":"YulFunctionCall","src":"13289:62:16"},"nodeType":"YulExpressionStatement","src":"13289:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13371:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13382:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13367:3:16"},"nodeType":"YulFunctionCall","src":"13367:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13387:16:16","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13360:6:16"},"nodeType":"YulFunctionCall","src":"13360:44:16"},"nodeType":"YulExpressionStatement","src":"13360:44:16"},{"nodeType":"YulAssignment","src":"13413:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13436:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13421:3:16"},"nodeType":"YulFunctionCall","src":"13421:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13413:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13187:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13201:4:16","type":""}],"src":"13036:410:16"},{"body":{"nodeType":"YulBlock","src":"13625:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13642:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13653:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13635:6:16"},"nodeType":"YulFunctionCall","src":"13635:21:16"},"nodeType":"YulExpressionStatement","src":"13635:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13676:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13687:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13672:3:16"},"nodeType":"YulFunctionCall","src":"13672:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13692:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13665:6:16"},"nodeType":"YulFunctionCall","src":"13665:30:16"},"nodeType":"YulExpressionStatement","src":"13665:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13715:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13726:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13711:3:16"},"nodeType":"YulFunctionCall","src":"13711:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13731:34:16","type":"","value":"Only keeper can upgrade contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13704:6:16"},"nodeType":"YulFunctionCall","src":"13704:62:16"},"nodeType":"YulExpressionStatement","src":"13704:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13786:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13797:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13782:3:16"},"nodeType":"YulFunctionCall","src":"13782:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13802:3:16","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13775:6:16"},"nodeType":"YulFunctionCall","src":"13775:31:16"},"nodeType":"YulExpressionStatement","src":"13775:31:16"},{"nodeType":"YulAssignment","src":"13815:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13827:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13838:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13823:3:16"},"nodeType":"YulFunctionCall","src":"13823:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13815:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13602:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13616:4:16","type":""}],"src":"13451:397:16"},{"body":{"nodeType":"YulBlock","src":"14027:233:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14044:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14055:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:16"},"nodeType":"YulFunctionCall","src":"14037:21:16"},"nodeType":"YulExpressionStatement","src":"14037:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14078:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14089:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14074:3:16"},"nodeType":"YulFunctionCall","src":"14074:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14094:2:16","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14067:6:16"},"nodeType":"YulFunctionCall","src":"14067:30:16"},"nodeType":"YulExpressionStatement","src":"14067:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14117:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14128:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14113:3:16"},"nodeType":"YulFunctionCall","src":"14113:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14133:34:16","type":"","value":"withdraw amount must >= MIN_WITH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14106:6:16"},"nodeType":"YulFunctionCall","src":"14106:62:16"},"nodeType":"YulExpressionStatement","src":"14106:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14188:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14199:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14184:3:16"},"nodeType":"YulFunctionCall","src":"14184:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14204:13:16","type":"","value":"DRAW_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14177:6:16"},"nodeType":"YulFunctionCall","src":"14177:41:16"},"nodeType":"YulExpressionStatement","src":"14177:41:16"},{"nodeType":"YulAssignment","src":"14227:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14239:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14250:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14235:3:16"},"nodeType":"YulFunctionCall","src":"14235:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14227:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14004:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14018:4:16","type":""}],"src":"13853:407:16"},{"body":{"nodeType":"YulBlock","src":"14439:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14456:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14467:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14449:6:16"},"nodeType":"YulFunctionCall","src":"14449:21:16"},"nodeType":"YulExpressionStatement","src":"14449:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14490:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14501:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14486:3:16"},"nodeType":"YulFunctionCall","src":"14486:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14506:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14479:6:16"},"nodeType":"YulFunctionCall","src":"14479:30:16"},"nodeType":"YulExpressionStatement","src":"14479:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14529:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14540:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14525:3:16"},"nodeType":"YulFunctionCall","src":"14525:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14545:22:16","type":"","value":"Invalid limit value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14518:6:16"},"nodeType":"YulFunctionCall","src":"14518:50:16"},"nodeType":"YulExpressionStatement","src":"14518:50:16"},{"nodeType":"YulAssignment","src":"14577:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14589:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14600:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14585:3:16"},"nodeType":"YulFunctionCall","src":"14585:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14577:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14416:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14430:4:16","type":""}],"src":"14265:344:16"},{"body":{"nodeType":"YulBlock","src":"14788:236:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14805:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14816:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14798:6:16"},"nodeType":"YulFunctionCall","src":"14798:21:16"},"nodeType":"YulExpressionStatement","src":"14798:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14839:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14850:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14835:3:16"},"nodeType":"YulFunctionCall","src":"14835:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14855:2:16","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14828:6:16"},"nodeType":"YulFunctionCall","src":"14828:30:16"},"nodeType":"YulExpressionStatement","src":"14828:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14878:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14889:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14874:3:16"},"nodeType":"YulFunctionCall","src":"14874:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14894:34:16","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14867:6:16"},"nodeType":"YulFunctionCall","src":"14867:62:16"},"nodeType":"YulExpressionStatement","src":"14867:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14949:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14960:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14945:3:16"},"nodeType":"YulFunctionCall","src":"14945:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14965:16:16","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14938:6:16"},"nodeType":"YulFunctionCall","src":"14938:44:16"},"nodeType":"YulExpressionStatement","src":"14938:44:16"},{"nodeType":"YulAssignment","src":"14991:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15003:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15014:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14999:3:16"},"nodeType":"YulFunctionCall","src":"14999:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14991:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14765:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14779:4:16","type":""}],"src":"14614:410:16"},{"body":{"nodeType":"YulBlock","src":"15203:235:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15220:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15231:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15213:6:16"},"nodeType":"YulFunctionCall","src":"15213:21:16"},"nodeType":"YulExpressionStatement","src":"15213:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15254:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15265:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15250:3:16"},"nodeType":"YulFunctionCall","src":"15250:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"15270:2:16","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15243:6:16"},"nodeType":"YulFunctionCall","src":"15243:30:16"},"nodeType":"YulExpressionStatement","src":"15243:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15293:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15304:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15289:3:16"},"nodeType":"YulFunctionCall","src":"15289:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"15309:34:16","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15282:6:16"},"nodeType":"YulFunctionCall","src":"15282:62:16"},"nodeType":"YulExpressionStatement","src":"15282:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15364:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15375:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15360:3:16"},"nodeType":"YulFunctionCall","src":"15360:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"15380:15:16","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15353:6:16"},"nodeType":"YulFunctionCall","src":"15353:43:16"},"nodeType":"YulExpressionStatement","src":"15353:43:16"},{"nodeType":"YulAssignment","src":"15405:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15417:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15428:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15413:3:16"},"nodeType":"YulFunctionCall","src":"15413:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15405:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15180:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15194:4:16","type":""}],"src":"15029:409:16"},{"body":{"nodeType":"YulBlock","src":"15617:182:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15645:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15627:6:16"},"nodeType":"YulFunctionCall","src":"15627:21:16"},"nodeType":"YulExpressionStatement","src":"15627:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15668:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15679:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15664:3:16"},"nodeType":"YulFunctionCall","src":"15664:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"15684:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15657:6:16"},"nodeType":"YulFunctionCall","src":"15657:30:16"},"nodeType":"YulExpressionStatement","src":"15657:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15707:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15718:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15703:3:16"},"nodeType":"YulFunctionCall","src":"15703:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"15723:34:16","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15696:6:16"},"nodeType":"YulFunctionCall","src":"15696:62:16"},"nodeType":"YulExpressionStatement","src":"15696:62:16"},{"nodeType":"YulAssignment","src":"15767:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15779:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15790:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15775:3:16"},"nodeType":"YulFunctionCall","src":"15775:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15594:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15608:4:16","type":""}],"src":"15443:356:16"},{"body":{"nodeType":"YulBlock","src":"15978:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15995:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16006:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15988:6:16"},"nodeType":"YulFunctionCall","src":"15988:21:16"},"nodeType":"YulExpressionStatement","src":"15988:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16029:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16040:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16025:3:16"},"nodeType":"YulFunctionCall","src":"16025:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16045:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16018:6:16"},"nodeType":"YulFunctionCall","src":"16018:30:16"},"nodeType":"YulExpressionStatement","src":"16018:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16068:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16079:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16064:3:16"},"nodeType":"YulFunctionCall","src":"16064:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16084:25:16","type":"","value":"Invalid keeper address."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16057:6:16"},"nodeType":"YulFunctionCall","src":"16057:53:16"},"nodeType":"YulExpressionStatement","src":"16057:53:16"},{"nodeType":"YulAssignment","src":"16119:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16131:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16142:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16127:3:16"},"nodeType":"YulFunctionCall","src":"16127:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16119:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15955:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15969:4:16","type":""}],"src":"15804:347:16"},{"body":{"nodeType":"YulBlock","src":"16330:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16347:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16358:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16340:6:16"},"nodeType":"YulFunctionCall","src":"16340:21:16"},"nodeType":"YulExpressionStatement","src":"16340:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16381:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16392:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16377:3:16"},"nodeType":"YulFunctionCall","src":"16377:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16397:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16370:6:16"},"nodeType":"YulFunctionCall","src":"16370:30:16"},"nodeType":"YulExpressionStatement","src":"16370:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16420:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16431:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16416:3:16"},"nodeType":"YulFunctionCall","src":"16416:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16436:34:16","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16409:6:16"},"nodeType":"YulFunctionCall","src":"16409:62:16"},"nodeType":"YulExpressionStatement","src":"16409:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16502:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16487:3:16"},"nodeType":"YulFunctionCall","src":"16487:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16507:8:16","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16480:6:16"},"nodeType":"YulFunctionCall","src":"16480:36:16"},"nodeType":"YulExpressionStatement","src":"16480:36:16"},{"nodeType":"YulAssignment","src":"16525:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16537:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16548:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16533:3:16"},"nodeType":"YulFunctionCall","src":"16533:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16525:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16307:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16321:4:16","type":""}],"src":"16156:402:16"},{"body":{"nodeType":"YulBlock","src":"16737:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16754:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16765:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16747:6:16"},"nodeType":"YulFunctionCall","src":"16747:21:16"},"nodeType":"YulExpressionStatement","src":"16747:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16788:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16799:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16784:3:16"},"nodeType":"YulFunctionCall","src":"16784:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16804:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16777:6:16"},"nodeType":"YulFunctionCall","src":"16777:30:16"},"nodeType":"YulExpressionStatement","src":"16777:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16827:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16838:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16823:3:16"},"nodeType":"YulFunctionCall","src":"16823:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16843:25:16","type":"","value":"Stake record not found."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16816:6:16"},"nodeType":"YulFunctionCall","src":"16816:53:16"},"nodeType":"YulExpressionStatement","src":"16816:53:16"},{"nodeType":"YulAssignment","src":"16878:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16890:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16901:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16886:3:16"},"nodeType":"YulFunctionCall","src":"16886:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16878:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16714:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16728:4:16","type":""}],"src":"16563:347:16"},{"body":{"nodeType":"YulBlock","src":"17089:233:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17106:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17117:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17099:6:16"},"nodeType":"YulFunctionCall","src":"17099:21:16"},"nodeType":"YulExpressionStatement","src":"17099:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17140:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17151:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17136:3:16"},"nodeType":"YulFunctionCall","src":"17136:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"17156:2:16","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17129:6:16"},"nodeType":"YulFunctionCall","src":"17129:30:16"},"nodeType":"YulExpressionStatement","src":"17129:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17179:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17190:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17175:3:16"},"nodeType":"YulFunctionCall","src":"17175:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17195:34:16","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17168:6:16"},"nodeType":"YulFunctionCall","src":"17168:62:16"},"nodeType":"YulExpressionStatement","src":"17168:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17250:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17261:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17246:3:16"},"nodeType":"YulFunctionCall","src":"17246:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17266:13:16","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17239:6:16"},"nodeType":"YulFunctionCall","src":"17239:41:16"},"nodeType":"YulExpressionStatement","src":"17239:41:16"},{"nodeType":"YulAssignment","src":"17289:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17301:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17312:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17297:3:16"},"nodeType":"YulFunctionCall","src":"17297:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17289:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17066:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17080:4:16","type":""}],"src":"16915:407:16"},{"body":{"nodeType":"YulBlock","src":"17501:230:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17518:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17529:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17511:6:16"},"nodeType":"YulFunctionCall","src":"17511:21:16"},"nodeType":"YulExpressionStatement","src":"17511:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17552:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17563:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17548:3:16"},"nodeType":"YulFunctionCall","src":"17548:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"17568:2:16","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17541:6:16"},"nodeType":"YulFunctionCall","src":"17541:30:16"},"nodeType":"YulExpressionStatement","src":"17541:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17591:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17602:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17587:3:16"},"nodeType":"YulFunctionCall","src":"17587:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17607:34:16","type":"","value":"SafeCast: value doesn't fit in a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17580:6:16"},"nodeType":"YulFunctionCall","src":"17580:62:16"},"nodeType":"YulExpressionStatement","src":"17580:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17662:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17673:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17658:3:16"},"nodeType":"YulFunctionCall","src":"17658:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17678:10:16","type":"","value":"n int256"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17651:6:16"},"nodeType":"YulFunctionCall","src":"17651:38:16"},"nodeType":"YulExpressionStatement","src":"17651:38:16"},{"nodeType":"YulAssignment","src":"17698:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17710:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17721:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17706:3:16"},"nodeType":"YulFunctionCall","src":"17706:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17698:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17478:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17492:4:16","type":""}],"src":"17327:404:16"},{"body":{"nodeType":"YulBlock","src":"17910:168:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17927:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17938:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17920:6:16"},"nodeType":"YulFunctionCall","src":"17920:21:16"},"nodeType":"YulExpressionStatement","src":"17920:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17961:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17972:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17957:3:16"},"nodeType":"YulFunctionCall","src":"17957:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"17977:2:16","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17950:6:16"},"nodeType":"YulFunctionCall","src":"17950:30:16"},"nodeType":"YulExpressionStatement","src":"17950:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18000:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18011:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17996:3:16"},"nodeType":"YulFunctionCall","src":"17996:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18016:20:16","type":"","value":"Invalid withdrawal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17989:6:16"},"nodeType":"YulFunctionCall","src":"17989:48:16"},"nodeType":"YulExpressionStatement","src":"17989:48:16"},{"nodeType":"YulAssignment","src":"18046:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18058:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18069:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18054:3:16"},"nodeType":"YulFunctionCall","src":"18054:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18046:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17887:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17901:4:16","type":""}],"src":"17736:342:16"},{"body":{"nodeType":"YulBlock","src":"18257:230:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18274:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18285:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18267:6:16"},"nodeType":"YulFunctionCall","src":"18267:21:16"},"nodeType":"YulExpressionStatement","src":"18267:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18319:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18304:3:16"},"nodeType":"YulFunctionCall","src":"18304:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"18324:2:16","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18297:6:16"},"nodeType":"YulFunctionCall","src":"18297:30:16"},"nodeType":"YulExpressionStatement","src":"18297:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18347:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18358:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18343:3:16"},"nodeType":"YulFunctionCall","src":"18343:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18363:34:16","type":"","value":"Validator not exist or has been "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18336:6:16"},"nodeType":"YulFunctionCall","src":"18336:62:16"},"nodeType":"YulExpressionStatement","src":"18336:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18418:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18429:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18414:3:16"},"nodeType":"YulFunctionCall","src":"18414:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18434:10:16","type":"","value":"removed."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18407:6:16"},"nodeType":"YulFunctionCall","src":"18407:38:16"},"nodeType":"YulExpressionStatement","src":"18407:38:16"},{"nodeType":"YulAssignment","src":"18454:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18466:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18477:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18462:3:16"},"nodeType":"YulFunctionCall","src":"18462:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18454:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18234:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18248:4:16","type":""}],"src":"18083:404:16"},{"body":{"nodeType":"YulBlock","src":"18666:178:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18683:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18694:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18676:6:16"},"nodeType":"YulFunctionCall","src":"18676:21:16"},"nodeType":"YulExpressionStatement","src":"18676:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18717:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18728:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18713:3:16"},"nodeType":"YulFunctionCall","src":"18713:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"18733:2:16","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18706:6:16"},"nodeType":"YulFunctionCall","src":"18706:30:16"},"nodeType":"YulExpressionStatement","src":"18706:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18756:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18767:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18752:3:16"},"nodeType":"YulFunctionCall","src":"18752:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18772:30:16","type":"","value":"Failed to send native token."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18745:6:16"},"nodeType":"YulFunctionCall","src":"18745:58:16"},"nodeType":"YulExpressionStatement","src":"18745:58:16"},{"nodeType":"YulAssignment","src":"18812:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18824:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18835:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18820:3:16"},"nodeType":"YulFunctionCall","src":"18820:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18812:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18643:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18657:4:16","type":""}],"src":"18492:352:16"},{"body":{"nodeType":"YulBlock","src":"19023:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19040:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19051:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19033:6:16"},"nodeType":"YulFunctionCall","src":"19033:21:16"},"nodeType":"YulExpressionStatement","src":"19033:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19074:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19085:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19070:3:16"},"nodeType":"YulFunctionCall","src":"19070:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"19090:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19063:6:16"},"nodeType":"YulFunctionCall","src":"19063:30:16"},"nodeType":"YulExpressionStatement","src":"19063:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19113:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19124:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19109:3:16"},"nodeType":"YulFunctionCall","src":"19109:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"19129:22:16","type":"","value":"Validators are full."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19102:6:16"},"nodeType":"YulFunctionCall","src":"19102:50:16"},"nodeType":"YulExpressionStatement","src":"19102:50:16"},{"nodeType":"YulAssignment","src":"19161:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19173:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19184:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19169:3:16"},"nodeType":"YulFunctionCall","src":"19169:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19161:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19000:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19014:4:16","type":""}],"src":"18849:344:16"},{"body":{"nodeType":"YulBlock","src":"19372:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19389:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19400:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19382:6:16"},"nodeType":"YulFunctionCall","src":"19382:21:16"},"nodeType":"YulExpressionStatement","src":"19382:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19423:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19434:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19419:3:16"},"nodeType":"YulFunctionCall","src":"19419:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"19439:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19412:6:16"},"nodeType":"YulFunctionCall","src":"19412:30:16"},"nodeType":"YulExpressionStatement","src":"19412:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19462:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19473:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19458:3:16"},"nodeType":"YulFunctionCall","src":"19458:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"19478:22:16","type":"","value":"Invalid lock period."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19451:6:16"},"nodeType":"YulFunctionCall","src":"19451:50:16"},"nodeType":"YulExpressionStatement","src":"19451:50:16"},{"nodeType":"YulAssignment","src":"19510:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19522:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19533:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19518:3:16"},"nodeType":"YulFunctionCall","src":"19518:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19510:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19349:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19363:4:16","type":""}],"src":"19198:344:16"},{"body":{"nodeType":"YulBlock","src":"19721:181:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19738:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19749:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19731:6:16"},"nodeType":"YulFunctionCall","src":"19731:21:16"},"nodeType":"YulExpressionStatement","src":"19731:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19772:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19783:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19768:3:16"},"nodeType":"YulFunctionCall","src":"19768:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"19788:2:16","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19761:6:16"},"nodeType":"YulFunctionCall","src":"19761:30:16"},"nodeType":"YulExpressionStatement","src":"19761:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19811:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19822:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19807:3:16"},"nodeType":"YulFunctionCall","src":"19807:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"19827:33:16","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19800:6:16"},"nodeType":"YulFunctionCall","src":"19800:61:16"},"nodeType":"YulExpressionStatement","src":"19800:61:16"},{"nodeType":"YulAssignment","src":"19870:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19882:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19893:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19878:3:16"},"nodeType":"YulFunctionCall","src":"19878:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19870:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19698:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19712:4:16","type":""}],"src":"19547:355:16"},{"body":{"nodeType":"YulBlock","src":"20008:76:16","statements":[{"nodeType":"YulAssignment","src":"20018:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20030:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20041:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20026:3:16"},"nodeType":"YulFunctionCall","src":"20026:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20018:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20060:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"20071:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20053:6:16"},"nodeType":"YulFunctionCall","src":"20053:25:16"},"nodeType":"YulExpressionStatement","src":"20053:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19977:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19988:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19999:4:16","type":""}],"src":"19907:177:16"},{"body":{"nodeType":"YulBlock","src":"20218:119:16","statements":[{"nodeType":"YulAssignment","src":"20228:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20240:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20251:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20236:3:16"},"nodeType":"YulFunctionCall","src":"20236:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20228:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20270:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"20281:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20263:6:16"},"nodeType":"YulFunctionCall","src":"20263:25:16"},"nodeType":"YulExpressionStatement","src":"20263:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20319:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20304:3:16"},"nodeType":"YulFunctionCall","src":"20304:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"20324:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20297:6:16"},"nodeType":"YulFunctionCall","src":"20297:34:16"},"nodeType":"YulExpressionStatement","src":"20297:34:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20179:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20190:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20198:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20209:4:16","type":""}],"src":"20089:248:16"},{"body":{"nodeType":"YulBlock","src":"20527:206:16","statements":[{"nodeType":"YulAssignment","src":"20537:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20549:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20560:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20545:3:16"},"nodeType":"YulFunctionCall","src":"20545:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20537:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20580:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"20591:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20573:6:16"},"nodeType":"YulFunctionCall","src":"20573:25:16"},"nodeType":"YulExpressionStatement","src":"20573:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20618:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20629:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20614:3:16"},"nodeType":"YulFunctionCall","src":"20614:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"20634:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20607:6:16"},"nodeType":"YulFunctionCall","src":"20607:34:16"},"nodeType":"YulExpressionStatement","src":"20607:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20661:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20672:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20657:3:16"},"nodeType":"YulFunctionCall","src":"20657:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"20677:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20650:6:16"},"nodeType":"YulFunctionCall","src":"20650:34:16"},"nodeType":"YulExpressionStatement","src":"20650:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20704:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20715:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20700:3:16"},"nodeType":"YulFunctionCall","src":"20700:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"20720:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20693:6:16"},"nodeType":"YulFunctionCall","src":"20693:34:16"},"nodeType":"YulExpressionStatement","src":"20693:34:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20472:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20483:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20491:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20499:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20507:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20518:4:16","type":""}],"src":"20342:391:16"},{"body":{"nodeType":"YulBlock","src":"20837:93:16","statements":[{"nodeType":"YulAssignment","src":"20847:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20859:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20870:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20855:3:16"},"nodeType":"YulFunctionCall","src":"20855:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20847:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20889:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20904:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20912:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20900:3:16"},"nodeType":"YulFunctionCall","src":"20900:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20882:6:16"},"nodeType":"YulFunctionCall","src":"20882:42:16"},"nodeType":"YulExpressionStatement","src":"20882:42:16"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20806:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20817:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20828:4:16","type":""}],"src":"20738:192:16"},{"body":{"nodeType":"YulBlock","src":"20982:220:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20992:21:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21006:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"21009:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21002:3:16"},"nodeType":"YulFunctionCall","src":"21002:11:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20996:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"21078:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21080:16:16"},"nodeType":"YulFunctionCall","src":"21080:18:16"},"nodeType":"YulExpressionStatement","src":"21080:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21036:2:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21029:6:16"},"nodeType":"YulFunctionCall","src":"21029:10:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21045:1:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21060:3:16","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"21065:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21056:3:16"},"nodeType":"YulFunctionCall","src":"21056:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"21069:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21052:3:16"},"nodeType":"YulFunctionCall","src":"21052:19:16"},{"name":"x","nodeType":"YulIdentifier","src":"21073:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21048:3:16"},"nodeType":"YulFunctionCall","src":"21048:27:16"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"21041:3:16"},"nodeType":"YulFunctionCall","src":"21041:35:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21025:3:16"},"nodeType":"YulFunctionCall","src":"21025:52:16"},"nodeType":"YulIf","src":"21022:2:16"},{"body":{"nodeType":"YulBlock","src":"21149:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21151:16:16"},"nodeType":"YulFunctionCall","src":"21151:18:16"},"nodeType":"YulExpressionStatement","src":"21151:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21116:2:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21124:1:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21135:3:16","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"21140:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21131:3:16"},"nodeType":"YulFunctionCall","src":"21131:11:16"},{"name":"x","nodeType":"YulIdentifier","src":"21144:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21127:3:16"},"nodeType":"YulFunctionCall","src":"21127:19:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21120:3:16"},"nodeType":"YulFunctionCall","src":"21120:27:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21112:3:16"},"nodeType":"YulFunctionCall","src":"21112:36:16"},"nodeType":"YulIf","src":"21109:2:16"},{"nodeType":"YulAssignment","src":"21180:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21191:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21194:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21187:3:16"},"nodeType":"YulFunctionCall","src":"21187:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21180:3:16"}]}]},"name":"checked_add_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20965:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"20968:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20974:3:16","type":""}],"src":"20935:267:16"},{"body":{"nodeType":"YulBlock","src":"21255:80:16","statements":[{"body":{"nodeType":"YulBlock","src":"21282:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21284:16:16"},"nodeType":"YulFunctionCall","src":"21284:18:16"},"nodeType":"YulExpressionStatement","src":"21284:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21271:1:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21278:1:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21274:3:16"},"nodeType":"YulFunctionCall","src":"21274:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21268:2:16"},"nodeType":"YulFunctionCall","src":"21268:13:16"},"nodeType":"YulIf","src":"21265:2:16"},{"nodeType":"YulAssignment","src":"21313:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21324:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21327:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21320:3:16"},"nodeType":"YulFunctionCall","src":"21320:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21313:3:16"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21238:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21241:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21247:3:16","type":""}],"src":"21207:128:16"},{"body":{"nodeType":"YulBlock","src":"21386:171:16","statements":[{"body":{"nodeType":"YulBlock","src":"21417:111:16","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"21438:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21445:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"21450:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21441:3:16"},"nodeType":"YulFunctionCall","src":"21441:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21431:6:16"},"nodeType":"YulFunctionCall","src":"21431:31:16"},"nodeType":"YulExpressionStatement","src":"21431:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21482:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21485:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21475:6:16"},"nodeType":"YulFunctionCall","src":"21475:15:16"},"nodeType":"YulExpressionStatement","src":"21475:15:16"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"21510:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"21513:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21503:6:16"},"nodeType":"YulFunctionCall","src":"21503:15:16"},"nodeType":"YulExpressionStatement","src":"21503:15:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21406:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21399:6:16"},"nodeType":"YulFunctionCall","src":"21399:9:16"},"nodeType":"YulIf","src":"21396:2:16"},{"nodeType":"YulAssignment","src":"21537:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21546:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21549:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21542:3:16"},"nodeType":"YulFunctionCall","src":"21542:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"21537:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21371:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21374:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"21380:1:16","type":""}],"src":"21340:217:16"},{"body":{"nodeType":"YulBlock","src":"21614:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"21673:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21675:16:16"},"nodeType":"YulFunctionCall","src":"21675:18:16"},"nodeType":"YulExpressionStatement","src":"21675:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21645:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21638:6:16"},"nodeType":"YulFunctionCall","src":"21638:9:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21631:6:16"},"nodeType":"YulFunctionCall","src":"21631:17:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21653:1:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21664:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21660:3:16"},"nodeType":"YulFunctionCall","src":"21660:6:16"},{"name":"x","nodeType":"YulIdentifier","src":"21668:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21656:3:16"},"nodeType":"YulFunctionCall","src":"21656:14:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21650:2:16"},"nodeType":"YulFunctionCall","src":"21650:21:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21627:3:16"},"nodeType":"YulFunctionCall","src":"21627:45:16"},"nodeType":"YulIf","src":"21624:2:16"},{"nodeType":"YulAssignment","src":"21704:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21719:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21722:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21715:3:16"},"nodeType":"YulFunctionCall","src":"21715:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"21704:7:16"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21593:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21596:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"21602:7:16","type":""}],"src":"21562:168:16"},{"body":{"nodeType":"YulBlock","src":"21784:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"21806:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21808:16:16"},"nodeType":"YulFunctionCall","src":"21808:18:16"},"nodeType":"YulExpressionStatement","src":"21808:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21800:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21803:1:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21797:2:16"},"nodeType":"YulFunctionCall","src":"21797:8:16"},"nodeType":"YulIf","src":"21794:2:16"},{"nodeType":"YulAssignment","src":"21837:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21849:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21852:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21845:3:16"},"nodeType":"YulFunctionCall","src":"21845:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21837:4:16"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21766:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21769:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21775:4:16","type":""}],"src":"21735:125:16"},{"body":{"nodeType":"YulBlock","src":"21918:205:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21928:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21937:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21932:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"21997:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22022:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"22027:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22018:3:16"},"nodeType":"YulFunctionCall","src":"22018:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22041:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"22046:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22037:3:16"},"nodeType":"YulFunctionCall","src":"22037:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22031:5:16"},"nodeType":"YulFunctionCall","src":"22031:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22011:6:16"},"nodeType":"YulFunctionCall","src":"22011:39:16"},"nodeType":"YulExpressionStatement","src":"22011:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21958:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"21961:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21955:2:16"},"nodeType":"YulFunctionCall","src":"21955:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21969:19:16","statements":[{"nodeType":"YulAssignment","src":"21971:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21980:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"21983:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21976:3:16"},"nodeType":"YulFunctionCall","src":"21976:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21971:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"21951:3:16","statements":[]},"src":"21947:113:16"},{"body":{"nodeType":"YulBlock","src":"22086:31:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22099:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"22104:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22095:3:16"},"nodeType":"YulFunctionCall","src":"22095:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"22113:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22088:6:16"},"nodeType":"YulFunctionCall","src":"22088:27:16"},"nodeType":"YulExpressionStatement","src":"22088:27:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22075:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"22078:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22072:2:16"},"nodeType":"YulFunctionCall","src":"22072:13:16"},"nodeType":"YulIf","src":"22069:2:16"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"21896:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"21901:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"21906:6:16","type":""}],"src":"21865:258:16"},{"body":{"nodeType":"YulBlock","src":"22175:88:16","statements":[{"body":{"nodeType":"YulBlock","src":"22206:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22208:16:16"},"nodeType":"YulFunctionCall","src":"22208:18:16"},"nodeType":"YulExpressionStatement","src":"22208:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22191:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22202:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22198:3:16"},"nodeType":"YulFunctionCall","src":"22198:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22188:2:16"},"nodeType":"YulFunctionCall","src":"22188:17:16"},"nodeType":"YulIf","src":"22185:2:16"},{"nodeType":"YulAssignment","src":"22237:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22248:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"22255:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22244:3:16"},"nodeType":"YulFunctionCall","src":"22244:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22237:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22157:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22167:3:16","type":""}],"src":"22128:135:16"},{"body":{"nodeType":"YulBlock","src":"22300:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22317:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22324:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22329:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22320:3:16"},"nodeType":"YulFunctionCall","src":"22320:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22310:6:16"},"nodeType":"YulFunctionCall","src":"22310:31:16"},"nodeType":"YulExpressionStatement","src":"22310:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22357:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22360:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22350:6:16"},"nodeType":"YulFunctionCall","src":"22350:15:16"},"nodeType":"YulExpressionStatement","src":"22350:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22381:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22384:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22374:6:16"},"nodeType":"YulFunctionCall","src":"22374:15:16"},"nodeType":"YulExpressionStatement","src":"22374:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22268:127:16"},{"body":{"nodeType":"YulBlock","src":"22432:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22449:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22456:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22461:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22452:3:16"},"nodeType":"YulFunctionCall","src":"22452:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22442:6:16"},"nodeType":"YulFunctionCall","src":"22442:31:16"},"nodeType":"YulExpressionStatement","src":"22442:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22489:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22492:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22482:6:16"},"nodeType":"YulFunctionCall","src":"22482:15:16"},"nodeType":"YulExpressionStatement","src":"22482:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22513:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22516:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22506:6:16"},"nodeType":"YulFunctionCall","src":"22506:15:16"},"nodeType":"YulExpressionStatement","src":"22506:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"22400:127:16"},{"body":{"nodeType":"YulBlock","src":"22577:86:16","statements":[{"body":{"nodeType":"YulBlock","src":"22641:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22650:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22653:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22643:6:16"},"nodeType":"YulFunctionCall","src":"22643:12:16"},"nodeType":"YulExpressionStatement","src":"22643:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22600:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22611:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22626:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"22631:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22622:3:16"},"nodeType":"YulFunctionCall","src":"22622:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"22635:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22618:3:16"},"nodeType":"YulFunctionCall","src":"22618:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22607:3:16"},"nodeType":"YulFunctionCall","src":"22607:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22597:2:16"},"nodeType":"YulFunctionCall","src":"22597:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22590:6:16"},"nodeType":"YulFunctionCall","src":"22590:50:16"},"nodeType":"YulIf","src":"22587:2:16"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22566:5:16","type":""}],"src":"22532:131:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value1)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Withdrawal_$4175_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_int128_t_int128__to_t_int128_t_int128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(15, value0))\n        mstore(add(headStart, 32), signextend(15, value1))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Invalid amount or insufficient b\")\n        mstore(add(headStart, 96), \"alance.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Cannot remove the only validator\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Stake amount must >= MIN_STAKE_A\")\n        mstore(add(headStart, 96), \"MOUNT.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Validator had been added.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 1\")\n        mstore(add(headStart, 96), \"28 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid reward per block.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Insufficient withdrawable amount\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid address.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient balance.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only keeper can upgrade contract\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"withdraw amount must >= MIN_WITH\")\n        mstore(add(headStart, 96), \"DRAW_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid limit value.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid keeper address.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Stake record not found.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in a\")\n        mstore(add(headStart, 96), \"n int256\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid withdrawal\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Validator not exist or has been \")\n        mstore(add(headStart, 96), \"removed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to send native token.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Validators are full.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid lock period.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function checked_add_t_int256(x, y) -> sum\n    {\n        let _1 := slt(x, sum)\n        if and(iszero(_1), sgt(y, sub(sub(shl(255, 1), 1), x))) { panic_error_0x11() }\n        if and(_1, slt(y, sub(shl(255, 1), x))) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"702":[{"length":32,"start":3073},{"length":32,"start":3137},{"length":32,"start":4221},{"length":32,"start":4285},{"length":32,"start":4556}],"4220":[{"length":32,"start":791},{"length":32,"start":2380}],"4222":[{"length":32,"start":1681},{"length":32,"start":9959}]},"linkReferences":{},"object":"6080604052600436106102555760003560e01c8063748747e611610139578063c2a672e0116100b6578063eaf7c9dc1161007a578063eaf7c9dc14610769578063f0544ac814610789578063f2fde38b146107a6578063f3f43703146107c6578063f489f23b146107f3578063f6a2314a1461081357600080fd5b8063c2a672e0146106d3578063d2d49c4b146106f3578063d4c6d1de14610715578063d849a50214610732578063dab316891461074957600080fd5b806394409a56116100fd57806394409a56146106275780639ced7e761461063e578063aced16611461065e578063b68578441461067f578063bb872b4a146106b357600080fd5b8063748747e6146105895780637b66394c146105a95780637ea5db42146105c95780638456cb59146105e05780638da5cb5b146105f557600080fd5b806340550a1c116101d25780634f1ef286116101965780634f1ef286146104f6578063522abc401461050957806352d1902d1461052957806357525cbc1461053e5780635c975abb1461055c578063715018a61461057457600080fd5b806340550a1c1461044a57806340a141ff1461047a57806345f7b8f41461049a578063485cc955146104b65780634d238c8e146104d657600080fd5b806329451893116102195780632945189314610339578063340c5a25146103905780633659cfe6146103da5780633f4ba83a146103fa5780633fd8b02f1461040f57600080fd5b80630d8e6e2c1461029657806319d41774146102b957806324e770d0146102d957806326476204146102f057806327ed71881461030557600080fd5b366102915760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b3480156102a257600080fd5b5060015b6040519081526020015b60405180910390f35b3480156102c557600080fd5b506102a66102d436600461310c565b610881565b3480156102e557600080fd5b506102a66101395481565b6103036102fe366004612fce565b610942565b005b34801561031157600080fd5b506102a67f000000000000000000000000000000000000000000000000000000000000000081565b34801561034557600080fd5b50610376610354366004612fce565b61013660205260009081526040902054600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016102b0565b34801561039c57600080fd5b506103c56103ab366004612fce565b610134602052600090815260409020805460019091015482565b604080519283526020830191909152016102b0565b3480156103e657600080fd5b506103036103f5366004612fce565b610bf6565b34801561040657600080fd5b50610303610cd6565b34801561041b57600080fd5b506101375461043590640100000000900463ffffffff1681565b60405163ffffffff90911681526020016102b0565b34801561045657600080fd5b5061046a610465366004612fce565b610ce8565b60405190151581526020016102b0565b34801561048657600080fd5b50610303610495366004612fce565b610cf6565b3480156104a657600080fd5b506102a6670de0b6b3a764000081565b3480156104c257600080fd5b506103036104d1366004613015565b610eeb565b3480156104e257600080fd5b506103036104f1366004612fce565b611061565b61030361050436600461304d565b611072565b34801561051557600080fd5b5061030361052436600461314e565b611143565b34801561053557600080fd5b506102a66111bf565b34801561054a57600080fd5b50610137546104359063ffffffff1681565b34801561056857600080fd5b5060655460ff1661046a565b34801561058057600080fd5b50610303611272565b34801561059557600080fd5b506103036105a4366004612fce565b611284565b3480156105b557600080fd5b506103036105c4366004612fea565b611305565b3480156105d557600080fd5b506102a66101385481565b3480156105ec57600080fd5b50610303611310565b34801561060157600080fd5b506097546001600160a01b03165b6040516001600160a01b0390911681526020016102b0565b34801561063357600080fd5b506102a661013a5481565b34801561064a57600080fd5b506102a6610659366004613015565b611320565b34801561066a57600080fd5b5061012d5461060f906001600160a01b031681565b34801561068b57600080fd5b506102a67f000000000000000000000000000000000000000000000000000000000000000081565b3480156106bf57600080fd5b506103036106ce366004613136565b611466565b3480156106df57600080fd5b506103036106ee36600461310c565b6114d1565b3480156106ff57600080fd5b50610708611801565b6040516102b0919061318e565b34801561072157600080fd5b5061013054610131546103c5919082565b34801561073e57600080fd5b506102a661013b5481565b34801561075557600080fd5b506102a6610764366004612fce565b611813565b34801561077557600080fd5b50610303610784366004613136565b61181f565b34801561079557600080fd5b5061013254610133546103c5919082565b3480156107b257600080fd5b506103036107c1366004612fce565b6119df565b3480156107d257600080fd5b506107e66107e1366004612fce565b611a55565b6040516102b091906131db565b3480156107ff57600080fd5b5061030361080e36600461314e565b611b78565b34801561081f57600080fd5b5061086161082e366004613015565b61013560209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016102b0565b6001600160a01b03821660009081526101366020526040812081806108b88354600f81810b810b600160801b909204810b900b0390565b905060005b81811015610935576000806108e66108d58785611bd9565b602081901c9163ffffffff90911690565b610137549193509150889061090990640100000000900463ffffffff16836133c9565b1115610916575050610935565b61092082866133c9565b945050508061092e90613463565b90506108bd565b5090925050505b92915050565b61094a611c54565b7f00000000000000000000000000000000000000000000000000000000000000003410156109ce5760405162461bcd60e51b815260206004820152602660248201527f5374616b6520616d6f756e74206d757374203e3d204d494e5f5354414b455f4160448201526526a7aaa72a1760d11b60648201526084015b60405180910390fd5b6109d781610ce8565b6109f35760405162461bcd60e51b81526004016109c590613340565b6000806109fe611c9a565b6001600160a01b03851660008181526000805160206134c083398151915260209081526040808320815160808082018452825482526001808401548387015260028085015484870152600394850154606080860191909152988852610135875285882033895287529685902085519283018652805483529081015495820195909552948401549285019290925291909101549282019290925292945090925090610aa88483611d3e565b610ab28382611d3e565b3482600001818151610ac491906133c9565b905250805134908290610ad89083906133c9565b905250610ae58483611d93565b610aef8382611d93565b4360608084018281529083019182526001600160a01b03871660009081526000805160206134c08339815191526020908152604080832087518155828801516001808301919091558289015160028084019190915595516003928301556101358452828520338652845282852088518155938801519084015590860151938201939093559251929091019190915561013b8054349290610b909084906133c9565b925050819055503461013a6000828254610baa91906133c9565b90915550506040513481526001600160a01b0386169033907f99039fcf0a98f484616c5196ee8b2ecfa971babf0b519848289ea4db381f85f79060200160405180910390a35050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610c3f5760405162461bcd60e51b81526004016109c59061325d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c886000805160206134e0833981519152546001600160a01b031690565b6001600160a01b031614610cae5760405162461bcd60e51b81526004016109c5906132a9565b610cb781611dbd565b60408051600080825260208201909252610cd391839190611e22565b50565b610cde611f9c565b610ce6611ff6565b565b600061093c61012e83612048565b610cfe611f9c565b6001610d0b61012e61206d565b11610d625760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f742072656d6f766520746865206f6e6c792076616c696461746f726044820152601760f91b60648201526084016109c5565b610d6b81610ce8565b610d875760405162461bcd60e51b81526004016109c590613340565b600080610d92611c9a565b6001600160a01b03851660009081526000805160206134c0833981519152602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460608201529193509150610df98382611d3e565b610e038382611d93565b43606082019081526001600160a01b03851660009081526000805160206134c08339815191526020908152604091829020845181559084015160018201559083015160028201559051600390910155610e5e61012e85612077565b506001600160a01b03841660009081526101346020908152604082208451815590840151600190910155815161013b805491929091610e9e908490613420565b9091555050604080516001600160a01b0386168152600060208201527fd2b4a3ae4917617aaa5e6caa5541a3331944d66baa187ef6c350f1ce4012d819910160405180910390a150505050565b600054610100900460ff1615808015610f0b5750600054600160ff909116105b80610f255750303b158015610f25575060005460ff166001145b610f885760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109c5565b6000805460ff191660011790558015610fab576000805461ff0019166101001790555b610fb361208c565b610fbb6120bb565b610fc4836120ea565b610fcc61213c565b61012d80546001600160a01b03191633179055610137805463ffffffff19166015179055611001674563918244f40000612163565b61100d62093a806121c9565b61101682612220565b801561105c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b611069611f9c565b610cd381612220565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156110bb5760405162461bcd60e51b81526004016109c59061325d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166111046000805160206134e0833981519152546001600160a01b031690565b6001600160a01b03161461112a5760405162461bcd60e51b81526004016109c5906132a9565b61113382611dbd565b61113f82826001611e22565b5050565b61114b611f9c565b61115661012e61206d565b8163ffffffff1610156111a25760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103634b6b4ba103b30b63ab29760611b60448201526064016109c5565b610137805463ffffffff191663ffffffff92909216919091179055565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461125f5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016109c5565b506000805160206134e083398151915290565b61127a611f9c565b610ce660006120ea565b61128c611f9c565b6001600160a01b0381166112e25760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206b656570657220616464726573732e00000000000000000060448201526064016109c5565b61012d80546001600160a01b0319166001600160a01b0392909216919091179055565b61113f33838361238a565b611318611f9c565b610ce661253e565b6001600160a01b03828116600081815261013560209081526040808320948616835293815283822084516080810186528154815260018201548184015260028201548187015260039091015460608201528451808601909552828552908401829052909290916113dc5761139384610ce8565b156113d05750604080518082019091526101305481526101315460208201526101385461013b546113c591839161257b565b506113d08183611d3e565b5060400151905061093c565b6113e585610ce8565b1561141d5750604080518082019091526101325481526101335460208201526101395461013b5461141791839161257b565b50611450565b506001600160a01b0384166000908152610134602090815260409182902082518084019093528054835260010154908201525b61145a8183611d3e565b50604001519392505050565b61146e611f9c565b600081116114be5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207265776172642070657220626c6f636b2e0000000000000060448201526064016109c5565b6114c6611c9a565b5050610cd381612163565b600260015414156115245760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109c5565b6002600155611531611c54565b60008061153c611c9a565b6001600160a01b03861660008181526000805160206134c0833981519152602090815260408083208151608080820184528254825260018084015483870152600280850154848701526003948501546060808601919091528989526101358852868920338a5288529786902086519384018752805484529182015496830196909652948501549381019390935292015492810192909252939550919350158015906115ea5750606081015115155b6116365760405162461bcd60e51b815260206004820152601760248201527f5374616b65207265636f7264206e6f7420666f756e642e00000000000000000060448201526064016109c5565b60008061164288610ce8565b1561169d576116518685611d3e565b61165b8584611d3e565b6116668484896125fe565b90925090506116758685611d93565b61167f8584611d93565b8161013b60008282546116929190613420565b909155506116f49050565b6001600160a01b03881660009081526101346020908152604091829020825180840190935280548352600101549082015294506116da8584611d3e565b6116e58484896125fe565b90925090506116f48584611d93565b4360608086018281529085019182526001600160a01b038a1660009081526000805160206134c08339815191526020908152604080832089518155828a0151600180830191909155828b01516002808401919091559551600392830155610135845282852033865284528285208a518155938a01519084015590880151938201939093559251929091019190915561013a8054849290611795908490613420565b909155505060408051838152602081018390526001600160a01b038a169133917f18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef910160405180910390a36117f3336117ee83856133c9565b6126e5565b505060018055505050505050565b606061180e61012e61281d565b905090565b600061093c8242610881565b600260015414156118725760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109c5565b600260015561187f611c54565b6000611889611c9a565b503360008181526000805160206134c0833981519152602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460608201529192506118e590610ce8565b156118fe576118f48282611d3e565b6118fe8282611d93565b600083118015611912575080604001518311155b61196e5760405162461bcd60e51b815260206004820152602760248201527f496e76616c696420616d6f756e74206f7220696e73756666696369656e74206260448201526630b630b731b29760c91b60648201526084016109c5565b82816040018181516119809190613420565b90525043606082019081523360008181526000805160206134c083398151915260209081526040918290208551815590850151600182015590840151600282015591516003909201919091556119d690846126e5565b50506001805550565b6119e7611f9c565b6001600160a01b038116611a4c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c5565b610cd3816120ea565b6001600160a01b038116600090815261013660205260408120606091611a8d8254600f81810b810b600160801b909204810b900b0390565b90508067ffffffffffffffff811115611ab657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611afb57816020015b6040805180820190915260008082526020820152815260200190600190039081611ad45790505b50925060005b81811015611b7057600080611b196108d58685611bd9565b91509150604051806040016040528083815260200182815250868481518110611b5257634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505080611b6990613463565b9050611b01565b505050919050565b611b80611f9c565b620151808163ffffffff161015611bd05760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103637b1b5903832b934b7b21760611b60448201526064016109c5565b610cd3816121c9565b600080611c00611be88461282a565b8554611bfb9190600f90810b900b613388565b612898565b8454909150600160801b9004600f90810b810b9082900b12611c3557604051632d0483c560e21b815260040160405180910390fd5b600f90810b900b60009081526001939093016020525050604090205490565b60655460ff1615610ce65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109c5565b60408051808201909152600080825260208201526040805180820190915260008082526020820152604080518082019091526101305481526101315460208201526101385461013b54611cee92919061257b565b604080518082019091526101325481526101335460208201526101395461013b54929450611d1b9261257b565b825161013055602080840151610131558151610132558101516101335591929050565b6060810151611d4b575050565b602081015182518251670de0b6b3a764000091611d6791613401565b611d7191906133e1565b611d7b9190613420565b81604001818151611d8c91906133c9565b9052505050565b81518151670de0b6b3a764000091611daa91613401565b611db491906133e1565b60209091015250565b61012d546001600160a01b03163314610cd35760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206b65657065722063616e207570677261646520636f6e74726163746044820152601760f91b60648201526084016109c5565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611e555761105c83612927565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e8e57600080fd5b505afa925050508015611ebe575060408051601f3d908101601f19168201909252611ebb9181019061311e565b60015b611f215760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016109c5565b6000805160206134e08339815191528114611f905760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016109c5565b5061105c8383836129c3565b6097546001600160a01b03163314610ce65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c5565b611ffe6129ee565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b600061093c825490565b6000612066836001600160a01b038416612a37565b600054610100900460ff166120b35760405162461bcd60e51b81526004016109c5906132f5565b610ce6612b54565b600054610100900460ff166120e25760405162461bcd60e51b81526004016109c5906132f5565b610ce6612b81565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ce65760405162461bcd60e51b81526004016109c5906132f5565b61216e6005826133e1565b61013881905561217e9082613420565b610139819055610138546040517f79a5349732f93288abbb68e251c3dfc325bf3ee6fde7786d919155d39733e0f5926121be928252602082015260400190565b60405180910390a150565b610137805467ffffffff00000000191664010000000063ffffffff8416908102919091179091556040519081527f401dae40edac291ec00ad4f9e16968c6c86b73fcd6faad7e35a55a27fa64d048906020016121be565b6001600160a01b0381166122695760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21030b2323932b9b99760811b60448201526064016109c5565b6101375463ffffffff1661227e61012e61206d565b106122c25760405162461bcd60e51b81526020600482015260146024820152732b30b634b230ba37b9399030b93290333ab6361760611b60448201526064016109c5565b6122cb81610ce8565b1580156122f257506001600160a01b03811660009081526101346020526040902060010154155b61233e5760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220686164206265656e2061646465642e0000000000000060448201526064016109c5565b61234a61012e82612bb4565b50604080516001600160a01b0383168152600160208201527fd2b4a3ae4917617aaa5e6caa5541a3331944d66baa187ef6c350f1ce4012d81991016121be565b6001600160a01b038316600090815261013660205260408120905b8154600f81810b810b600160801b909204810b900b1315612487576000806123cf6108d585612bc9565b61013754919350915042906123f290640100000000900463ffffffff16836133c9565b11156123ff575050612487565b61240982846133c9565b925061241484612c27565b50848311156124805761247661243361242d8786613420565b83612caa565b85908154600f90810b60001901810b9081900b600090815260018401602052604090209190915581546001600160801b0319166001600160801b03909116179055565b8492505050612487565b50506123a5565b8281146124e05760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e7420776974686472617761626c6520616d6f756e746044820152601760f91b60648201526084016109c5565b836001600160a01b0316856001600160a01b03167fb00382203b46c3b6ad0a2d7af0268e334bd9406256a7c7ba8f7fc8bc47f8cde98560405161252591815260200190565b60405180910390a36125378484612d13565b5050505050565b612546611c54565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861202b3390565b6040805180820190915260008082526020820152816125a1575043602084015282612066565b6000838560200151436125b49190613420565b6125be9190613401565b9050826125d3670de0b6b3a764000083613401565b6125dd91906133e1565b855186906125ec9083906133c9565b90525050436020850152509192915050565b60008060008460400151856000015161261791906133c9565b9050808411156126615760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016109c5565b60408501519150836126755780935061269f565b81841161269f57838560400181815161268e9190613420565b905250600092508391506126dd9050565b600060408601526126b08285613420565b925082866000018181516126c49190613420565b9052508451839086906126d8908390613420565b905250505b935093915050565b7f00000000000000000000000000000000000000000000000000000000000000008110156127695760405162461bcd60e51b815260206004820152602b60248201527f776974686472617720616d6f756e74206d757374203e3d204d494e5f5749544860448201526a11149055d7d05353d5539560aa1b60648201526084016109c5565b6127d66127768242612caa565b6001600160a01b038416600090815261013660205260409020908154600160801b90819004600f90810b80820b820b6000908152600180870160205260409091209490945584549301900b6001600160801b039081169091029116179055565b816001600160a01b03167f6d92f7d3303f995bf21956bb0c51b388bae348eaf45c23debd2cfa3fcd9ec6468260405161281191815260200190565b60405180910390a25050565b6060600061206683612db6565b60006001600160ff1b038211156128945760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016109c5565b5090565b60006f7fffffffffffffffffffffffffffffff1982128015906128cb57506f7fffffffffffffffffffffffffffffff8213155b6128945760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016109c5565b6001600160a01b0381163b6129945760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016109c5565b6000805160206134e083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6129cc83612e12565b6000825111806129d95750805b1561105c576129e88383612e52565b50505050565b60655460ff16610ce65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109c5565b60008181526001830160205260408120548015612b4a576000612a5b600183613420565b8554909150600090612a6f90600190613420565b9050818114612af0576000866000018281548110612a9d57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110612ace57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612b0f57634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061093c565b600091505061093c565b600054610100900460ff16612b7b5760405162461bcd60e51b81526004016109c5906132f5565b60018055565b600054610100900460ff16612ba85760405162461bcd60e51b81526004016109c5906132f5565b6065805460ff19169055565b6000612066836001600160a01b038416612f46565b6000612be88254600f81810b810b600160801b909204810b900b131590565b15612c0657604051631ed9509560e11b815260040160405180910390fd5b508054600f90810b810b900b60009081526001909101602052604090205490565b6000612c468254600f81810b810b600160801b909204810b900b131590565b15612c6457604051631ed9509560e11b815260040160405180910390fd5b508054600f90810b80820b820b600090815260018085016020526040822080549290558454920190920b6001600160801b03166001600160801b03199091161790915590565b60006001600160e01b038311801590612cc7575063ffffffff8211155b612d085760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081dda5d1a191c985dd85b60721b60448201526064016109c5565b5060209190911b1790565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d60576040519150601f19603f3d011682016040523d82523d6000602084013e612d65565b606091505b505090508061105c5760405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f2073656e64206e617469766520746f6b656e2e0000000060448201526064016109c5565b606081600001805480602002602001604051908101604052809291908181526020018280548015612e0657602002820191906000526020600020905b815481526020019060010190808311612df2575b50505050509050919050565b612e1b81612927565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b612eba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016109c5565b600080846001600160a01b031684604051612ed59190613172565b600060405180830381855af49150503d8060008114612f10576040519150601f19603f3d011682016040523d82523d6000602084013e612f15565b606091505b5091509150612f3d828260405180606001604052806027815260200161350060279139612f95565b95945050505050565b6000818152600183016020526040812054612f8d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561093c565b50600061093c565b60608315612fa4575081612066565b825115612fb45782518084602001fd5b8160405162461bcd60e51b81526004016109c5919061322a565b600060208284031215612fdf578081fd5b8135612066816134aa565b60008060408385031215612ffc578081fd5b8235613007816134aa565b946020939093013593505050565b60008060408385031215613027578182fd5b8235613032816134aa565b91506020830135613042816134aa565b809150509250929050565b6000806040838503121561305f578182fd5b823561306a816134aa565b9150602083013567ffffffffffffffff80821115613086578283fd5b818501915085601f830112613099578283fd5b8135818111156130ab576130ab613494565b604051601f8201601f19908116603f011681019083821181831017156130d3576130d3613494565b816040528281528860208487010111156130eb578586fd5b82602086016020830137856020848301015280955050505050509250929050565b60008060408385031215612ffc578182fd5b60006020828403121561312f578081fd5b5051919050565b600060208284031215613147578081fd5b5035919050565b60006020828403121561315f578081fd5b813563ffffffff81168114612066578182fd5b60008251613184818460208701613437565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156131cf5783516001600160a01b0316835292840192918401916001016131aa565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561321d578151805185528601518685015292840192908501906001016131f8565b5091979650505050505050565b6020815260008251806020840152613249816040850160208701613437565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526028908201527f56616c696461746f72206e6f74206578697374206f7220686173206265656e206040820152673932b6b7bb32b21760c11b606082015260800190565b600080821280156001600160ff1b03849003851316156133aa576133aa61347e565b600160ff1b83900384128116156133c3576133c361347e565b50500190565b600082198211156133dc576133dc61347e565b500190565b6000826133fc57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561341b5761341b61347e565b500290565b6000828210156134325761343261347e565b500390565b60005b8381101561345257818101518382015260200161343a565b838111156129e85750506000910152565b60006000198214156134775761347761347e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610cd357600080fdfe5b20f40cb5e9e634a90df9a72b516c11cc52281a4d1b7b67e672e2fe544ff22f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e67deb715580c2eb88646f83977211bd17a8cf09a5456a2a72870d6d984db09564736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x748747E6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC2A672E0 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xEAF7C9DC GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEAF7C9DC EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xF0544AC8 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0xF489F23B EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xF6A2314A EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2A672E0 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0xD4C6D1DE EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0xD849A502 EQ PUSH2 0x732 JUMPI DUP1 PUSH4 0xDAB31689 EQ PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x94409A56 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x94409A56 EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x9CED7E76 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xB6857844 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xBB872B4A EQ PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x748747E6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x7B66394C EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x7EA5DB42 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x522ABC40 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x57525CBC EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x40A141FF EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x45F7B8F4 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x4D238C8E EQ PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29451893 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x29451893 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x340C5A25 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x19D41774 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x24E770D0 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x26476204 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x27ED7188 EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x291 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x139 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xCD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0x465 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x524 CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x11BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x46A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x138 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH2 0x60F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x1466 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6EE CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x708 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x318E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 SLOAD PUSH2 0x131 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1813 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 SLOAD PUSH2 0x133 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x7C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x19DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E6 PUSH2 0x7E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x31DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x80E CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1B78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x861 PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 PUSH2 0x8B8 DUP4 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 PUSH2 0x8E6 PUSH2 0x8D5 DUP8 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x20 DUP2 SWAP1 SHR SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP9 SWAP1 PUSH2 0x909 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x916 JUMPI POP POP PUSH2 0x935 JUMP JUMPDEST PUSH2 0x920 DUP3 DUP7 PUSH2 0x33C9 JUMP JUMPDEST SWAP5 POP POP POP DUP1 PUSH2 0x92E SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BD JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x94A PUSH2 0x1C54 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374203E3D204D494E5F5354414B455F41 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x26A7AAA72A17 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FE PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP9 DUP9 MSTORE PUSH2 0x135 DUP8 MSTORE DUP6 DUP9 KECCAK256 CALLER DUP10 MSTORE DUP8 MSTORE SWAP7 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP3 DUP4 ADD DUP7 MSTORE DUP1 SLOAD DUP4 MSTORE SWAP1 DUP2 ADD SLOAD SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP5 ADD SLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0xAA8 DUP5 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD CALLVALUE SWAP1 DUP3 SWAP1 PUSH2 0xAD8 SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xAE5 DUP5 DUP4 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0xAEF DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP5 ADD DUP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 MLOAD DUP2 SSTORE DUP3 DUP9 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP10 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 MLOAD DUP2 SSTORE SWAP4 DUP9 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP7 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13B DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0xB90 SWAP1 DUP5 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH2 0x13A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x99039FCF0A98F484616C5196EE8B2ECFA971BABF0B519848289EA4DB381F85F7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC88 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0xCB7 DUP2 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x1FF6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C PUSH2 0x12E DUP4 PUSH2 0x2048 JUMP JUMPDEST PUSH2 0xCFE PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD0B PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST GT PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656D6F766520746865206F6E6C792076616C696461746F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD92 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH2 0xDF9 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xE03 DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0xE5E PUSH2 0x12E DUP6 PUSH2 0x2077 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP2 MLOAD PUSH2 0x13B DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE9E SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF0B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xF25 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xFB3 PUSH2 0x208C JUMP JUMPDEST PUSH2 0xFBB PUSH2 0x20BB JUMP JUMPDEST PUSH2 0xFC4 DUP4 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0xFCC PUSH2 0x213C JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0x15 OR SWAP1 SSTORE PUSH2 0x1001 PUSH8 0x4563918244F40000 PUSH2 0x2163 JUMP JUMPDEST PUSH2 0x100D PUSH3 0x93A80 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x1016 DUP3 PUSH2 0x2220 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x2220 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1104 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x112A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x1133 DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x113F DUP3 DUP3 PUSH1 0x1 PUSH2 0x1E22 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x114B PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x1156 PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103634B6B4BA103B30B63AB297 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH1 0x0 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x128C PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206B656570657220616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x113F CALLER DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x80 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP3 DUP6 MSTORE SWAP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x13DC JUMPI PUSH2 0x1393 DUP5 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x13C5 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x13D0 DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH2 0x93C JUMP JUMPDEST PUSH2 0x13E5 DUP6 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x141D JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1417 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x1450 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE JUMPDEST PUSH2 0x145A DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x146E PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265776172642070657220626C6F636B2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x14C6 PUSH2 0x1C9A JUMP JUMPDEST POP POP PUSH2 0xCD3 DUP2 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1531 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x153C PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 DUP10 MSTORE PUSH2 0x135 DUP9 MSTORE DUP7 DUP10 KECCAK256 CALLER DUP11 MSTORE DUP9 MSTORE SWAP8 DUP7 SWAP1 KECCAK256 DUP7 MLOAD SWAP4 DUP5 ADD DUP8 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD SLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15EA JUMPI POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO JUMPDEST PUSH2 0x1636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65207265636F7264206E6F7420666F756E642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1642 DUP9 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x169D JUMPI PUSH2 0x1651 DUP7 DUP6 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x165B DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1666 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1675 DUP7 DUP6 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x167F DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST DUP2 PUSH2 0x13B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16F4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE SWAP5 POP PUSH2 0x16DA DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x16E5 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x16F4 DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE SWAP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 MLOAD DUP2 SSTORE DUP3 DUP11 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP12 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 MLOAD DUP2 SSTORE SWAP4 DUP11 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP9 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13A DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1795 SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 CALLER SWAP2 PUSH32 0x18EDD09E80386CD99DF397E2E0D87D2BB259423EAE08645E776321A36FE680EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17F3 CALLER PUSH2 0x17EE DUP4 DUP6 PUSH2 0x33C9 JUMP JUMPDEST PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x180E PUSH2 0x12E PUSH2 0x281D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 TIMESTAMP PUSH2 0x881 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x187F PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1889 PUSH2 0x1C9A JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x18E5 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18F4 DUP3 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x18FE DUP3 DUP3 PUSH2 0x1D93 JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1912 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0x196E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74206F7220696E73756666696369656E742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x30B630B731B297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1980 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x19D6 SWAP1 DUP5 PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x1A8D DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AFB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1AD4 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B70 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1B19 PUSH2 0x8D5 DUP7 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 PUSH2 0x1B69 SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B01 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B80 PUSH2 0x1F9C JUMP JUMPDEST PUSH3 0x15180 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103637B1B5903832B934B7B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C00 PUSH2 0x1BE8 DUP5 PUSH2 0x282A JUMP JUMPDEST DUP6 SLOAD PUSH2 0x1BFB SWAP2 SWAP1 PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH2 0x3388 JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1CEE SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD SWAP3 SWAP5 POP PUSH2 0x1D1B SWAP3 PUSH2 0x257B JUMP JUMPDEST DUP3 MLOAD PUSH2 0x130 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH2 0x131 SSTORE DUP2 MLOAD PUSH2 0x132 SSTORE DUP2 ADD MLOAD PUSH2 0x133 SSTORE SWAP2 SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1D4B JUMPI POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MLOAD DUP3 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1D67 SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1D71 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1D8C SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1DAA SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206B65657065722063616E207570677261646520636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E55 JUMPI PUSH2 0x105C DUP4 PUSH2 0x2927 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EBE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1EBB SWAP2 DUP2 ADD SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH2 0x105C DUP4 DUP4 DUP4 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x1FFE PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B81 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x216E PUSH1 0x5 DUP3 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x138 DUP2 SWAP1 SSTORE PUSH2 0x217E SWAP1 DUP3 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x139 DUP2 SWAP1 SSTORE PUSH2 0x138 SLOAD PUSH1 0x40 MLOAD PUSH32 0x79A5349732F93288ABBB68E251C3DFC325BF3EE6FDE7786D919155D39733E0F5 SWAP3 PUSH2 0x21BE SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x401DAE40EDAC291EC00AD4F9E16968C6C86B73FCD6FAAD7E35A55A27FA64D048 SWAP1 PUSH1 0x20 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B21030B2323932B9B997 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x227E PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST LT PUSH2 0x22C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2B30B634B230BA37B9399030B93290333AB63617 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0xCE8 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x22F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST PUSH2 0x233E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220686164206265656E2061646465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x234A PUSH2 0x12E DUP3 PUSH2 0x2BB4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 DUP1 PUSH2 0x23CF PUSH2 0x8D5 DUP6 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP TIMESTAMP SWAP1 PUSH2 0x23F2 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x23FF JUMPI POP POP PUSH2 0x2487 JUMP JUMPDEST PUSH2 0x2409 DUP3 DUP5 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2414 DUP5 PUSH2 0x2C27 JUMP JUMPDEST POP DUP5 DUP4 GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x2476 PUSH2 0x2433 PUSH2 0x242D DUP8 DUP7 PUSH2 0x3420 JUMP JUMPDEST DUP4 PUSH2 0x2CAA JUMP JUMPDEST DUP6 SWAP1 DUP2 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND PUSH1 0x0 NOT ADD DUP2 SIGNEXTEND SWAP1 DUP2 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SWAP3 POP POP POP PUSH2 0x2487 JUMP JUMPDEST POP POP PUSH2 0x23A5 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x24E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420776974686472617761626C6520616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB00382203B46C3B6AD0A2D7AF0268E334BD9406256A7C7BA8F7FC8BC47F8CDE9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2525 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2537 DUP5 DUP5 PUSH2 0x2D13 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2546 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x202B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH2 0x25A1 JUMPI POP NUMBER PUSH1 0x20 DUP5 ADD MSTORE DUP3 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x25B4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x3401 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x25D3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x25DD SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST DUP6 MLOAD DUP7 SWAP1 PUSH2 0x25EC SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP NUMBER PUSH1 0x20 DUP6 ADD MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0x2661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP DUP4 PUSH2 0x2675 JUMPI DUP1 SWAP4 POP PUSH2 0x269F JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0x269F JUMPI DUP4 DUP6 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 SWAP3 POP DUP4 SWAP2 POP PUSH2 0x26DD SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x26B0 DUP3 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP3 POP DUP3 DUP7 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x26C4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP DUP5 MLOAD DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x26D8 SWAP1 DUP4 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x2769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617720616D6F756E74206D757374203E3D204D494E5F57495448 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x11149055D7D05353D55395 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x27D6 PUSH2 0x2776 DUP3 TIMESTAMP PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP5 SLOAD SWAP4 ADD SWAP1 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MUL SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6D92F7D3303F995BF21956BB0C51B388BAE348EAF45C23DEBD2CFA3FCD9EC646 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2811 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x28CB JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x29CC DUP4 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x29D9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x105C JUMPI PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2E52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2B4A JUMPI PUSH1 0x0 PUSH2 0x2A5B PUSH1 0x1 DUP4 PUSH2 0x3420 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2A6F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2AF0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2ACE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2B0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2F46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C46 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP5 SLOAD SWAP3 ADD SWAP1 SWAP3 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x2CC7 JUMPI POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO JUMPDEST PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081DDA5D1A191C985DD85B PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64206E617469766520746F6B656E2E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2DF2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1B DUP2 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE PUSH2 0x2EBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2ED5 SWAP2 SWAP1 PUSH2 0x3172 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F10 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F3D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3500 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2F95 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2F8D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2FA4 JUMPI POP DUP2 PUSH2 0x2066 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2FB4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FDF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2066 DUP2 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3007 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3027 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3032 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3042 DUP2 PUSH2 0x34AA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x305F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x306A DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3086 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3099 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30AB JUMPI PUSH2 0x30AB PUSH2 0x3494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x30D3 JUMPI PUSH2 0x30D3 PUSH2 0x3494 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x30EB JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x312F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3147 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2066 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3184 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31CF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31AA JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x31F8 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3249 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206E6F74206578697374206F7220686173206265656E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3932B6B7BB32B217 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x33AA JUMPI PUSH2 0x33AA PUSH2 0x347E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x33C3 JUMPI PUSH2 0x33C3 PUSH2 0x347E JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x33DC JUMPI PUSH2 0x33DC PUSH2 0x347E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x33FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x341B JUMPI PUSH2 0x341B PUSH2 0x347E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3432 JUMPI PUSH2 0x3432 PUSH2 0x347E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3452 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x343A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29E8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3477 JUMPI PUSH2 0x3477 PUSH2 0x347E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID JUMPDEST KECCAK256 DELEGATECALL 0xC 0xB5 0xE9 0xE6 CALLVALUE 0xA9 0xD 0xF9 0xA7 0x2B MLOAD PUSH13 0x11CC52281A4D1B7B67E672E2FE SLOAD 0x4F CALLCODE 0x2F CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A2646970667358221220E6 PUSH30 0xEB715580C2EB88646F83977211BD17A8CF09A5456A2A72870D6D984DB095 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"588:15521:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3564:31;;3585:9;5940:25:16;;3573:10:14;;3564:31;;5928:2:16;5913:18;3564:31:14;;;;;;;588:15521;;;;;3608:79;;;;;;;;;;-1:-1:-1;3679:1:14;3608:79;;;5940:25:16;;;5928:2;5913:18;3608:79:14;;;;;;;;10564:550;;;;;;;;;;-1:-1:-1;10564:550:14;;;;;:::i;:::-;;:::i;1755:35::-;;;;;;;;;;;;;;;;6532:1049;;;;;;:::i;:::-;;:::i;:::-;;1918:41;;;;;;;;;;;;;;;1568:70;;;;;;;;;;-1:-1:-1;1568:70:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;1568:70:14;;;;;;;;;;6175:2:16;6164:22;;;6146:41;;6223:22;;;;6218:2;6203:18;;6196:50;6119:18;1568:70:14;6101:151:16;1401:45:14;;;;;;;;;;-1:-1:-1;1401:45:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20263:25:16;;;20319:2;20304:18;;20297:34;;;;20236:18;1401:45:14;20218:119:16;3315:197:5;;;;;;;;;;-1:-1:-1;3315:197:5;;;;;:::i;:::-;;:::i;3875:65:14:-;;;;;;;;;;;;;:::i;1680:24::-;;;;;;;;;;-1:-1:-1;1680:24:14;;;;;;;;;;;;;;20912:10:16;20900:23;;;20882:42;;20870:2;20855:18;1680:24:14;20837:93:16;11120:128:14;;;;;;;;;;-1:-1:-1;11120:128:14;;;;;:::i;:::-;;:::i;:::-;;;5767:14:16;;5760:22;5742:41;;5730:2;5715:18;11120:128:14;5697:92:16;4876:722:14;;;;;;;;;;-1:-1:-1;4876:722:14;;;;;:::i;:::-;;:::i;1872:39::-;;;;;;;;;;;;1907:4;1872:39;;2970:546;;;;;;;;;;-1:-1:-1;2970:546:14;;;;;:::i;:::-;;:::i;4741:101::-;;;;;;;;;;-1:-1:-1;4741:101:14;;;;;:::i;:::-;;:::i;3761:222:5:-;;;;;;:::i;:::-;;:::i;4543:171:14:-;;;;;;;;;;-1:-1:-1;4543:171:14;;;;;:::i;:::-;;:::i;3004:131:5:-;;;;;;;;;;;;;:::i;1645:28:14:-;;;;;;;;;;-1:-1:-1;1645:28:14;;;;;;;;1858:84:6;;;;;;;;;;-1:-1:-1;1928:7:6;;;;1858:84;;2071:101:0;;;;;;;;;;;;;:::i;4339:161:14:-;;;;;;;;;;-1:-1:-1;4339:161:14;;;;;:::i;:::-;;:::i;8990:145::-;;;;;;;;;;-1:-1:-1;8990:145:14;;;;;:::i;:::-;;:::i;1711:38::-;;;;;;;;;;;;;;;;3808:61;;;;;;;;;;;;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1441:85;;;-1:-1:-1;;;;;3801:32:16;;;3783:51;;3771:2;3756:18;1441:85:0;3738:102:16;1797:31:14;;;;;;;;;;;;;;;;9141:784;;;;;;;;;;-1:-1:-1;9141:784:14;;;;;:::i;:::-;;:::i;1263:21::-;;;;;;;;;;-1:-1:-1;1263:21:14;;;;-1:-1:-1;;;;;1263:21:14;;;1965:44;;;;;;;;;;;;;;;3985:187;;;;;;;;;;-1:-1:-1;3985:187:14;;;;;:::i;:::-;;:::i;7638:1346::-;;;;;;;;;;-1:-1:-1;7638:1346:14;;;;;:::i;:::-;;:::i;11254:111::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1342:25::-;;;;;;;;;;-1:-1:-1;1342:25:14;;;;;;;;;1834:32;;;;;;;;;;;;;;;;10411:147;;;;;;;;;;-1:-1:-1;10411:147:14;;;;;:::i;:::-;;:::i;5757:627::-;;;;;;;;;;-1:-1:-1;5757:627:14;;;;;:::i;:::-;;:::i;1373:22::-;;;;;;;;;;-1:-1:-1;1373:22:14;;;;;;;;;2321:198:0;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;9931:474:14:-;;;;;;;;;;-1:-1:-1;9931:474:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4178:155::-;;;;;;;;;;-1:-1:-1;4178:155:14;;;;;:::i;:::-;;:::i;1494:67::-;;;;;;;;;;-1:-1:-1;1494:67:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20573:25:16;;;20629:2;20614:18;;20607:34;;;;20657:18;;;20650:34;20715:2;20700:18;;20693:34;20560:3;20545:19;1494:67:14;20527:206:16;10564:550:14;-1:-1:-1;;;;;10715:22:14;;10650:7;10715:22;;;:13;:22;;;;;10650:7;;10792:14;10715:22;5676:12:12;;;;;5669:20;;-1:-1:-1;;;5655:10:12;;;;;5648:18;;:41;;5344:363;10792:14:14;10775:31;;10821:9;10816:269;10840:6;10836:1;:10;10816:269;;;10868:17;;10914:30;10932:11;:5;10941:1;10932:8;:11::i;:::-;11804:2;11796:10;;;;11836:11;11828:20;;;;11638:217;10914:30;10980:10;;10867:77;;-1:-1:-1;10867:77:14;-1:-1:-1;10993:9:14;;10962:28;;10980:10;;;;;10867:77;10962:28;:::i;:::-;:40;10958:84;;;11022:5;;;;10958:84;11055:19;11065:9;11055:19;;:::i;:::-;;;10816:269;;10848:3;;;;:::i;:::-;;;10816:269;;;-1:-1:-1;11101:6:14;;-1:-1:-1;;;10564:550:14;;;;;:::o;6532:1049::-;1482:19:6;:17;:19::i;:::-;6628:16:14::1;6615:9;:29;;6607:80;;;::::0;-1:-1:-1;;;6607:80:14;;8205:2:16;6607:80:14::1;::::0;::::1;8187:21:16::0;8244:2;8224:18;;;8217:30;8283:34;8263:18;;;8256:62;-1:-1:-1;;;8334:18:16;;;8327:36;8380:19;;6607:80:14::1;;;;;;;;;6706:28;6724:9;6706:17;:28::i;:::-;6698:81;;;;-1:-1:-1::0;;;6698:81:14::1;;;;;;;:::i;:::-;6791:17;6810::::0;6831:14:::1;:12;:14::i;:::-;-1:-1:-1::0;;;;;6880:33:14;::::1;6855:22;6880:33:::0;;;-1:-1:-1;;;;;;;;;;;6880:22:14::1;:33:::0;;;:22;:33;;;6855:58;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;6948:21;;;6880:10:::1;6948:21:::0;;;;;6970:10:::1;6948:33:::0;;;;;;;;6923:58;;;;::::1;::::0;;;;;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;;;;;;;6790:55;;-1:-1:-1;6790:55:14;;-1:-1:-1;6855:58:14;6991:28:::1;6790:55:::0;6855:58;6991:14:::1;:28::i;:::-;7029;7044:5;7051;7029:14;:28::i;:::-;7088:9;7067:5;:17;;:30;;;;;;;:::i;:::-;::::0;;-1:-1:-1;7107:30:14;;7128:9:::1;::::0;7107:5;;:30:::1;::::0;7128:9;;7107:30:::1;:::i;:::-;::::0;;-1:-1:-1;7147:31:14::1;7165:5:::0;7172;7147:17:::1;:31::i;:::-;7188;7206:5;7213;7188:17;:31::i;:::-;7249:12;7229:17;::::0;;::::1;:32:::0;;;7271:17;;::::1;:32:::0;;;-1:-1:-1;;;;;7313:33:14;::::1;-1:-1:-1::0;7313:33:14;;;-1:-1:-1;;;;;;;;;;;7313:22:14::1;:33:::0;;;:22;:33;;;:41;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;:10:::1;7364:21:::0;;;;;7386:10:::1;7364:33:::0;;;;;;;:41;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;7450:17:::1;:30:::0;;7471:9:::1;::::0;-1:-1:-1;7450:30:14::1;::::0;7471:9;;7450:30:::1;:::i;:::-;;;;;;;;7510:9;7490:16;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7535:39:14::1;::::0;7564:9:::1;5940:25:16::0;;-1:-1:-1;;;;;7535:39:14;::::1;::::0;7541:10:::1;::::0;7535:39:::1;::::0;5928:2:16;5913:18;7535:39:14::1;;;;;;;1511:1:6;;;;6532:1049:14::0;:::o;3315:197:5:-;1889:4;-1:-1:-1;;;;;1898:6:5;1881:23;;;1873:80;;;;-1:-1:-1;;;1873:80:5;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:5;:20;-1:-1:-1;;;;;;;;;;;1642:65:2;-1:-1:-1;;;;;1642:65:2;;1563:151;1971:20:5;-1:-1:-1;;;;;1971:30:5;;1963:87;;;;-1:-1:-1;;;1963:87:5;;;;;;;:::i;:::-;3398:36:::1;3416:17;3398;:36::i;:::-;3485:12;::::0;;3495:1:::1;3485:12:::0;;;::::1;::::0;::::1;::::0;;;3444:61:::1;::::0;3466:17;;3485:12;3444:21:::1;:61::i;:::-;3315:197:::0;:::o;3875:65:14:-;1334:13:0;:11;:13::i;:::-;3923:10:14::1;:8;:10::i;:::-;3875:65::o:0;11120:128::-;11187:4;11210:31;:11;11231:9;11210:20;:31::i;4876:722::-;1334:13:0;:11;:13::i;:::-;4980:1:14::1;4957:20;:11;:18;:20::i;:::-;:24;4949:70;;;::::0;-1:-1:-1;;;4949:70:14;;7803:2:16;4949:70:14::1;::::0;::::1;7785:21:16::0;7842:2;7822:18;;;7815:30;7881:34;7861:18;;;7854:62;-1:-1:-1;;;7932:18:16;;;7925:31;7973:19;;4949:70:14::1;7775:223:16::0;4949:70:14::1;5037:28;5055:9;5037:17;:28::i;:::-;5029:81;;;;-1:-1:-1::0;;;5029:81:14::1;;;;;;;:::i;:::-;5122:17;5141::::0;5162:14:::1;:12;:14::i;:::-;-1:-1:-1::0;;;;;5210:33:14;::::1;5186:21;5210:33:::0;;;-1:-1:-1;;;;;;;;;;;5210:22:14::1;:33:::0;;;:22;:33;;;;5186:57;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;;;5121:55;;-1:-1:-1;5121:55:14;-1:-1:-1;5253:27:14::1;5121:55:::0;5186:57;5253:14:::1;:27::i;:::-;5290:30;5308:5;5315:4;5290:17;:30::i;:::-;5349:12;5330:16;::::0;::::1;:31:::0;;;-1:-1:-1;;;;;5371:33:14;::::1;:22;:33:::0;;;-1:-1:-1;;;;;;;;;;;5371:22:14::1;:33:::0;;;:22;:33;;;;:40;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;5422:29:::1;:11;5394:9:::0;5422:18:::1;:29::i;:::-;-1:-1:-1::0;;;;;;5461:24:14;::::1;;::::0;;;:13:::1;:24;::::0;;;;;;:32;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;5525:16;;5504:17:::1;:37:::0;;5525:16;;5504:17;;:37:::1;::::0;5525:16;;5504:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;5557:34:14::1;::::0;;-1:-1:-1;;;;;4031:32:16;;4013:51;;5585:5:14::1;4095:2:16::0;4080:18;;4073:50;5557:34:14::1;::::0;3986:18:16;5557:34:14::1;;;;;;;1357:1:0;;;4876:722:14::0;:::o;2970:546::-;3111:19:4;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:4;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:4;1476:19:8;:23;;;3219:66:4;;-1:-1:-1;3268:12:4;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:4;;13238:2:16;3157:201:4;;;13220:21:16;13277:2;13257:18;;;13250:30;13316:34;13296:18;;;13289:62;-1:-1:-1;;;13367:18:16;;;13360:44;13421:19;;3157:201:4;13210:236:16;3157:201:4;3368:12;:16;;-1:-1:-1;;3368:16:4;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:4;;;;;3394:65;3055:24:14::1;:22;:24::i;:::-;3089:17;:15;:17::i;:::-;3116:25;3135:5;3116:18;:25::i;:::-;3151:24;:22;:24::i;:::-;3186:6;:19:::0;;-1:-1:-1;;;;;;3186:19:14::1;3195:10;3186:19;::::0;;3257:14:::1;:19:::0;;-1:-1:-1;;3257:19:14::1;3274:2;3257:19;::::0;;3334:27:::1;3353:7;3334:18;:27::i;:::-;3421:22;3436:6;3421:14;:22::i;:::-;3485:24;3499:9;3485:13;:24::i;:::-;3483:14:4::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:4;;;3553:14;;-1:-1:-1;6409:36:16;;3553:14:4;;6397:2:16;6382:18;3553:14:4;;;;;;;3479:99;2970:546:14;;;:::o;4741:101::-;1334:13:0;:11;:13::i;:::-;4811:24:14::1;4825:9;4811:13;:24::i;3761:222:5:-:0;1889:4;-1:-1:-1;;;;;1898:6:5;1881:23;;;1873:80;;;;-1:-1:-1;;;1873:80:5;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:5;:20;-1:-1:-1;;;;;;;;;;;1642:65:2;-1:-1:-1;;;;;1642:65:2;;1563:151;1971:20:5;-1:-1:-1;;;;;1971:30:5;;1963:87;;;;-1:-1:-1;;;1963:87:5;;;;;;;:::i;:::-;3878:36:::1;3896:17;3878;:36::i;:::-;3924:52;3946:17;3965:4;3971;3924:21;:52::i;:::-;3761:222:::0;;:::o;4543:171:14:-;1334:13:0;:11;:13::i;:::-;4630:20:14::1;:11;:18;:20::i;:::-;4621:5;:29;;;;4613:62;;;::::0;-1:-1:-1;;;4613:62:14;;14467:2:16;4613:62:14::1;::::0;::::1;14449:21:16::0;14506:2;14486:18;;;14479:30;-1:-1:-1;;;14525:18:16;;;14518:50;14585:18;;4613:62:14::1;14439:170:16::0;4613:62:14::1;4685:14;:22:::0;;-1:-1:-1;;4685:22:14::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4543:171::o;3004:131:5:-;3082:7;2324:4;-1:-1:-1;;;;;2333:6:5;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:5;;11708:2:16;2308:92:5;;;11690:21:16;11747:2;11727:18;;;11720:30;11786:34;11766:18;;;11759:62;11857:26;11837:18;;;11830:54;11901:19;;2308:92:5;11680:246:16;2308:92:5;-1:-1:-1;;;;;;;;;;;;3004:131:5;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;4339:161:14:-:0;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4414:23:14;::::1;4406:59;;;::::0;-1:-1:-1;;;4406:59:14;;16006:2:16;4406:59:14::1;::::0;::::1;15988:21:16::0;16045:2;16025:18;;;16018:30;16084:25;16064:18;;;16057:53;16127:18;;4406:59:14::1;15978:173:16::0;4406:59:14::1;4475:6;:18:::0;;-1:-1:-1;;;;;;4475:18:14::1;-1:-1:-1::0;;;;;4475:18:14;;;::::1;::::0;;;::::1;::::0;;4339:161::o;8990:145::-;9078:50;9098:10;9110:9;9121:6;9078:19;:50::i;3808:61::-;1334:13:0;:11;:13::i;:::-;3854:8:14::1;:6;:8::i;9141:784::-:0;-1:-1:-1;;;;;9265:21:14;;;9222:7;9265:21;;;:10;:21;;;;;;;;:29;;;;;;;;;;;9241:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9222:7:14;;9241:53;;9330:299;;9377:25;9395:6;9377:17;:25::i;:::-;9373:207;;;-1:-1:-1;9422:20:14;;;;;;;;;9429:13;9422:20;;;;;;;;;9478:23;;9503:17;;9460:61;;9422:20;;9460:11;:61::i;:::-;;9539:26;9554:4;9560;9539:14;:26::i;:::-;-1:-1:-1;9600:18:14;;;;-1:-1:-1;9593:25:14;;9330:299;9642:28;9660:9;9642:17;:28::i;:::-;9638:210;;;-1:-1:-1;9686:17:14;;;;;;;;;9693:10;9686:17;;;;;;;;;9735:20;;9757:17;;9717:58;;9686:17;;9717:11;:58::i;:::-;;9638:210;;;-1:-1:-1;;;;;;9813:24:14;;;;;;:13;:24;;;;;;;;;9806:31;;;;;;;;;;;;;;;;;;;9638:210;9857:26;9872:4;9878;9857:14;:26::i;:::-;-1:-1:-1;9900:18:14;;;;9141:784;-1:-1:-1;;;9141:784:14:o;3985:187::-;1334:13:0;:11;:13::i;:::-;4074:1:14::1;4065:6;:10;4057:48;;;::::0;-1:-1:-1;;;4057:48:14;;10194:2:16;4057:48:14::1;::::0;::::1;10176:21:16::0;10233:2;10213:18;;;10206:30;10272:27;10252:18;;;10245:55;10317:18;;4057:48:14::1;10166:175:16::0;4057:48:14::1;4115:14;:12;:14::i;:::-;;;4139:26;4158:6;4139:18;:26::i;7638:1346::-:0;1815:1:7;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:7;;19749:2:16;2561:63:7;;;19731:21:16;19788:2;19768:18;;;19761:30;19827:33;19807:18;;;19800:61;19878:18;;2561:63:7;19721:181:16;2561:63:7;1815:1;2699:7;:18;1482:19:6::1;:17;:19::i;:::-;7737:17:14::2;7756::::0;7777:14:::2;:12;:14::i;:::-;-1:-1:-1::0;;;;;7826:33:14;::::2;7801:22;7826:33:::0;;;-1:-1:-1;;;;;;;;;;;7826:22:14::2;:33:::0;;;:22;:33;;;7801:58;;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;7894:21;;;7826:10:::2;7894:21:::0;;;;;7916:10:::2;7894:33:::0;;;;;;;;7869:58;;;;::::2;::::0;;;;;;;;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;;;;;;;;7736:55;;-1:-1:-1;7736:55:14;;-1:-1:-1;7946:23:14;;::::2;::::0;:49:::2;;-1:-1:-1::0;7973:17:14::2;::::0;::::2;::::0;:22;::::2;7946:49;7938:85;;;::::0;-1:-1:-1;;;7938:85:14;;16765:2:16;7938:85:14::2;::::0;::::2;16747:21:16::0;16804:2;16784:18;;;16777:30;16843:25;16823:18;;;16816:53;16886:18;;7938:85:14::2;16737:173:16::0;7938:85:14::2;8034:16;8060:14:::0;8089:28:::2;8107:9;8089:17;:28::i;:::-;8085:542;;;8133:28;8148:5;8155;8133:14;:28::i;:::-;8175;8190:5;8197;8175:14;:28::i;:::-;8238:30;8247:5;8254;8261:6;8238:8;:30::i;:::-;8217:51:::0;;-1:-1:-1;8217:51:14;-1:-1:-1;8282:31:14::2;8300:5:::0;8307;8282:17:::2;:31::i;:::-;8327;8345:5;8352;8327:17;:31::i;:::-;8393:8;8372:17;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8085:542:14::2;::::0;-1:-1:-1;8085:542:14::2;;-1:-1:-1::0;;;;;8440:24:14;::::2;;::::0;;;:13:::2;:24;::::0;;;;;;;;8432:32;;;;::::2;::::0;;;;;;;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;8478:28:14::2;8432:32:::0;8500:5;8478:14:::2;:28::i;:::-;8541:30;8550:5;8557;8564:6;8541:8;:30::i;:::-;8520:51:::0;;-1:-1:-1;8520:51:14;-1:-1:-1;8585:31:14::2;8603:5:::0;8610;8585:17:::2;:31::i;:::-;8657:12;8637:17;::::0;;::::2;:32:::0;;;8679:17;;::::2;:32:::0;;;-1:-1:-1;;;;;8721:33:14;::::2;-1:-1:-1::0;8721:33:14;;;-1:-1:-1;;;;;;;;;;;8721:22:14::2;:33:::0;;;:22;:33;;;:41;;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;:10:::2;8772:21:::0;;;;;8794:10:::2;8772:33:::0;;;;;;;:41;;;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;;;;;;;::::2;::::0;;;;8824:16:::2;:28:::0;;8844:8;;-1:-1:-1;8824:28:14::2;::::0;8844:8;;8824:28:::2;:::i;:::-;::::0;;;-1:-1:-1;;8868:48:14::2;::::0;;20263:25:16;;;20319:2;20304:18;;20297:34;;;-1:-1:-1;;;;;8868:48:14;::::2;::::0;8876:10:::2;::::0;8868:48:::2;::::0;20236:18:16;8868:48:14::2;;;;;;;8927:50;8947:10;8959:17;8970:6:::0;8959:8;:17:::2;:::i;:::-;8927:19;:50::i;:::-;-1:-1:-1::0;;1772:1:7;2872:22;;-1:-1:-1;;;;;;7638:1346:14:o;11254:111::-;11303:16;11338:20;:11;:18;:20::i;:::-;11331:27;;11254:111;:::o;10411:147::-;10480:7;10506:45;10526:7;10535:15;10506:19;:45::i;5757:627::-;1815:1:7;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:7;;19749:2:16;2561:63:7;;;19731:21:16;19788:2;19768:18;;;19761:30;19827:33;19807:18;;;19800:61;19878:18;;2561:63:7;19721:181:16;2561:63:7;1815:1;2699:7;:18;1482:19:6::1;:17;:19::i;:::-;5847:17:14::2;5870:14;:12;:14::i;:::-;-1:-1:-1::0;5941:10:14::2;5894:21;5918:34:::0;;;-1:-1:-1;;;;;;;;;;;5918:22:14::2;:34:::0;;;:22;:34;;;;5894:58;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;;;;;;::::2;::::0;;::::2;::::0;;;;;5846:38;;-1:-1:-1;5966:29:14::2;::::0;:17:::2;:29::i;:::-;5962:131;;;6011:27;6026:5;6033:4;6011:14;:27::i;:::-;6052:30;6070:5;6077:4;6052:17;:30::i;:::-;6120:1;6111:6;:10;:42;;;;;6135:4;:18;;;6125:6;:28;;6111:42;6103:94;;;::::0;-1:-1:-1;;;6103:94:14;;7046:2:16;6103:94:14::2;::::0;::::2;7028:21:16::0;7085:2;7065:18;;;7058:30;7124:34;7104:18;;;7097:62;-1:-1:-1;;;7175:18:16;;;7168:37;7222:19;;6103:94:14::2;7018:229:16::0;6103:94:14::2;6229:6;6207:4;:18;;:28;;;;;;;:::i;:::-;::::0;;-1:-1:-1;6264:12:14::2;6245:16;::::0;::::2;:31:::0;;;6309:10:::2;6286:22;:34:::0;;;-1:-1:-1;;;;;;;;;;;6286:22:14::2;:34:::0;;;:22;:34;;;;:41;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;;6338:39:::2;::::0;6370:6;6338:19:::2;:39::i;:::-;-1:-1:-1::0;;1772:1:7;2872:22;;-1:-1:-1;5757:627:14:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;8612:2:16;2401:73:0::1;::::0;::::1;8594:21:16::0;8651:2;8631:18;;;8624:30;8690:34;8670:18;;;8663:62;-1:-1:-1;;;8741:18:16;;;8734:36;8787:19;;2401:73:0::1;8584:228:16::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;9931:474:14:-:0;-1:-1:-1;;;;;10088:22:14;;10042:43;10088:22;;;:13;:22;;;;;9999:31;;10137:14;10088:22;5676:12:12;;;;;5669:20;;-1:-1:-1;;;5655:10:12;;;;;5648:18;;:41;;5344:363;10137:14:14;10120:31;;10192:6;10175:24;;;;;;-1:-1:-1;;;10175:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;10175:24:14;;;;;;;;;;;;;;;;10161:38;;10214:9;10209:190;10233:6;10229:1;:10;10209:190;;;10261:14;;10298:30;10316:11;:5;10325:1;10316:8;:11::i;10298:30::-;10260:68;;;;10359:29;;;;;;;;10370:6;10359:29;;;;10378:9;10359:29;;;10342:11;10354:1;10342:14;;;;;;-1:-1:-1;;;10342:14:14;;;;;;;;;;;;;;:46;;;;10209:190;;10241:3;;;;:::i;:::-;;;10209:190;;;;9931:474;;;;;:::o;4178:155::-;1334:13:0;:11;:13::i;:::-;4263:6:14::1;4253;:16;;;;4245:49;;;::::0;-1:-1:-1;;;4245:49:14;;19400:2:16;4245:49:14::1;::::0;::::1;19382:21:16::0;19439:2;19419:18;;;19412:30;-1:-1:-1;;;19458:18:16;;;19451:50;19518:18;;4245:49:14::1;19372:170:16::0;4245:49:14::1;4304:22;4319:6;4304:14;:22::i;4598:324:12:-:0;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;;;4781:20;;:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:12;;;;;;4843:17;;;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:12;;;;;;;;;;;4839:43;4899:16;;;;;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:12;;;;;4598:324::o;2010:106:6:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:6;;12133:2:16;2071:38:6;;;12115:21:16;12172:2;12152:18;;;12145:30;-1:-1:-1;;;12191:18:16;;;12184:46;12247:18;;2071:38:6;12105:166:16;13023:316:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13121:70:14;;;;;;;;;13133:13;13121:70;;;;;;;;;13148:23;;13173:17;;13121:70;;;13148:23;13121:11;:70::i;:::-;13209:64;;;;;;;;;13221:10;13209:64;;;;;;;;;13233:20;;13255:17;;13113:78;;-1:-1:-1;13209:64:14;;:11;:64::i;:::-;13283:21;;:13;:21;;;;;;;;13314:18;;:10;:18;;;;;;13299:5;;13023:316;-1:-1:-1;13023:316:14:o;13818:247::-;13911:16;;;;13907:58;;13818:247;;:::o;13907:58::-;14043:15;;;;14016:12;;13997:16;;1907:4;;13997:31;;;:::i;:::-;13996:44;;;;:::i;:::-;:62;;;;:::i;:::-;13974:4;:18;;:84;;;;;;;:::i;:::-;;;-1:-1:-1;;;13818:247:14:o;14071:161::-;14201:12;;14182:16;;1907:4;;14182:31;;;:::i;:::-;14181:44;;;;:::i;:::-;14163:15;;;;:62;-1:-1:-1;14071:161:14:o;15947:160::-;16056:6;;-1:-1:-1;;;;;16056:6:14;16042:10;:20;16034:66;;;;-1:-1:-1;;;16034:66:14;;13653:2:16;16034:66:14;;;13635:21:16;13692:2;13672:18;;;13665:30;13731:34;13711:18;;;13704:62;-1:-1:-1;;;13782:18:16;;;13775:31;13823:19;;16034:66:14;13625:223:16;2938:974:2;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:2;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:2;;;;;;;;-1:-1:-1;;3531:63:2;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:2;;14816:2:16;3758:56:2;;;14798:21:16;14855:2;14835:18;;;14828:30;14894:34;14874:18;;;14867:62;-1:-1:-1;;;14945:18:16;;;14938:44;14999:19;;3758:56:2;14788:236:16;3527:302:2;-1:-1:-1;;;;;;;;;;;3644:28:2;;3636:82;;;;-1:-1:-1;;;3636:82:2;;12828:2:16;3636:82:2;;;12810:21:16;12867:2;12847:18;;;12840:30;12906:34;12886:18;;;12879:62;-1:-1:-1;;;12957:18:16;;;12950:39;13006:19;;3636:82:2;12800:231:16;3636:82:2;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:9;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;15645:2:16;1654:68:0;;;15627:21:16;;;15664:18;;;15657:30;15723:34;15703:18;;;15696:62;15775:18;;1654:68:0;15617:182:16;2676:117:6;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:6::1;::::0;;2764:22:::1;929:10:9::0;2773:12:6::1;2764:22;::::0;-1:-1:-1;;;;;3801:32:16;;;3783:51;;3771:2;3756:18;2764:22:6::1;;;;;;;2676:117::o:0;8583:165:13:-;-1:-1:-1;;;;;8716:23:13;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;8679:62;8583:165;-1:-1:-1;;;8583:165:13:o;8829:115::-;8892:7;8918:19;8926:3;4444:18;;4362:107;8346:156;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:13;;8442:7;:53::i;1853:111:7:-;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1923:34:7::1;:32;:34::i;1063:97:6:-:0;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1126:27:6::1;:25;:27::i;2673:187:0:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2673:187;;:::o;1042:67:5:-;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;15111:254:14:-;15200:10;15209:1;15200:6;:10;:::i;:::-;15174:23;:36;;;15243:32;;:6;:32;:::i;:::-;15220:20;:55;;;15312:23;;15290:68;;;;;;20263:25:16;;20319:2;20304:18;;20297:34;20251:2;20236:18;;20218:119;15290:68:14;;;;;;;;15111:254;:::o;15371:124::-;15429:10;:19;;-1:-1:-1;;15429:19:14;;;;;;;;;;;;;;;15463:25;;20882:42:16;;;15463:25:14;;20870:2:16;20855:18;15463:25:14;20837:93:16;15501:440:14;-1:-1:-1;;;;;15570:23:14;;15562:52;;;;-1:-1:-1;;;15562:52:14;;11363:2:16;15562:52:14;;;11345:21:16;11402:2;11382:18;;;11375:30;-1:-1:-1;;;11421:18:16;;;11414:46;11477:18;;15562:52:14;11335:166:16;15562:52:14;15655:14;;;;15632:20;:11;:18;:20::i;:::-;:37;15624:70;;;;-1:-1:-1;;;15624:70:14;;19051:2:16;15624:70:14;;;19033:21:16;19090:2;19070:18;;;19063:30;-1:-1:-1;;;19109:18:16;;;19102:50;19169:18;;15624:70:14;19023:170:16;15624:70:14;15726:28;15744:9;15726:17;:28::i;:::-;15725:29;:74;;;;-1:-1:-1;;;;;;15758:24:14;;;;;;:13;:24;;;;;:36;;;:41;15725:74;15704:146;;;;-1:-1:-1;;;15704:146:14;;9019:2:16;15704:146:14;;;9001:21:16;9058:2;9038:18;;;9031:30;9097:27;9077:18;;;9070:55;9142:18;;15704:146:14;8991:175:16;15704:146:14;15860:26;:11;15876:9;15860:15;:26::i;:::-;-1:-1:-1;15901:33:14;;;-1:-1:-1;;;;;4031:32:16;;4013:51;;15929:4:14;4095:2:16;4080:18;;4073:50;15901:33:14;;3986:18:16;15901:33:14;3968:161:16;12176:841:14;-1:-1:-1;;;;;12330:22:14;;12284:43;12330:22;;;:13;:22;;;;;;12387:454;5880:12:12;;;;;;5866:26;;-1:-1:-1;;;5866:10:12;;;;;:26;;;;12387:454:14;;12425:17;12444;12465:32;12483:13;:5;:11;:13::i;12465:32::-;12527:10;;12424:73;;-1:-1:-1;12424:73:14;-1:-1:-1;12540:15:14;;12515:22;;12527:10;;;;;12424:73;12515:22;:::i;:::-;:40;12511:84;;;12575:5;;;;12511:84;12608:16;12615:9;12608:16;;:::i;:::-;;;12638;:5;:14;:16::i;:::-;;12678:6;12672:3;:12;12668:163;;;12704:59;12720:42;12738:12;12744:6;12738:3;:12;:::i;:::-;12752:9;12720:17;:42::i;:::-;12704:5;;3023:12:12;;;;;;-1:-1:-1;;3023:16:12;3059:23;;;;;;2959:17;3059:23;;;3038:1;3059:11;;:23;;;;;:31;;;;3100:25;;-1:-1:-1;;;;;;3100:25:12;-1:-1:-1;;;;;3100:25:12;;;;;;2878:254;12704:59:14;12787:6;12781:12;;12811:5;;;;12668:163;12387:454;;;;;12865:6;12858:3;:13;12850:59;;;;-1:-1:-1;;;12850:59:14;;10961:2:16;12850:59:14;;;10943:21:16;11000:2;10980:18;;;10973:30;11039:34;11019:18;;;11012:62;-1:-1:-1;;;11090:18:16;;;11083:31;11131:19;;12850:59:14;10933:223:16;12850:59:14;12953:9;-1:-1:-1;;;;;12924:47:14;12944:7;-1:-1:-1;;;;;12924:47:14;;12964:6;12924:47;;;;5940:25:16;;5928:2;5913:18;;5895:76;12924:47:14;;;;;;;;12981:29;12992:9;13003:6;12981:10;:29::i;:::-;12176:841;;;;;:::o;2429:115:6:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:6::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:9::0;;850:96;13345:467:14;-1:-1:-1;;;;;;;;;;;;;;;;;13509:16:14;13505:103;;-1:-1:-1;13560:12:14;13541:16;;;:31;:4;13586:11;;13505:103;13617:14;13670;13650:4;:16;;;13635:12;:31;;;;:::i;:::-;13634:50;;;;:::i;:::-;13617:67;-1:-1:-1;13732:11:14;13711:17;1907:4;13617:67;13711:17;:::i;:::-;13710:33;;;;:::i;:::-;13694:49;;:4;;:49;;;;;:::i;:::-;;;-1:-1:-1;;13772:12:14;13753:16;;;:31;-1:-1:-1;13753:16:14;;13345:467;-1:-1:-1;;13345:467:14:o;14238:676::-;14373:16;14391:14;14417:17;14457:5;:19;;;14437:5;:17;;;:39;;;;:::i;:::-;14417:59;;14504:9;14494:6;:19;;14486:53;;;;-1:-1:-1;;;14486:53:14;;12478:2:16;14486:53:14;;;12460:21:16;12517:2;12497:18;;;12490:30;-1:-1:-1;;;12536:18:16;;;12529:51;12597:18;;14486:53:14;12450:171:16;14486:53:14;14558:19;;;;;-1:-1:-1;14591:11:14;14587:174;;14627:9;14618:18;;14587:174;;;14667:6;14657;:16;14653:108;;14712:6;14689:5;:19;;:29;;;;;;;:::i;:::-;;;-1:-1:-1;14740:1:14;;-1:-1:-1;14743:6:14;;-1:-1:-1;14732:18:14;;-1:-1:-1;14732:18:14;14653:108;14792:1;14770:19;;;:23;14814:15;14823:6;14814;:15;:::i;:::-;14803:26;;14860:8;14839:5;:17;;:29;;;;;;;:::i;:::-;;;-1:-1:-1;14878:29:14;;14899:8;;14878:5;;:29;;14899:8;;14878:29;:::i;:::-;;;-1:-1:-1;;14238:676:14;;;;;;;:::o;11861:309::-;11960:19;11950:6;:29;;11942:85;;;;-1:-1:-1;;;11942:85:14;;14055:2:16;11942:85:14;;;14037:21:16;14094:2;14074:18;;;14067:30;14133:34;14113:18;;;14106:62;-1:-1:-1;;;14184:18:16;;;14177:41;14235:19;;11942:85:14;14027:233:16;11942:85:14;12037:75;12069:42;12087:6;12095:15;12069:17;:42::i;:::-;-1:-1:-1;;;;;12037:22:14;;;;;;:13;:22;;;;;;2187:10:12;;-1:-1:-1;;;2187:10:12;;;;;;;;2207:22;;;;;2168:16;2207:22;;;:11;;;;:22;;;;;;:30;;;;2271:26;;2284:13;;2271:26;;-1:-1:-1;;;;;2271:26:12;;;;;;;;;;;2088:226;12037:75:14;12147:7;-1:-1:-1;;;;;12127:36:14;;12156:6;12127:36;;;;5940:25:16;;5928:2;5913:18;;5895:76;12127:36:14;;;;;;;;11861:309;;:::o;9982:300:13:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;35228:297:11:-;35284:6;-1:-1:-1;;;;;35409:5:11;:34;;35401:87;;;;-1:-1:-1;;;35401:87:11;;17529:2:16;35401:87:11;;;17511:21:16;17568:2;17548:18;;;17541:30;17607:34;17587:18;;;17580:62;-1:-1:-1;;;17658:18:16;;;17651:38;17706:19;;35401:87:11;17501:230:16;35401:87:11;-1:-1:-1;35512:5:11;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:11;;;;;:54;;-1:-1:-1;26405:16:11;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:11;;9786:2:16;26359:106:11;;;9768:21:16;9825:2;9805:18;;;9798:30;9864:34;9844:18;;;9837:62;-1:-1:-1;;;9915:18:16;;;9908:37;9962:19;;26359:106:11;9758:229:16;1805:281:2;-1:-1:-1;;;;;1476:19:8;;;1878:106:2;;;;-1:-1:-1;;;1878:106:2;;15231:2:16;1878:106:2;;;15213:21:16;15270:2;15250:18;;;15243:30;15309:34;15289:18;;;15282:62;-1:-1:-1;;;15360:18:16;;;15353:43;15413:19;;1878:106:2;15203:235:16;1878:106:2;-1:-1:-1;;;;;;;;;;;1994:85:2;;-1:-1:-1;;;;;;1994:85:2;-1:-1:-1;;;;;1994:85:2;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2478:288;;;:::o;2188:106:6:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:6;;7454:2:16;2246:41:6;;;7436:21:16;7493:2;7473:18;;;7466:30;-1:-1:-1;;;7512:18:16;;;7505:50;7572:18;;2246:41:6;7426:170:16;2685:1388:13;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:13;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;-1:-1:-1;;;3470:22:13;;;;;;;;;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;-1:-1:-1;;;3592:26:13;;;;;;;;;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;-1:-1:-1;;;3876:17:13;;;;;;;;;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;1970:109:7;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1772:1:7::1;2050:22:::0;;1970:109::o;1166:95:6:-;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1239:7:6::1;:15:::0;;-1:-1:-1;;1239:15:6::1;::::0;;1166:95::o;8028:150:13:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:13;;8121:4;:50::i;3751:212:12:-;3817:13;3846:12;3852:5;5880:12;;;;;5866:26;;-1:-1:-1;;;5866:10:12;;;;;:26;;;;;5777:122;3846:12;3842:32;;;3867:7;;-1:-1:-1;;;3867:7:12;;;;;;;;;;;3842:32;-1:-1:-1;3904:12:12;;;;;;3933:23;;;;3884:17;3933:23;;;3904:12;3933:11;;;:23;;;;;;;3751:212::o;3287:324::-;3351:13;3380:12;3386:5;5880:12;;;;;5866:26;;-1:-1:-1;;;5866:10:12;;;;;:26;;;;;5777:122;3380:12;3376:32;;;3401:7;;-1:-1:-1;;;3401:7:12;;;;;;;;;;;3376:32;-1:-1:-1;3438:12:12;;;;;;3468:23;;;;;3418:17;3468:23;;;3438:12;3468:11;;;:23;;;;;;;3501:30;;;3565:29;;3580:14;;3565:29;;;-1:-1:-1;;;;;3565:29:12;-1:-1:-1;;;;;;3565:29:12;;;;;;;3468:23;3287:324::o;11371:261:14:-;11456:13;-1:-1:-1;;;;;11489:27:14;;;;;:60;;-1:-1:-1;11533:16:14;11520:29;;;11489:60;11481:91;;;;-1:-1:-1;;;11481:91:14;;17938:2:16;11481:91:14;;;17920:21:16;17977:2;17957:18;;;17950:30;-1:-1:-1;;;17996:18:16;;;17989:48;18054:18;;11481:91:14;17910:168:16;11481:91:14;-1:-1:-1;11609:2:14;11599:12;;;;11598:26;;11371:261::o;14920:185::-;14996:12;15014:2;-1:-1:-1;;;;;15014:7:14;15029:6;15014:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14995:45;;;15058:7;15050:48;;;;-1:-1:-1;;;15050:48:14;;18694:2:16;15050:48:14;;;18676:21:16;18733:2;18713:18;;;18706:30;18772;18752:18;;;18745:58;18820:18;;15050:48:14;18666:178:16;5469:109:13;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;2192:152:2:-;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:2;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:8;;;7195:88:2;;;;-1:-1:-1;;;7195:88:2;;16358:2:16;7195:88:2;;;16340:21:16;16397:2;16377:18;;;16370:30;16436:34;16416:18;;;16409:62;-1:-1:-1;;;16487:18:16;;;16480:36;16533:19;;7195:88:2;16330:228:16;7195:88:2;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:2;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:2:o;2113:404:13:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:13;2488:12;;6622:742:8;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:8;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;7130:145;7320:12;7313:20;;-1:-1:-1;;;7313:20:8;;;;;;;;:::i;14:257:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:333::-;352:6;360;413:2;401:9;392:7;388:23;384:32;381:2;;;434:6;426;419:22;381:2;478:9;465:23;497:31;522:5;497:31;:::i;:::-;547:5;599:2;584:18;;;;571:32;;-1:-1:-1;;;371:238:16:o;614:398::-;682:6;690;743:2;731:9;722:7;718:23;714:32;711:2;;;764:6;756;749:22;711:2;808:9;795:23;827:31;852:5;827:31;:::i;:::-;877:5;-1:-1:-1;934:2:16;919:18;;906:32;947:33;906:32;947:33;:::i;:::-;999:7;989:17;;;701:311;;;;;:::o;1017:1101::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:2;;;1176:6;1168;1161:22;1123:2;1220:9;1207:23;1239:31;1264:5;1239:31;:::i;:::-;1289:5;-1:-1:-1;1345:2:16;1330:18;;1317:32;1368:18;1398:14;;;1395:2;;;1430:6;1422;1415:22;1395:2;1473:6;1462:9;1458:22;1448:32;;1518:7;1511:4;1507:2;1503:13;1499:27;1489:2;;1545:6;1537;1530:22;1489:2;1586;1573:16;1608:2;1604;1601:10;1598:2;;;1614:18;;:::i;:::-;1689:2;1683:9;1657:2;1743:13;;-1:-1:-1;;1739:22:16;;;1763:2;1735:31;1731:40;1719:53;;;1787:18;;;1807:22;;;1784:46;1781:2;;;1833:18;;:::i;:::-;1873:10;1869:2;1862:22;1908:2;1900:6;1893:18;1948:7;1943:2;1938;1934;1930:11;1926:20;1923:33;1920:2;;;1974:6;1966;1959:22;1920:2;2035;2030;2026;2022:11;2017:2;2009:6;2005:15;1992:46;2080:6;2075:2;2070;2062:6;2058:15;2054:24;2047:40;2106:6;2096:16;;;;;;;1113:1005;;;;;:::o;2123:325::-;2191:6;2199;2252:2;2240:9;2231:7;2227:23;2223:32;2220:2;;;2273:6;2265;2258:22;2453:194;2523:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:2;;;2597:6;2589;2582:22;2544:2;-1:-1:-1;2625:16:16;;2534:113;-1:-1:-1;2534:113:16:o;2652:190::-;2711:6;2764:2;2752:9;2743:7;2739:23;2735:32;2732:2;;;2785:6;2777;2770:22;2732:2;-1:-1:-1;2813:23:16;;2722:120;-1:-1:-1;2722:120:16:o;2847:296::-;2905:6;2958:2;2946:9;2937:7;2933:23;2929:32;2926:2;;;2979:6;2971;2964:22;2926:2;3023:9;3010:23;3073:10;3066:5;3062:22;3055:5;3052:33;3042:2;;3104:6;3096;3089:22;3148:274;3277:3;3315:6;3309:13;3331:53;3377:6;3372:3;3365:4;3357:6;3353:17;3331:53;:::i;:::-;3400:16;;;;;3285:137;-1:-1:-1;;3285:137:16:o;4134:661::-;4305:2;4357:21;;;4427:13;;4330:18;;;4449:22;;;4276:4;;4305:2;4528:15;;;;4502:2;4487:18;;;4276:4;4574:195;4588:6;4585:1;4582:13;4574:195;;;4653:13;;-1:-1:-1;;;;;4649:39:16;4637:52;;4744:15;;;;4709:12;;;;4685:1;4603:9;4574:195;;;-1:-1:-1;4786:3:16;;4285:510;-1:-1:-1;;;;;;4285:510:16:o;4800:797::-;5027:2;5079:21;;;5149:13;;5052:18;;;5171:22;;;4998:4;;5027:2;5212;;5230:18;;;;5271:15;;;4998:4;5317:254;5331:6;5328:1;5325:13;5317:254;;;5390:13;;5428:9;;5416:22;;5478:11;;5472:18;5458:12;;;5451:40;5511:12;;;;5546:15;;;;5353:1;5346:9;5317:254;;;-1:-1:-1;5588:3:16;;5007:590;-1:-1:-1;;;;;;;5007:590:16:o;6456:383::-;6605:2;6594:9;6587:21;6568:4;6637:6;6631:13;6680:6;6675:2;6664:9;6660:18;6653:34;6696:66;6755:6;6750:2;6739:9;6735:18;6730:2;6722:6;6718:15;6696:66;:::i;:::-;6823:2;6802:15;-1:-1:-1;;6798:29:16;6783:45;;;;6830:2;6779:54;;6577:262;-1:-1:-1;;6577:262:16:o;9171:408::-;9373:2;9355:21;;;9412:2;9392:18;;;9385:30;9451:34;9446:2;9431:18;;9424:62;-1:-1:-1;;;9517:2:16;9502:18;;9495:42;9569:3;9554:19;;9345:234::o;10346:408::-;10548:2;10530:21;;;10587:2;10567:18;;;10560:30;10626:34;10621:2;10606:18;;10599:62;-1:-1:-1;;;10692:2:16;10677:18;;10670:42;10744:3;10729:19;;10520:234::o;16915:407::-;17117:2;17099:21;;;17156:2;17136:18;;;17129:30;17195:34;17190:2;17175:18;;17168:62;-1:-1:-1;;;17261:2:16;17246:18;;17239:41;17312:3;17297:19;;17089:233::o;18083:404::-;18285:2;18267:21;;;18324:2;18304:18;;;18297:30;18363:34;18358:2;18343:18;;18336:62;-1:-1:-1;;;18429:2:16;18414:18;;18407:38;18477:3;18462:19;;18257:230::o;20935:267::-;20974:3;21002:11;;;21029:10;;-1:-1:-1;;;;;21048:27:16;;;21041:35;;21025:52;21022:2;;;21080:18;;:::i;:::-;-1:-1:-1;;;21127:19:16;;;21120:27;;21112:36;;21109:2;;;21151:18;;:::i;:::-;-1:-1:-1;;21187:9:16;;20982:220::o;21207:128::-;21247:3;21278:1;21274:6;21271:1;21268:13;21265:2;;;21284:18;;:::i;:::-;-1:-1:-1;21320:9:16;;21255:80::o;21340:217::-;21380:1;21406;21396:2;;-1:-1:-1;;;21431:31:16;;21485:4;21482:1;21475:15;21513:4;21438:1;21503:15;21396:2;-1:-1:-1;21542:9:16;;21386:171::o;21562:168::-;21602:7;21668:1;21664;21660:6;21656:14;21653:1;21650:21;21645:1;21638:9;21631:17;21627:45;21624:2;;;21675:18;;:::i;:::-;-1:-1:-1;21715:9:16;;21614:116::o;21735:125::-;21775:4;21803:1;21800;21797:8;21794:2;;;21808:18;;:::i;:::-;-1:-1:-1;21845:9:16;;21784:76::o;21865:258::-;21937:1;21947:113;21961:6;21958:1;21955:13;21947:113;;;22037:11;;;22031:18;22018:11;;;22011:39;21983:2;21976:10;21947:113;;;22078:6;22075:1;22072:13;22069:2;;;-1:-1:-1;;22113:1:16;22095:16;;22088:27;21918:205::o;22128:135::-;22167:3;-1:-1:-1;;22188:17:16;;22185:2;;;22208:18;;:::i;:::-;-1:-1:-1;22255:1:16;22244:13;;22175:88::o;22268:127::-;22329:10;22324:3;22320:20;22317:1;22310:31;22360:4;22357:1;22350:15;22384:4;22381:1;22374:15;22400:127;22461:10;22456:3;22452:20;22449:1;22442:31;22492:4;22489:1;22482:15;22516:4;22513:1;22506:15;22532:131;-1:-1:-1;;;;;22607:31:16;;22597:42;;22587:2;;22653:1;22650;22643:12"},"methodIdentifiers":{"AUR_PREC()":"45f7b8f4","MIN_STAKE_AMOUNT()":"27ed7188","MIN_WITHDRAW_AMOUNT()":"b6857844","activeStakeAmount()":"d849a502","activeValidators()":"d2d49c4b","addValidator(address)":"4d238c8e","completeWithdraw(address,uint256)":"7b66394c","dueWithdrawalAmount(address)":"dab31689","dueWithdrawalAmount(address,uint256)":"19d41774","getVersion()":"0d8e6e2c","inactivePools(address)":"340c5a25","initialize(address,address)":"485cc955","isActiveValidator(address)":"40550a1c","keeper()":"aced1661","lockPeriod()":"3fd8b02f","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","pendingReward(address,address)":"9ced7e76","pendingWithdrawals(address)":"f3f43703","proxiableUUID()":"52d1902d","removeValidator(address)":"40a141ff","renounceOwnership()":"715018a6","setKeeper(address)":"748747e6","setLockPeriod(uint32)":"f489f23b","setRewardPerBlock(uint256)":"bb872b4a","setValidatorLimit(uint32)":"522abc40","stake(address)":"26476204","stakeTable(address,address)":"f6a2314a","stakerPool()":"f0544ac8","stakerRewardPerBlock()":"24e770d0","totalStakeAmount()":"94409a56","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","unstake(address,uint256)":"c2a672e0","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","validatorLimit()":"57525cbc","validatorPool()":"d4c6d1de","validatorRewardPerBlock()":"7ea5db42","validatorWithdraw(uint256)":"eaf7c9dc","withdrawTable(address)":"29451893"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minWithdrawAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newLockPeriod\",\"type\":\"uint32\"}],\"name\":\"LockPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakerReward\",\"type\":\"uint256\"}],\"name\":\"RewardPerBlockChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedReward\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"ValidatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUR_PREC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_STAKE_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WITHDRAW_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeValidators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"addValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"completeWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"dueWithdrawalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"dueWithdrawalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inactivePools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastAUR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"isActiveValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct CMTStaking.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"removeValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newKeeper\",\"type\":\"address\"}],\"name\":\"setKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"setLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setRewardPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"limit\",\"type\":\"uint32\"}],\"name\":\"setValidatorLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeTable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastAUR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastAUR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"validatorWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawTable\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"_begin\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"_end\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMTStaking.sol\":\"CMTStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfa467c53a0d60b4d09bf04aa952b1d1d44e5766fcc053aace078d7859b8419\",\"dweb:/ipfs/QmebVTZpyNxYfKYTuLMywzEJTdc1Ca8ME4xm3kR9gQgToG\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/CMTStaking.sol\":{\"keccak256\":\"0x92853dbb6f94bddd45fd7236264e11cdb5405636181c185219b078ba753afaa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://428a73b60da53b87866ebb635e10890a084c5e12ffab6df8c11f4ce030fe5201\",\"dweb:/ipfs/QmXqwRTMjd48YER5CK5wEDmbgMpPGqv5ZKkqDC4qHTSS9w\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":948,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":992,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)49_storage"},{"astId":1277,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":828,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_paused","offset":0,"slot":"101","type":"t_bool"},{"astId":933,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":10,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_owner","offset":0,"slot":"151","type":"t_address"},{"astId":130,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":509,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"__gap","offset":0,"slot":"201","type":"t_array(t_uint256)50_storage"},{"astId":806,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":4177,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"keeper","offset":0,"slot":"301","type":"t_address"},{"astId":4180,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_validators","offset":0,"slot":"302","type":"t_struct(AddressSet)3842_storage"},{"astId":4183,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"validatorPool","offset":0,"slot":"304","type":"t_struct(Pool)4161_storage"},{"astId":4186,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"stakerPool","offset":0,"slot":"306","type":"t_struct(Pool)4161_storage"},{"astId":4191,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"inactivePools","offset":0,"slot":"308","type":"t_mapping(t_address,t_struct(Pool)4161_storage)"},{"astId":4198,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"stakeTable","offset":0,"slot":"309","type":"t_mapping(t_address,t_mapping(t_address,t_struct(StakeInfo)4170_storage))"},{"astId":4203,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"withdrawTable","offset":0,"slot":"310","type":"t_mapping(t_address,t_struct(Bytes32Deque)3208_storage)"},{"astId":4205,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"validatorLimit","offset":0,"slot":"311","type":"t_uint32"},{"astId":4207,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"lockPeriod","offset":4,"slot":"311","type":"t_uint32"},{"astId":4209,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"validatorRewardPerBlock","offset":0,"slot":"312","type":"t_uint256"},{"astId":4211,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"stakerRewardPerBlock","offset":0,"slot":"313","type":"t_uint256"},{"astId":4213,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"totalStakeAmount","offset":0,"slot":"314","type":"t_uint256"},{"astId":4215,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"activeStakeAmount","offset":0,"slot":"315","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_int128":{"encoding":"inplace","label":"int128","numberOfBytes":"16"},"t_mapping(t_address,t_mapping(t_address,t_struct(StakeInfo)4170_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => struct CMTStaking.StakeInfo))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(StakeInfo)4170_storage)"},"t_mapping(t_address,t_struct(Bytes32Deque)3208_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct DoubleEndedQueue.Bytes32Deque)","numberOfBytes":"32","value":"t_struct(Bytes32Deque)3208_storage"},"t_mapping(t_address,t_struct(Pool)4161_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CMTStaking.Pool)","numberOfBytes":"32","value":"t_struct(Pool)4161_storage"},"t_mapping(t_address,t_struct(StakeInfo)4170_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CMTStaking.StakeInfo)","numberOfBytes":"32","value":"t_struct(StakeInfo)4170_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_int128,t_bytes32)":{"encoding":"mapping","key":"t_int128","label":"mapping(int128 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_struct(AddressSet)3842_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":3841,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)3541_storage"}],"numberOfBytes":"64"},"t_struct(Bytes32Deque)3208_storage":{"encoding":"inplace","label":"struct DoubleEndedQueue.Bytes32Deque","members":[{"astId":3201,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_begin","offset":0,"slot":"0","type":"t_int128"},{"astId":3203,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_end","offset":16,"slot":"0","type":"t_int128"},{"astId":3207,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_data","offset":0,"slot":"1","type":"t_mapping(t_int128,t_bytes32)"}],"numberOfBytes":"64"},"t_struct(Pool)4161_storage":{"encoding":"inplace","label":"struct CMTStaking.Pool","members":[{"astId":4158,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"lastAUR","offset":0,"slot":"0","type":"t_uint256"},{"astId":4160,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"updateBlock","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(Set)3541_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":3536,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":3540,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(StakeInfo)4170_storage":{"encoding":"inplace","label":"struct CMTStaking.StakeInfo","members":[{"astId":4163,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"stakeAmount","offset":0,"slot":"0","type":"t_uint256"},{"astId":4165,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"rewardDebt","offset":0,"slot":"1","type":"t_uint256"},{"astId":4167,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"pendingReward","offset":0,"slot":"2","type":"t_uint256"},{"astId":4169,"contract":"contracts/CMTStaking.sol:CMTStaking","label":"updateBlock","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/mock/CMTStakingMock.sol":{"CMTStakingMock":{"abi":[{"inputs":[{"internalType":"uint256","name":"minStakeAmount","type":"uint256"},{"internalType":"uint256","name":"minWithdrawAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"OutOfBounds","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"newLockPeriod","type":"uint32"}],"name":"LockPeriodChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Received","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"validatorReward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stakerReward","type":"uint256"}],"name":"RewardPerBlockChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint256","name":"unstakeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"claimedReward","type":"uint256"}],"name":"Unstake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"}],"name":"ValidatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawalCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawalInitiated","type":"event"},{"inputs":[],"name":"AUR_PREC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_STAKE_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_WITHDRAW_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activeStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activeValidators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"addValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"completeWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"dueWithdrawalAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"dueWithdrawalAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"inactivePools","outputs":[{"internalType":"uint256","name":"lastAUR","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"validator","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"isActiveValidator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"keeper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockPeriod","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"address","name":"staker","type":"address"}],"name":"pendingReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"pendingWithdrawals","outputs":[{"components":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct CMTStakingMock.Withdrawal[]","name":"withdrawals","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"removeValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newKeeper","type":"address"}],"name":"setKeeper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"period","type":"uint32"}],"name":"setLockPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setRewardPerBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"limit","type":"uint32"}],"name":"setValidatorLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"stake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"stakeTable","outputs":[{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"},{"internalType":"uint256","name":"pendingReward","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakerPool","outputs":[{"internalType":"uint256","name":"lastAUR","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakerRewardPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"validatorLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"validatorPool","outputs":[{"internalType":"uint256","name":"lastAUR","type":"uint256"},{"internalType":"uint256","name":"updateBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"validatorRewardPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"validatorWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"withdrawTable","outputs":[{"internalType":"int128","name":"_begin","type":"int128"},{"internalType":"int128","name":"_end","type":"int128"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1226:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:157:16","statements":[{"body":{"nodeType":"YulBlock","src":"158:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"167:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"175:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:16"},"nodeType":"YulFunctionCall","src":"160:22:16"},"nodeType":"YulExpressionStatement","src":"160:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:16"},"nodeType":"YulFunctionCall","src":"129:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:16"},"nodeType":"YulFunctionCall","src":"125:32:16"},"nodeType":"YulIf","src":"122:2:16"},{"nodeType":"YulAssignment","src":"193:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"209:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"203:5:16"},"nodeType":"YulFunctionCall","src":"203:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"193:6:16"}]},{"nodeType":"YulAssignment","src":"228:35:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"259:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"244:3:16"},"nodeType":"YulFunctionCall","src":"244:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:16"},"nodeType":"YulFunctionCall","src":"238:25:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"228:6:16"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"70:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"81:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"93:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"101:6:16","type":""}],"src":"14:255:16"},{"body":{"nodeType":"YulBlock","src":"448:179:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"465:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"476:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"458:6:16"},"nodeType":"YulFunctionCall","src":"458:21:16"},"nodeType":"YulExpressionStatement","src":"458:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"495:3:16"},"nodeType":"YulFunctionCall","src":"495:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"515:2:16","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"488:6:16"},"nodeType":"YulFunctionCall","src":"488:30:16"},"nodeType":"YulExpressionStatement","src":"488:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"538:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"549:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:16"},"nodeType":"YulFunctionCall","src":"534:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"554:31:16","type":"","value":"Invalid minimal stake amount."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"527:6:16"},"nodeType":"YulFunctionCall","src":"527:59:16"},"nodeType":"YulExpressionStatement","src":"527:59:16"},{"nodeType":"YulAssignment","src":"595:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"607:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"618:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"603:3:16"},"nodeType":"YulFunctionCall","src":"603:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"595:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"425:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"439:4:16","type":""}],"src":"274:353:16"},{"body":{"nodeType":"YulBlock","src":"806:229:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"823:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"834:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"816:6:16"},"nodeType":"YulFunctionCall","src":"816:21:16"},"nodeType":"YulExpressionStatement","src":"816:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"857:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"868:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"853:3:16"},"nodeType":"YulFunctionCall","src":"853:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"873:2:16","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:16"},"nodeType":"YulFunctionCall","src":"846:30:16"},"nodeType":"YulExpressionStatement","src":"846:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"896:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"907:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"892:3:16"},"nodeType":"YulFunctionCall","src":"892:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"912:34:16","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"885:6:16"},"nodeType":"YulFunctionCall","src":"885:62:16"},"nodeType":"YulExpressionStatement","src":"885:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"967:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"978:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:16"},"nodeType":"YulFunctionCall","src":"963:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"983:9:16","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:16"},"nodeType":"YulFunctionCall","src":"956:37:16"},"nodeType":"YulExpressionStatement","src":"956:37:16"},{"nodeType":"YulAssignment","src":"1002:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1025:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:16"},"nodeType":"YulFunctionCall","src":"1010:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1002:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"783:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"797:4:16","type":""}],"src":"632:403:16"},{"body":{"nodeType":"YulBlock","src":"1137:87:16","statements":[{"nodeType":"YulAssignment","src":"1147:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1170:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1155:3:16"},"nodeType":"YulFunctionCall","src":"1155:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1147:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1189:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1204:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1212:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1200:3:16"},"nodeType":"YulFunctionCall","src":"1200:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1182:6:16"},"nodeType":"YulFunctionCall","src":"1182:36:16"},"nodeType":"YulExpressionStatement","src":"1182:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1106:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1117:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1128:4:16","type":""}],"src":"1040:184:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_4c009e6be04a4bf5a524722105a5c84f8837faf53ccb8357e457d57ebdf8ae32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid minimal stake amount.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x374A CODESIZE SUB DUP1 PUSH3 0x374A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3B SWAP2 PUSH3 0x16D JUMP JUMPDEST PUSH3 0x45 PUSH3 0xAE JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP3 LT ISZERO PUSH3 0x9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E696D616C207374616B6520616D6F756E742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA0 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 MSTORE PUSH3 0x191 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x96 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND LT ISZERO PUSH3 0x16B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x180 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x355C PUSH3 0x1EE PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x691 ADD MSTORE PUSH2 0x26E7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x317 ADD MSTORE PUSH2 0x94C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xC01 ADD MSTORE DUP2 DUP2 PUSH2 0xC41 ADD MSTORE DUP2 DUP2 PUSH2 0x107D ADD MSTORE DUP2 DUP2 PUSH2 0x10BD ADD MSTORE PUSH2 0x11CC ADD MSTORE PUSH2 0x355C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x748747E6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC2A672E0 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xEAF7C9DC GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEAF7C9DC EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xF0544AC8 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0xF489F23B EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xF6A2314A EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2A672E0 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0xD4C6D1DE EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0xD849A502 EQ PUSH2 0x732 JUMPI DUP1 PUSH4 0xDAB31689 EQ PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x94409A56 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x94409A56 EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x9CED7E76 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xB6857844 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xBB872B4A EQ PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x748747E6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x7B66394C EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x7EA5DB42 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x522ABC40 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x57525CBC EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x40A141FF EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x45F7B8F4 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x4D238C8E EQ PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29451893 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x29451893 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x340C5A25 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x19D41774 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x24E770D0 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x26476204 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x27ED7188 EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x291 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x139 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xCD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0x465 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x524 CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x11BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x46A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x138 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH2 0x60F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x1466 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6EE CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x708 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x318E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 SLOAD PUSH2 0x131 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1813 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 SLOAD PUSH2 0x133 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x7C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x19DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E6 PUSH2 0x7E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x31DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x80E CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1B78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x861 PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 PUSH2 0x8B8 DUP4 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 PUSH2 0x8E6 PUSH2 0x8D5 DUP8 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x20 DUP2 SWAP1 SHR SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP9 SWAP1 PUSH2 0x909 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x916 JUMPI POP POP PUSH2 0x935 JUMP JUMPDEST PUSH2 0x920 DUP3 DUP7 PUSH2 0x33C9 JUMP JUMPDEST SWAP5 POP POP POP DUP1 PUSH2 0x92E SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BD JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x94A PUSH2 0x1C54 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374203E3D204D494E5F5354414B455F41 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x26A7AAA72A17 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FE PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP9 DUP9 MSTORE PUSH2 0x135 DUP8 MSTORE DUP6 DUP9 KECCAK256 CALLER DUP10 MSTORE DUP8 MSTORE SWAP7 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP3 DUP4 ADD DUP7 MSTORE DUP1 SLOAD DUP4 MSTORE SWAP1 DUP2 ADD SLOAD SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP5 ADD SLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0xAA8 DUP5 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD CALLVALUE SWAP1 DUP3 SWAP1 PUSH2 0xAD8 SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xAE5 DUP5 DUP4 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0xAEF DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP5 ADD DUP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 MLOAD DUP2 SSTORE DUP3 DUP9 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP10 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 MLOAD DUP2 SSTORE SWAP4 DUP9 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP7 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13B DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0xB90 SWAP1 DUP5 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH2 0x13A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x99039FCF0A98F484616C5196EE8B2ECFA971BABF0B519848289EA4DB381F85F7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC88 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0xCB7 DUP2 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x1FF6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C PUSH2 0x12E DUP4 PUSH2 0x2048 JUMP JUMPDEST PUSH2 0xCFE PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD0B PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST GT PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656D6F766520746865206F6E6C792076616C696461746F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD92 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH2 0xDF9 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xE03 DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0xE5E PUSH2 0x12E DUP6 PUSH2 0x2077 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP2 MLOAD PUSH2 0x13B DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE9E SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF0B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xF25 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xFB3 PUSH2 0x208C JUMP JUMPDEST PUSH2 0xFBB PUSH2 0x20BB JUMP JUMPDEST PUSH2 0xFC4 DUP4 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0xFCC PUSH2 0x213C JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0x15 OR SWAP1 SSTORE PUSH2 0x1001 PUSH8 0x4563918244F40000 PUSH2 0x2163 JUMP JUMPDEST PUSH2 0x100D PUSH3 0x93A80 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x1016 DUP3 PUSH2 0x2220 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x2220 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1104 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x112A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x1133 DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x113F DUP3 DUP3 PUSH1 0x1 PUSH2 0x1E22 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x114B PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x1156 PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103634B6B4BA103B30B63AB297 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH1 0x0 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x128C PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206B656570657220616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x113F CALLER DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x80 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP3 DUP6 MSTORE SWAP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x13DC JUMPI PUSH2 0x1393 DUP5 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x13C5 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x13D0 DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH2 0x93C JUMP JUMPDEST PUSH2 0x13E5 DUP6 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x141D JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1417 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x1450 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE JUMPDEST PUSH2 0x145A DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x146E PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265776172642070657220626C6F636B2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x14C6 PUSH2 0x1C9A JUMP JUMPDEST POP POP PUSH2 0xCD3 DUP2 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1531 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x153C PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 DUP10 MSTORE PUSH2 0x135 DUP9 MSTORE DUP7 DUP10 KECCAK256 CALLER DUP11 MSTORE DUP9 MSTORE SWAP8 DUP7 SWAP1 KECCAK256 DUP7 MLOAD SWAP4 DUP5 ADD DUP8 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD SLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15EA JUMPI POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO JUMPDEST PUSH2 0x1636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65207265636F7264206E6F7420666F756E642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1642 DUP9 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x169D JUMPI PUSH2 0x1651 DUP7 DUP6 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x165B DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1666 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1675 DUP7 DUP6 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x167F DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST DUP2 PUSH2 0x13B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16F4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE SWAP5 POP PUSH2 0x16DA DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x16E5 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x16F4 DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE SWAP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 MLOAD DUP2 SSTORE DUP3 DUP11 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP12 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 MLOAD DUP2 SSTORE SWAP4 DUP11 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP9 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13A DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1795 SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 CALLER SWAP2 PUSH32 0x18EDD09E80386CD99DF397E2E0D87D2BB259423EAE08645E776321A36FE680EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17F3 CALLER PUSH2 0x17EE DUP4 DUP6 PUSH2 0x33C9 JUMP JUMPDEST PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x180E PUSH2 0x12E PUSH2 0x281D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 TIMESTAMP PUSH2 0x881 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x187F PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1889 PUSH2 0x1C9A JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x18E5 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18F4 DUP3 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x18FE DUP3 DUP3 PUSH2 0x1D93 JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1912 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0x196E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74206F7220696E73756666696369656E742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x30B630B731B297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1980 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x19D6 SWAP1 DUP5 PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x1A8D DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AFB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1AD4 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B70 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1B19 PUSH2 0x8D5 DUP7 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 PUSH2 0x1B69 SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B01 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B80 PUSH2 0x1F9C JUMP JUMPDEST PUSH3 0x15180 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103637B1B5903832B934B7B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C00 PUSH2 0x1BE8 DUP5 PUSH2 0x282A JUMP JUMPDEST DUP6 SLOAD PUSH2 0x1BFB SWAP2 SWAP1 PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH2 0x3388 JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1CEE SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD SWAP3 SWAP5 POP PUSH2 0x1D1B SWAP3 PUSH2 0x257B JUMP JUMPDEST DUP3 MLOAD PUSH2 0x130 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH2 0x131 SSTORE DUP2 MLOAD PUSH2 0x132 SSTORE DUP2 ADD MLOAD PUSH2 0x133 SSTORE SWAP2 SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1D4B JUMPI POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MLOAD DUP3 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1D67 SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1D71 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1D8C SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1DAA SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206B65657065722063616E207570677261646520636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E55 JUMPI PUSH2 0x105C DUP4 PUSH2 0x2927 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EBE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1EBB SWAP2 DUP2 ADD SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH2 0x105C DUP4 DUP4 DUP4 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x1FFE PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B81 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x216E PUSH1 0x5 DUP3 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x138 DUP2 SWAP1 SSTORE PUSH2 0x217E SWAP1 DUP3 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x139 DUP2 SWAP1 SSTORE PUSH2 0x138 SLOAD PUSH1 0x40 MLOAD PUSH32 0x79A5349732F93288ABBB68E251C3DFC325BF3EE6FDE7786D919155D39733E0F5 SWAP3 PUSH2 0x21BE SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x401DAE40EDAC291EC00AD4F9E16968C6C86B73FCD6FAAD7E35A55A27FA64D048 SWAP1 PUSH1 0x20 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B21030B2323932B9B997 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x227E PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST LT PUSH2 0x22C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2B30B634B230BA37B9399030B93290333AB63617 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0xCE8 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x22F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST PUSH2 0x233E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220686164206265656E2061646465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x234A PUSH2 0x12E DUP3 PUSH2 0x2BB4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 DUP1 PUSH2 0x23CF PUSH2 0x8D5 DUP6 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP TIMESTAMP SWAP1 PUSH2 0x23F2 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x23FF JUMPI POP POP PUSH2 0x2487 JUMP JUMPDEST PUSH2 0x2409 DUP3 DUP5 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2414 DUP5 PUSH2 0x2C27 JUMP JUMPDEST POP DUP5 DUP4 GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x2476 PUSH2 0x2433 PUSH2 0x242D DUP8 DUP7 PUSH2 0x3420 JUMP JUMPDEST DUP4 PUSH2 0x2CAA JUMP JUMPDEST DUP6 SWAP1 DUP2 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND PUSH1 0x0 NOT ADD DUP2 SIGNEXTEND SWAP1 DUP2 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SWAP3 POP POP POP PUSH2 0x2487 JUMP JUMPDEST POP POP PUSH2 0x23A5 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x24E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420776974686472617761626C6520616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB00382203B46C3B6AD0A2D7AF0268E334BD9406256A7C7BA8F7FC8BC47F8CDE9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2525 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2537 DUP5 DUP5 PUSH2 0x2D13 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2546 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x202B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH2 0x25A1 JUMPI POP NUMBER PUSH1 0x20 DUP5 ADD MSTORE DUP3 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x25B4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x3401 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x25D3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x25DD SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST DUP6 MLOAD DUP7 SWAP1 PUSH2 0x25EC SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP NUMBER PUSH1 0x20 DUP6 ADD MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0x2661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP DUP4 PUSH2 0x2675 JUMPI DUP1 SWAP4 POP PUSH2 0x269F JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0x269F JUMPI DUP4 DUP6 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 SWAP3 POP DUP4 SWAP2 POP PUSH2 0x26DD SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x26B0 DUP3 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP3 POP DUP3 DUP7 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x26C4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP DUP5 MLOAD DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x26D8 SWAP1 DUP4 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x2769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617720616D6F756E74206D757374203E3D204D494E5F57495448 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x11149055D7D05353D55395 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x27D6 PUSH2 0x2776 DUP3 TIMESTAMP PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP5 SLOAD SWAP4 ADD SWAP1 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MUL SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6D92F7D3303F995BF21956BB0C51B388BAE348EAF45C23DEBD2CFA3FCD9EC646 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2811 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x28CB JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x29CC DUP4 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x29D9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x105C JUMPI PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2E52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2B4A JUMPI PUSH1 0x0 PUSH2 0x2A5B PUSH1 0x1 DUP4 PUSH2 0x3420 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2A6F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2AF0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2ACE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2B0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2F46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C46 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP5 SLOAD SWAP3 ADD SWAP1 SWAP3 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x2CC7 JUMPI POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO JUMPDEST PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081DDA5D1A191C985DD85B PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64206E617469766520746F6B656E2E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2DF2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1B DUP2 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE PUSH2 0x2EBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2ED5 SWAP2 SWAP1 PUSH2 0x3172 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F10 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F3D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3500 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2F95 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2F8D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2FA4 JUMPI POP DUP2 PUSH2 0x2066 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2FB4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FDF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2066 DUP2 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3007 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3027 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3032 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3042 DUP2 PUSH2 0x34AA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x305F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x306A DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3086 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3099 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30AB JUMPI PUSH2 0x30AB PUSH2 0x3494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x30D3 JUMPI PUSH2 0x30D3 PUSH2 0x3494 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x30EB JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x312F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3147 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2066 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3184 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31CF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31AA JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x31F8 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3249 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206E6F74206578697374206F7220686173206265656E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3932B6B7BB32B217 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x33AA JUMPI PUSH2 0x33AA PUSH2 0x347E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x33C3 JUMPI PUSH2 0x33C3 PUSH2 0x347E JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x33DC JUMPI PUSH2 0x33DC PUSH2 0x347E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x33FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x341B JUMPI PUSH2 0x341B PUSH2 0x347E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3432 JUMPI PUSH2 0x3432 PUSH2 0x347E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3452 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x343A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29E8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3477 JUMPI PUSH2 0x3477 PUSH2 0x347E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID JUMPDEST KECCAK256 DELEGATECALL 0xC 0xB5 0xE9 0xE6 CALLVALUE 0xA9 0xD 0xF9 0xA7 0x2B MLOAD PUSH13 0x11CC52281A4D1B7B67E672E2FE SLOAD 0x4F CALLCODE 0x2F CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212206A LOG2 0xCC 0xE0 PUSH22 0x230D2464B2E4142EEEBF77B830D3CF4D7F9AAB68802B ADDRESS COINBASE OR DUP7 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"588:15525:15:-:0;;;1332:4:5;1289:48;;;;2697:271:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2770:22;:20;:22::i;:::-;2828:7;2810:14;:25;;2802:67;;;;-1:-1:-1;;;2802:67:15;;476:2:16;2802:67:15;;;458:21:16;515:2;495:18;;;488:30;554:31;534:18;;;527:59;603:18;;2802:67:15;;;;;;;;;2879:33;;;;;2922:39;;588:15525;;5388:279:4;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:4;;834:2:16;5447:66:4;;;816:21:16;873:2;853:18;;;846:30;912:34;892:18;;;885:62;-1:-1:-1;;;963:18:16;;;956:37;1010:19;;5447:66:4;806:229:16;5447:66:4;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:4;5588:15;5573:30;;;;;;5622:28;;1182:36:16;;;5622:28:4;;1170:2:16;1155:18;5622:28:4;;;;;;;5523:138;5388:279::o;14:255:16:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:2;;;175:6;167;160:22;122:2;-1:-1:-1;;203:16:16;;259:2;244:18;;;238:25;203:16;;238:25;;-1:-1:-1;112:157:16:o;1137:87::-;588:15525:15;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22665:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:187:16","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:16"},"nodeType":"YulFunctionCall","src":"132:22:16"},"nodeType":"YulExpressionStatement","src":"132:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:16"},"nodeType":"YulFunctionCall","src":"101:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:16"},"nodeType":"YulFunctionCall","src":"97:32:16"},"nodeType":"YulIf","src":"94:2:16"},{"nodeType":"YulVariableDeclaration","src":"165:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:16"},"nodeType":"YulFunctionCall","src":"178:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"235:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"210:24:16"},"nodeType":"YulFunctionCall","src":"210:31:16"},"nodeType":"YulExpressionStatement","src":"210:31:16"},{"nodeType":"YulAssignment","src":"250:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"260:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"250:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:16","type":""}],"src":"14:257:16"},{"body":{"nodeType":"YulBlock","src":"371:238:16","statements":[{"body":{"nodeType":"YulBlock","src":"417:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"426:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"434:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"419:6:16"},"nodeType":"YulFunctionCall","src":"419:22:16"},"nodeType":"YulExpressionStatement","src":"419:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"392:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"401:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"388:3:16"},"nodeType":"YulFunctionCall","src":"388:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"413:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"384:3:16"},"nodeType":"YulFunctionCall","src":"384:32:16"},"nodeType":"YulIf","src":"381:2:16"},{"nodeType":"YulVariableDeclaration","src":"452:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"478:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"465:12:16"},"nodeType":"YulFunctionCall","src":"465:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"456:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"497:24:16"},"nodeType":"YulFunctionCall","src":"497:31:16"},"nodeType":"YulExpressionStatement","src":"497:31:16"},{"nodeType":"YulAssignment","src":"537:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"547:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"537:6:16"}]},{"nodeType":"YulAssignment","src":"561:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"588:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"599:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"584:3:16"},"nodeType":"YulFunctionCall","src":"584:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"571:12:16"},"nodeType":"YulFunctionCall","src":"571:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"561:6:16"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"329:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"340:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"352:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"360:6:16","type":""}],"src":"276:333:16"},{"body":{"nodeType":"YulBlock","src":"701:311:16","statements":[{"body":{"nodeType":"YulBlock","src":"747:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"756:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"764:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"749:6:16"},"nodeType":"YulFunctionCall","src":"749:22:16"},"nodeType":"YulExpressionStatement","src":"749:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"722:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"731:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"718:3:16"},"nodeType":"YulFunctionCall","src":"718:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"743:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"714:3:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulIf","src":"711:2:16"},{"nodeType":"YulVariableDeclaration","src":"782:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"808:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"795:12:16"},"nodeType":"YulFunctionCall","src":"795:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"786:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"852:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"827:24:16"},"nodeType":"YulFunctionCall","src":"827:31:16"},"nodeType":"YulExpressionStatement","src":"827:31:16"},{"nodeType":"YulAssignment","src":"867:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"877:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"867:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"891:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"923:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"934:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:16"},"nodeType":"YulFunctionCall","src":"919:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"906:12:16"},"nodeType":"YulFunctionCall","src":"906:32:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"895:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"972:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"947:24:16"},"nodeType":"YulFunctionCall","src":"947:33:16"},"nodeType":"YulExpressionStatement","src":"947:33:16"},{"nodeType":"YulAssignment","src":"989:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"999:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"989:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"659:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"670:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"682:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"690:6:16","type":""}],"src":"614:398:16"},{"body":{"nodeType":"YulBlock","src":"1113:1005:16","statements":[{"body":{"nodeType":"YulBlock","src":"1159:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1168:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:22:16"},"nodeType":"YulExpressionStatement","src":"1161:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1134:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1143:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1130:3:16"},"nodeType":"YulFunctionCall","src":"1130:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1155:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1126:3:16"},"nodeType":"YulFunctionCall","src":"1126:32:16"},"nodeType":"YulIf","src":"1123:2:16"},{"nodeType":"YulVariableDeclaration","src":"1194:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1220:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1207:12:16"},"nodeType":"YulFunctionCall","src":"1207:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1198:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1264:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1239:24:16"},"nodeType":"YulFunctionCall","src":"1239:31:16"},"nodeType":"YulExpressionStatement","src":"1239:31:16"},{"nodeType":"YulAssignment","src":"1279:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1289:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1279:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1303:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1334:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1345:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1330:3:16"},"nodeType":"YulFunctionCall","src":"1330:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1317:12:16"},"nodeType":"YulFunctionCall","src":"1317:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1307:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1358:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1368:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1362:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1413:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1422:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"1430:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1415:6:16"},"nodeType":"YulFunctionCall","src":"1415:22:16"},"nodeType":"YulExpressionStatement","src":"1415:22:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1401:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1409:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1398:2:16"},"nodeType":"YulFunctionCall","src":"1398:14:16"},"nodeType":"YulIf","src":"1395:2:16"},{"nodeType":"YulVariableDeclaration","src":"1448:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1462:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1473:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1458:3:16"},"nodeType":"YulFunctionCall","src":"1458:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1452:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1528:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1537:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"1545:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:22:16"},"nodeType":"YulExpressionStatement","src":"1530:22:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1507:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"1511:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1503:3:16"},"nodeType":"YulFunctionCall","src":"1503:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1492:6:16"},"nodeType":"YulFunctionCall","src":"1492:35:16"},"nodeType":"YulIf","src":"1489:2:16"},{"nodeType":"YulVariableDeclaration","src":"1563:26:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1586:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1573:12:16"},"nodeType":"YulFunctionCall","src":"1573:16:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1567:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1612:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1614:16:16"},"nodeType":"YulFunctionCall","src":"1614:18:16"},"nodeType":"YulExpressionStatement","src":"1614:18:16"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1604:2:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1608:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1601:2:16"},"nodeType":"YulFunctionCall","src":"1601:10:16"},"nodeType":"YulIf","src":"1598:2:16"},{"nodeType":"YulVariableDeclaration","src":"1643:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1657:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1653:3:16"},"nodeType":"YulFunctionCall","src":"1653:7:16"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1647:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1669:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1689:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1683:5:16"},"nodeType":"YulFunctionCall","src":"1683:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1673:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1701:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1747:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"1751:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1743:3:16"},"nodeType":"YulFunctionCall","src":"1743:13:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1758:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1739:3:16"},"nodeType":"YulFunctionCall","src":"1739:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"1763:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1735:3:16"},"nodeType":"YulFunctionCall","src":"1735:31:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1768:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1731:3:16"},"nodeType":"YulFunctionCall","src":"1731:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:16"},"nodeType":"YulFunctionCall","src":"1719:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1705:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1831:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1833:16:16"},"nodeType":"YulFunctionCall","src":"1833:18:16"},"nodeType":"YulExpressionStatement","src":"1833:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1790:10:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1802:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:16"},"nodeType":"YulFunctionCall","src":"1787:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1810:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1822:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1807:2:16"},"nodeType":"YulFunctionCall","src":"1807:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1784:2:16"},"nodeType":"YulFunctionCall","src":"1784:46:16"},"nodeType":"YulIf","src":"1781:2:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1873:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1862:6:16"},"nodeType":"YulFunctionCall","src":"1862:22:16"},"nodeType":"YulExpressionStatement","src":"1862:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1900:6:16"},{"name":"_3","nodeType":"YulIdentifier","src":"1908:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1893:6:16"},"nodeType":"YulFunctionCall","src":"1893:18:16"},"nodeType":"YulExpressionStatement","src":"1893:18:16"},{"body":{"nodeType":"YulBlock","src":"1957:26:16","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1966:6:16"},{"name":"value1","nodeType":"YulIdentifier","src":"1974:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1959:6:16"},"nodeType":"YulFunctionCall","src":"1959:22:16"},"nodeType":"YulExpressionStatement","src":"1959:22:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1934:2:16"},{"name":"_3","nodeType":"YulIdentifier","src":"1938:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1930:3:16"},"nodeType":"YulFunctionCall","src":"1930:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"1943:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1926:3:16"},"nodeType":"YulFunctionCall","src":"1926:20:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1948:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1923:2:16"},"nodeType":"YulFunctionCall","src":"1923:33:16"},"nodeType":"YulIf","src":"1920:2:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2009:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2017:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2005:3:16"},"nodeType":"YulFunctionCall","src":"2005:15:16"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2026:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2030:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2022:3:16"},"nodeType":"YulFunctionCall","src":"2022:11:16"},{"name":"_3","nodeType":"YulIdentifier","src":"2035:2:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1992:12:16"},"nodeType":"YulFunctionCall","src":"1992:46:16"},"nodeType":"YulExpressionStatement","src":"1992:46:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2062:6:16"},{"name":"_3","nodeType":"YulIdentifier","src":"2070:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2058:3:16"},"nodeType":"YulFunctionCall","src":"2058:15:16"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2054:3:16"},"nodeType":"YulFunctionCall","src":"2054:24:16"},{"name":"value1","nodeType":"YulIdentifier","src":"2080:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2047:6:16"},"nodeType":"YulFunctionCall","src":"2047:40:16"},"nodeType":"YulExpressionStatement","src":"2047:40:16"},{"nodeType":"YulAssignment","src":"2096:16:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2106:6:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2096:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1071:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1082:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1094:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1102:6:16","type":""}],"src":"1017:1101:16"},{"body":{"nodeType":"YulBlock","src":"2210:238:16","statements":[{"body":{"nodeType":"YulBlock","src":"2256:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2265:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2273:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2258:6:16"},"nodeType":"YulFunctionCall","src":"2258:22:16"},"nodeType":"YulExpressionStatement","src":"2258:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2231:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2240:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2227:3:16"},"nodeType":"YulFunctionCall","src":"2227:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2252:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2223:3:16"},"nodeType":"YulFunctionCall","src":"2223:32:16"},"nodeType":"YulIf","src":"2220:2:16"},{"nodeType":"YulVariableDeclaration","src":"2291:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2317:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2304:12:16"},"nodeType":"YulFunctionCall","src":"2304:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2295:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2361:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2336:24:16"},"nodeType":"YulFunctionCall","src":"2336:31:16"},"nodeType":"YulExpressionStatement","src":"2336:31:16"},{"nodeType":"YulAssignment","src":"2376:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2386:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2376:6:16"}]},{"nodeType":"YulAssignment","src":"2400:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2427:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2438:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2423:3:16"},"nodeType":"YulFunctionCall","src":"2423:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2410:12:16"},"nodeType":"YulFunctionCall","src":"2410:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2400:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2168:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2179:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2191:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2199:6:16","type":""}],"src":"2123:325:16"},{"body":{"nodeType":"YulBlock","src":"2534:113:16","statements":[{"body":{"nodeType":"YulBlock","src":"2580:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2589:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2582:6:16"},"nodeType":"YulFunctionCall","src":"2582:22:16"},"nodeType":"YulExpressionStatement","src":"2582:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2555:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2564:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2551:3:16"},"nodeType":"YulFunctionCall","src":"2551:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2576:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2547:3:16"},"nodeType":"YulFunctionCall","src":"2547:32:16"},"nodeType":"YulIf","src":"2544:2:16"},{"nodeType":"YulAssignment","src":"2615:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2631:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2625:5:16"},"nodeType":"YulFunctionCall","src":"2625:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2615:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2500:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2511:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2523:6:16","type":""}],"src":"2453:194:16"},{"body":{"nodeType":"YulBlock","src":"2722:120:16","statements":[{"body":{"nodeType":"YulBlock","src":"2768:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2777:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2785:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2770:6:16"},"nodeType":"YulFunctionCall","src":"2770:22:16"},"nodeType":"YulExpressionStatement","src":"2770:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2743:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2752:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2739:3:16"},"nodeType":"YulFunctionCall","src":"2739:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2764:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2735:3:16"},"nodeType":"YulFunctionCall","src":"2735:32:16"},"nodeType":"YulIf","src":"2732:2:16"},{"nodeType":"YulAssignment","src":"2803:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2826:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2813:12:16"},"nodeType":"YulFunctionCall","src":"2813:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2803:6:16"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2688:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2699:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2711:6:16","type":""}],"src":"2652:190:16"},{"body":{"nodeType":"YulBlock","src":"2916:227:16","statements":[{"body":{"nodeType":"YulBlock","src":"2962:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2971:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2979:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2964:6:16"},"nodeType":"YulFunctionCall","src":"2964:22:16"},"nodeType":"YulExpressionStatement","src":"2964:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2937:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2946:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2933:3:16"},"nodeType":"YulFunctionCall","src":"2933:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2958:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2929:3:16"},"nodeType":"YulFunctionCall","src":"2929:32:16"},"nodeType":"YulIf","src":"2926:2:16"},{"nodeType":"YulVariableDeclaration","src":"2997:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3023:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3010:12:16"},"nodeType":"YulFunctionCall","src":"3010:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3001:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3087:26:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3096:6:16"},{"name":"value0","nodeType":"YulIdentifier","src":"3104:6:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3089:6:16"},"nodeType":"YulFunctionCall","src":"3089:22:16"},"nodeType":"YulExpressionStatement","src":"3089:22:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3055:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3066:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3073:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3062:3:16"},"nodeType":"YulFunctionCall","src":"3062:22:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3052:2:16"},"nodeType":"YulFunctionCall","src":"3052:33:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3045:6:16"},"nodeType":"YulFunctionCall","src":"3045:41:16"},"nodeType":"YulIf","src":"3042:2:16"},{"nodeType":"YulAssignment","src":"3122:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"3132:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3122:6:16"}]}]},"name":"abi_decode_tuple_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2882:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2893:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2905:6:16","type":""}],"src":"2847:296:16"},{"body":{"nodeType":"YulBlock","src":"3285:137:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3295:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3315:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3309:5:16"},"nodeType":"YulFunctionCall","src":"3309:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3299:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3357:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3365:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3353:3:16"},"nodeType":"YulFunctionCall","src":"3353:17:16"},{"name":"pos","nodeType":"YulIdentifier","src":"3372:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3377:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3331:21:16"},"nodeType":"YulFunctionCall","src":"3331:53:16"},"nodeType":"YulExpressionStatement","src":"3331:53:16"},{"nodeType":"YulAssignment","src":"3393:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3404:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3409:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3400:3:16"},"nodeType":"YulFunctionCall","src":"3400:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3393:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3261:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3266:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3277:3:16","type":""}],"src":"3148:274:16"},{"body":{"nodeType":"YulBlock","src":"3618:14:16","statements":[{"nodeType":"YulAssignment","src":"3620:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"3627:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3620:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3602:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3610:3:16","type":""}],"src":"3427:205:16"},{"body":{"nodeType":"YulBlock","src":"3738:102:16","statements":[{"nodeType":"YulAssignment","src":"3748:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3760:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3771:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3756:3:16"},"nodeType":"YulFunctionCall","src":"3756:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3748:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3790:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3805:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3821:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3826:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3817:3:16"},"nodeType":"YulFunctionCall","src":"3817:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3813:3:16"},"nodeType":"YulFunctionCall","src":"3813:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3801:3:16"},"nodeType":"YulFunctionCall","src":"3801:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3783:6:16"},"nodeType":"YulFunctionCall","src":"3783:51:16"},"nodeType":"YulExpressionStatement","src":"3783:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3707:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3718:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3729:4:16","type":""}],"src":"3637:203:16"},{"body":{"nodeType":"YulBlock","src":"3968:161:16","statements":[{"nodeType":"YulAssignment","src":"3978:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3990:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4001:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3986:3:16"},"nodeType":"YulFunctionCall","src":"3986:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3978:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4020:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4035:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4051:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4056:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4047:3:16"},"nodeType":"YulFunctionCall","src":"4047:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4060:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4043:3:16"},"nodeType":"YulFunctionCall","src":"4043:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4031:3:16"},"nodeType":"YulFunctionCall","src":"4031:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4013:6:16"},"nodeType":"YulFunctionCall","src":"4013:51:16"},"nodeType":"YulExpressionStatement","src":"4013:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4084:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4095:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4080:3:16"},"nodeType":"YulFunctionCall","src":"4080:18:16"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4114:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4107:6:16"},"nodeType":"YulFunctionCall","src":"4107:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4100:6:16"},"nodeType":"YulFunctionCall","src":"4100:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4073:6:16"},"nodeType":"YulFunctionCall","src":"4073:50:16"},"nodeType":"YulExpressionStatement","src":"4073:50:16"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3929:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3940:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3948:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3959:4:16","type":""}],"src":"3845:284:16"},{"body":{"nodeType":"YulBlock","src":"4285:510:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4295:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4305:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4299:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4316:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4345:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4330:3:16"},"nodeType":"YulFunctionCall","src":"4330:18:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4320:6:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4375:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4357:6:16"},"nodeType":"YulFunctionCall","src":"4357:21:16"},"nodeType":"YulExpressionStatement","src":"4357:21:16"},{"nodeType":"YulVariableDeclaration","src":"4387:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4398:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4391:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4413:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4433:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4427:5:16"},"nodeType":"YulFunctionCall","src":"4427:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4417:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4456:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"4464:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4449:6:16"},"nodeType":"YulFunctionCall","src":"4449:22:16"},"nodeType":"YulExpressionStatement","src":"4449:22:16"},{"nodeType":"YulAssignment","src":"4480:25:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4502:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4487:3:16"},"nodeType":"YulFunctionCall","src":"4487:18:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4480:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"4514:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4532:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4540:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4528:3:16"},"nodeType":"YulFunctionCall","src":"4528:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4518:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4552:13:16","value":{"name":"tail","nodeType":"YulIdentifier","src":"4561:4:16"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4556:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4623:146:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4644:3:16"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4659:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4653:5:16"},"nodeType":"YulFunctionCall","src":"4653:13:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4676:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4681:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4672:3:16"},"nodeType":"YulFunctionCall","src":"4672:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4685:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4668:3:16"},"nodeType":"YulFunctionCall","src":"4668:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4649:3:16"},"nodeType":"YulFunctionCall","src":"4649:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4637:6:16"},"nodeType":"YulFunctionCall","src":"4637:52:16"},"nodeType":"YulExpressionStatement","src":"4637:52:16"},{"nodeType":"YulAssignment","src":"4702:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4713:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4718:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4709:3:16"},"nodeType":"YulFunctionCall","src":"4709:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4702:3:16"}]},{"nodeType":"YulAssignment","src":"4734:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4748:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4756:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:16"},"nodeType":"YulFunctionCall","src":"4744:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4734:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4585:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"4588:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4582:2:16"},"nodeType":"YulFunctionCall","src":"4582:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4596:18:16","statements":[{"nodeType":"YulAssignment","src":"4598:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4607:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"4610:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4603:3:16"},"nodeType":"YulFunctionCall","src":"4603:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4598:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4578:3:16","statements":[]},"src":"4574:195:16"},{"nodeType":"YulAssignment","src":"4778:11:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"4786:3:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4778:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4254:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4265:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4276:4:16","type":""}],"src":"4134:661:16"},{"body":{"nodeType":"YulBlock","src":"5007:590:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5017:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5021:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5038:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5056:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5067:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5052:3:16"},"nodeType":"YulFunctionCall","src":"5052:18:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5042:6:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5086:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5097:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5079:6:16"},"nodeType":"YulFunctionCall","src":"5079:21:16"},"nodeType":"YulExpressionStatement","src":"5079:21:16"},{"nodeType":"YulVariableDeclaration","src":"5109:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5120:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5113:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5135:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5155:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5149:5:16"},"nodeType":"YulFunctionCall","src":"5149:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5139:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5178:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"5186:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5171:6:16"},"nodeType":"YulFunctionCall","src":"5171:22:16"},"nodeType":"YulExpressionStatement","src":"5171:22:16"},{"nodeType":"YulVariableDeclaration","src":"5202:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5212:2:16","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5206:2:16","type":""}]},{"nodeType":"YulAssignment","src":"5223:25:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5234:9:16"},{"name":"_2","nodeType":"YulIdentifier","src":"5245:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5230:3:16"},"nodeType":"YulFunctionCall","src":"5230:18:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5223:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"5257:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5275:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5283:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5271:3:16"},"nodeType":"YulFunctionCall","src":"5271:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5261:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5295:13:16","value":{"name":"tail","nodeType":"YulIdentifier","src":"5304:4:16"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5299:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5366:205:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5380:23:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5396:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5390:5:16"},"nodeType":"YulFunctionCall","src":"5390:13:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5384:2:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5423:3:16"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5434:2:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5428:5:16"},"nodeType":"YulFunctionCall","src":"5428:9:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5416:6:16"},"nodeType":"YulFunctionCall","src":"5416:22:16"},"nodeType":"YulExpressionStatement","src":"5416:22:16"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5462:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5467:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5458:3:16"},"nodeType":"YulFunctionCall","src":"5458:12:16"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5482:2:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5486:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5478:3:16"},"nodeType":"YulFunctionCall","src":"5478:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5472:5:16"},"nodeType":"YulFunctionCall","src":"5472:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5451:6:16"},"nodeType":"YulFunctionCall","src":"5451:40:16"},"nodeType":"YulExpressionStatement","src":"5451:40:16"},{"nodeType":"YulAssignment","src":"5504:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5515:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"5520:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5511:3:16"},"nodeType":"YulFunctionCall","src":"5511:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5504:3:16"}]},{"nodeType":"YulAssignment","src":"5536:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5550:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5558:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5546:3:16"},"nodeType":"YulFunctionCall","src":"5546:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5536:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5328:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"5331:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5325:2:16"},"nodeType":"YulFunctionCall","src":"5325:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5339:18:16","statements":[{"nodeType":"YulAssignment","src":"5341:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5350:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"5353:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5346:3:16"},"nodeType":"YulFunctionCall","src":"5346:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5341:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5321:3:16","statements":[]},"src":"5317:254:16"},{"nodeType":"YulAssignment","src":"5580:11:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"5588:3:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5580:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4976:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4987:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4998:4:16","type":""}],"src":"4800:797:16"},{"body":{"nodeType":"YulBlock","src":"5697:92:16","statements":[{"nodeType":"YulAssignment","src":"5707:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5719:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5730:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5715:3:16"},"nodeType":"YulFunctionCall","src":"5715:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5707:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5749:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5774:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5767:6:16"},"nodeType":"YulFunctionCall","src":"5767:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5760:6:16"},"nodeType":"YulFunctionCall","src":"5760:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5742:6:16"},"nodeType":"YulFunctionCall","src":"5742:41:16"},"nodeType":"YulExpressionStatement","src":"5742:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5666:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5677:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5688:4:16","type":""}],"src":"5602:187:16"},{"body":{"nodeType":"YulBlock","src":"5895:76:16","statements":[{"nodeType":"YulAssignment","src":"5905:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5917:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5928:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5913:3:16"},"nodeType":"YulFunctionCall","src":"5913:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5905:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5947:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"5958:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:16"},"nodeType":"YulFunctionCall","src":"5940:25:16"},"nodeType":"YulExpressionStatement","src":"5940:25:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5864:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5875:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5886:4:16","type":""}],"src":"5794:177:16"},{"body":{"nodeType":"YulBlock","src":"6101:151:16","statements":[{"nodeType":"YulAssignment","src":"6111:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6123:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6134:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6119:3:16"},"nodeType":"YulFunctionCall","src":"6119:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6111:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6153:9:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6175:2:16","type":"","value":"15"},{"name":"value0","nodeType":"YulIdentifier","src":"6179:6:16"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6164:10:16"},"nodeType":"YulFunctionCall","src":"6164:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6146:6:16"},"nodeType":"YulFunctionCall","src":"6146:41:16"},"nodeType":"YulExpressionStatement","src":"6146:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6207:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6218:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6203:3:16"},"nodeType":"YulFunctionCall","src":"6203:18:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6234:2:16","type":"","value":"15"},{"name":"value1","nodeType":"YulIdentifier","src":"6238:6:16"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6223:10:16"},"nodeType":"YulFunctionCall","src":"6223:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6196:6:16"},"nodeType":"YulFunctionCall","src":"6196:50:16"},"nodeType":"YulExpressionStatement","src":"6196:50:16"}]},"name":"abi_encode_tuple_t_int128_t_int128__to_t_int128_t_int128__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6062:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6073:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6081:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6092:4:16","type":""}],"src":"5976:276:16"},{"body":{"nodeType":"YulBlock","src":"6364:87:16","statements":[{"nodeType":"YulAssignment","src":"6374:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6386:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6397:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6382:3:16"},"nodeType":"YulFunctionCall","src":"6382:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6374:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6416:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6431:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6439:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6427:3:16"},"nodeType":"YulFunctionCall","src":"6427:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6409:6:16"},"nodeType":"YulFunctionCall","src":"6409:36:16"},"nodeType":"YulExpressionStatement","src":"6409:36:16"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6333:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6344:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6355:4:16","type":""}],"src":"6257:194:16"},{"body":{"nodeType":"YulBlock","src":"6577:262:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6594:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6605:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6587:6:16"},"nodeType":"YulFunctionCall","src":"6587:21:16"},"nodeType":"YulExpressionStatement","src":"6587:21:16"},{"nodeType":"YulVariableDeclaration","src":"6617:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6637:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6631:5:16"},"nodeType":"YulFunctionCall","src":"6631:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6621:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6664:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6675:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6660:3:16"},"nodeType":"YulFunctionCall","src":"6660:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"6680:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6653:6:16"},"nodeType":"YulFunctionCall","src":"6653:34:16"},"nodeType":"YulExpressionStatement","src":"6653:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6722:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6730:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6718:3:16"},"nodeType":"YulFunctionCall","src":"6718:15:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6739:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6750:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6735:3:16"},"nodeType":"YulFunctionCall","src":"6735:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"6755:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6696:21:16"},"nodeType":"YulFunctionCall","src":"6696:66:16"},"nodeType":"YulExpressionStatement","src":"6696:66:16"},{"nodeType":"YulAssignment","src":"6771:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6806:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6814:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6802:3:16"},"nodeType":"YulFunctionCall","src":"6802:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6823:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6819:3:16"},"nodeType":"YulFunctionCall","src":"6819:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6798:3:16"},"nodeType":"YulFunctionCall","src":"6798:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:16"},"nodeType":"YulFunctionCall","src":"6783:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"6830:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:16"},"nodeType":"YulFunctionCall","src":"6779:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6771:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6546:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6557:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6568:4:16","type":""}],"src":"6456:383:16"},{"body":{"nodeType":"YulBlock","src":"7018:229:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7035:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7046:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7028:6:16"},"nodeType":"YulFunctionCall","src":"7028:21:16"},"nodeType":"YulExpressionStatement","src":"7028:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7069:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7080:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7065:3:16"},"nodeType":"YulFunctionCall","src":"7065:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7085:2:16","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7058:6:16"},"nodeType":"YulFunctionCall","src":"7058:30:16"},"nodeType":"YulExpressionStatement","src":"7058:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7108:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7119:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7104:3:16"},"nodeType":"YulFunctionCall","src":"7104:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7124:34:16","type":"","value":"Invalid amount or insufficient b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7097:6:16"},"nodeType":"YulFunctionCall","src":"7097:62:16"},"nodeType":"YulExpressionStatement","src":"7097:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7179:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7190:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7175:3:16"},"nodeType":"YulFunctionCall","src":"7175:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7195:9:16","type":"","value":"alance."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7168:6:16"},"nodeType":"YulFunctionCall","src":"7168:37:16"},"nodeType":"YulExpressionStatement","src":"7168:37:16"},{"nodeType":"YulAssignment","src":"7214:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7226:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7237:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7222:3:16"},"nodeType":"YulFunctionCall","src":"7222:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7214:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6995:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7009:4:16","type":""}],"src":"6844:403:16"},{"body":{"nodeType":"YulBlock","src":"7426:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7443:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7454:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7436:6:16"},"nodeType":"YulFunctionCall","src":"7436:21:16"},"nodeType":"YulExpressionStatement","src":"7436:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7477:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7488:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7473:3:16"},"nodeType":"YulFunctionCall","src":"7473:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7493:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7466:6:16"},"nodeType":"YulFunctionCall","src":"7466:30:16"},"nodeType":"YulExpressionStatement","src":"7466:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7516:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7527:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7512:3:16"},"nodeType":"YulFunctionCall","src":"7512:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7532:22:16","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7505:6:16"},"nodeType":"YulFunctionCall","src":"7505:50:16"},"nodeType":"YulExpressionStatement","src":"7505:50:16"},{"nodeType":"YulAssignment","src":"7564:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7576:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7587:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7572:3:16"},"nodeType":"YulFunctionCall","src":"7572:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7564:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7403:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7417:4:16","type":""}],"src":"7252:344:16"},{"body":{"nodeType":"YulBlock","src":"7775:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7792:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7803:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7785:6:16"},"nodeType":"YulFunctionCall","src":"7785:21:16"},"nodeType":"YulExpressionStatement","src":"7785:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7826:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7837:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7822:3:16"},"nodeType":"YulFunctionCall","src":"7822:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7842:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7815:6:16"},"nodeType":"YulFunctionCall","src":"7815:30:16"},"nodeType":"YulExpressionStatement","src":"7815:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7865:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7876:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7861:3:16"},"nodeType":"YulFunctionCall","src":"7861:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7881:34:16","type":"","value":"Cannot remove the only validator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7854:6:16"},"nodeType":"YulFunctionCall","src":"7854:62:16"},"nodeType":"YulExpressionStatement","src":"7854:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7936:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7947:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:16"},"nodeType":"YulFunctionCall","src":"7932:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"7952:3:16","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7925:6:16"},"nodeType":"YulFunctionCall","src":"7925:31:16"},"nodeType":"YulExpressionStatement","src":"7925:31:16"},{"nodeType":"YulAssignment","src":"7965:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7977:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7988:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7973:3:16"},"nodeType":"YulFunctionCall","src":"7973:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7965:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7752:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7766:4:16","type":""}],"src":"7601:397:16"},{"body":{"nodeType":"YulBlock","src":"8177:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8194:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8205:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8187:6:16"},"nodeType":"YulFunctionCall","src":"8187:21:16"},"nodeType":"YulExpressionStatement","src":"8187:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8228:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8239:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:16"},"nodeType":"YulFunctionCall","src":"8224:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8244:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:16"},"nodeType":"YulFunctionCall","src":"8217:30:16"},"nodeType":"YulExpressionStatement","src":"8217:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8267:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8278:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8263:3:16"},"nodeType":"YulFunctionCall","src":"8263:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8283:34:16","type":"","value":"Stake amount must >= MIN_STAKE_A"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8256:6:16"},"nodeType":"YulFunctionCall","src":"8256:62:16"},"nodeType":"YulExpressionStatement","src":"8256:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8338:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8349:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8334:3:16"},"nodeType":"YulFunctionCall","src":"8334:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8354:8:16","type":"","value":"MOUNT."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8327:6:16"},"nodeType":"YulFunctionCall","src":"8327:36:16"},"nodeType":"YulExpressionStatement","src":"8327:36:16"},{"nodeType":"YulAssignment","src":"8372:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8395:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:16"},"nodeType":"YulFunctionCall","src":"8380:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8154:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8168:4:16","type":""}],"src":"8003:402:16"},{"body":{"nodeType":"YulBlock","src":"8584:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8601:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8612:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8594:6:16"},"nodeType":"YulFunctionCall","src":"8594:21:16"},"nodeType":"YulExpressionStatement","src":"8594:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8635:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8646:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8631:3:16"},"nodeType":"YulFunctionCall","src":"8631:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8651:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8624:6:16"},"nodeType":"YulFunctionCall","src":"8624:30:16"},"nodeType":"YulExpressionStatement","src":"8624:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8674:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8685:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8670:3:16"},"nodeType":"YulFunctionCall","src":"8670:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8690:34:16","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8663:6:16"},"nodeType":"YulFunctionCall","src":"8663:62:16"},"nodeType":"YulExpressionStatement","src":"8663:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8745:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8756:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8741:3:16"},"nodeType":"YulFunctionCall","src":"8741:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"8761:8:16","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8734:6:16"},"nodeType":"YulFunctionCall","src":"8734:36:16"},"nodeType":"YulExpressionStatement","src":"8734:36:16"},{"nodeType":"YulAssignment","src":"8779:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8791:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8802:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8787:3:16"},"nodeType":"YulFunctionCall","src":"8787:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8779:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8561:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8575:4:16","type":""}],"src":"8410:402:16"},{"body":{"nodeType":"YulBlock","src":"8991:175:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9008:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9019:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9001:6:16"},"nodeType":"YulFunctionCall","src":"9001:21:16"},"nodeType":"YulExpressionStatement","src":"9001:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9042:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9053:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:16"},"nodeType":"YulFunctionCall","src":"9038:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9058:2:16","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9031:6:16"},"nodeType":"YulFunctionCall","src":"9031:30:16"},"nodeType":"YulExpressionStatement","src":"9031:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9081:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9092:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9077:3:16"},"nodeType":"YulFunctionCall","src":"9077:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9097:27:16","type":"","value":"Validator had been added."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9070:6:16"},"nodeType":"YulFunctionCall","src":"9070:55:16"},"nodeType":"YulExpressionStatement","src":"9070:55:16"},{"nodeType":"YulAssignment","src":"9134:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9146:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9157:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9142:3:16"},"nodeType":"YulFunctionCall","src":"9142:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9134:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8968:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8982:4:16","type":""}],"src":"8817:349:16"},{"body":{"nodeType":"YulBlock","src":"9345:234:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9362:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9373:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9355:6:16"},"nodeType":"YulFunctionCall","src":"9355:21:16"},"nodeType":"YulExpressionStatement","src":"9355:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9396:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9407:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9392:3:16"},"nodeType":"YulFunctionCall","src":"9392:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9412:2:16","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9385:6:16"},"nodeType":"YulFunctionCall","src":"9385:30:16"},"nodeType":"YulExpressionStatement","src":"9385:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9435:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9446:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:16"},"nodeType":"YulFunctionCall","src":"9431:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9451:34:16","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9424:6:16"},"nodeType":"YulFunctionCall","src":"9424:62:16"},"nodeType":"YulExpressionStatement","src":"9424:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9506:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9517:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9502:3:16"},"nodeType":"YulFunctionCall","src":"9502:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9522:14:16","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9495:6:16"},"nodeType":"YulFunctionCall","src":"9495:42:16"},"nodeType":"YulExpressionStatement","src":"9495:42:16"},{"nodeType":"YulAssignment","src":"9546:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9569:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:16"},"nodeType":"YulFunctionCall","src":"9554:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9546:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9322:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9336:4:16","type":""}],"src":"9171:408:16"},{"body":{"nodeType":"YulBlock","src":"9758:229:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9775:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9786:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9768:6:16"},"nodeType":"YulFunctionCall","src":"9768:21:16"},"nodeType":"YulExpressionStatement","src":"9768:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9809:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9820:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9805:3:16"},"nodeType":"YulFunctionCall","src":"9805:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9825:2:16","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:16"},"nodeType":"YulFunctionCall","src":"9798:30:16"},"nodeType":"YulExpressionStatement","src":"9798:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9848:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9859:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9844:3:16"},"nodeType":"YulFunctionCall","src":"9844:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9864:34:16","type":"","value":"SafeCast: value doesn't fit in 1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9837:6:16"},"nodeType":"YulFunctionCall","src":"9837:62:16"},"nodeType":"YulExpressionStatement","src":"9837:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9919:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9930:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9915:3:16"},"nodeType":"YulFunctionCall","src":"9915:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"9935:9:16","type":"","value":"28 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9908:6:16"},"nodeType":"YulFunctionCall","src":"9908:37:16"},"nodeType":"YulExpressionStatement","src":"9908:37:16"},{"nodeType":"YulAssignment","src":"9954:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9966:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9977:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9962:3:16"},"nodeType":"YulFunctionCall","src":"9962:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9954:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9735:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9749:4:16","type":""}],"src":"9584:403:16"},{"body":{"nodeType":"YulBlock","src":"10166:175:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10183:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10194:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10176:6:16"},"nodeType":"YulFunctionCall","src":"10176:21:16"},"nodeType":"YulExpressionStatement","src":"10176:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10217:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10228:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10213:3:16"},"nodeType":"YulFunctionCall","src":"10213:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10233:2:16","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10206:6:16"},"nodeType":"YulFunctionCall","src":"10206:30:16"},"nodeType":"YulExpressionStatement","src":"10206:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10256:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10267:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10252:3:16"},"nodeType":"YulFunctionCall","src":"10252:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"10272:27:16","type":"","value":"Invalid reward per block."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10245:6:16"},"nodeType":"YulFunctionCall","src":"10245:55:16"},"nodeType":"YulExpressionStatement","src":"10245:55:16"},{"nodeType":"YulAssignment","src":"10309:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10321:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10332:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10317:3:16"},"nodeType":"YulFunctionCall","src":"10317:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10309:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10143:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10157:4:16","type":""}],"src":"9992:349:16"},{"body":{"nodeType":"YulBlock","src":"10520:234:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10537:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10548:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10530:6:16"},"nodeType":"YulFunctionCall","src":"10530:21:16"},"nodeType":"YulExpressionStatement","src":"10530:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10571:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10582:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10567:3:16"},"nodeType":"YulFunctionCall","src":"10567:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10587:2:16","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10560:6:16"},"nodeType":"YulFunctionCall","src":"10560:30:16"},"nodeType":"YulExpressionStatement","src":"10560:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10610:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10621:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10606:3:16"},"nodeType":"YulFunctionCall","src":"10606:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"10626:34:16","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10599:6:16"},"nodeType":"YulFunctionCall","src":"10599:62:16"},"nodeType":"YulExpressionStatement","src":"10599:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10681:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10692:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10677:3:16"},"nodeType":"YulFunctionCall","src":"10677:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"10697:14:16","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10670:6:16"},"nodeType":"YulFunctionCall","src":"10670:42:16"},"nodeType":"YulExpressionStatement","src":"10670:42:16"},{"nodeType":"YulAssignment","src":"10721:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10733:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10744:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10729:3:16"},"nodeType":"YulFunctionCall","src":"10729:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10721:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10497:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10511:4:16","type":""}],"src":"10346:408:16"},{"body":{"nodeType":"YulBlock","src":"10933:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10950:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10961:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10943:6:16"},"nodeType":"YulFunctionCall","src":"10943:21:16"},"nodeType":"YulExpressionStatement","src":"10943:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10984:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10995:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10980:3:16"},"nodeType":"YulFunctionCall","src":"10980:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11000:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:16"},"nodeType":"YulFunctionCall","src":"10973:30:16"},"nodeType":"YulExpressionStatement","src":"10973:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11023:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11034:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11019:3:16"},"nodeType":"YulFunctionCall","src":"11019:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11039:34:16","type":"","value":"Insufficient withdrawable amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11012:6:16"},"nodeType":"YulFunctionCall","src":"11012:62:16"},"nodeType":"YulExpressionStatement","src":"11012:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11094:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11105:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11090:3:16"},"nodeType":"YulFunctionCall","src":"11090:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11110:3:16","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11083:6:16"},"nodeType":"YulFunctionCall","src":"11083:31:16"},"nodeType":"YulExpressionStatement","src":"11083:31:16"},{"nodeType":"YulAssignment","src":"11123:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11135:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11146:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11131:3:16"},"nodeType":"YulFunctionCall","src":"11131:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11123:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10910:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10924:4:16","type":""}],"src":"10759:397:16"},{"body":{"nodeType":"YulBlock","src":"11335:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11363:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11345:6:16"},"nodeType":"YulFunctionCall","src":"11345:21:16"},"nodeType":"YulExpressionStatement","src":"11345:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11386:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11397:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:16"},"nodeType":"YulFunctionCall","src":"11382:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11402:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11375:6:16"},"nodeType":"YulFunctionCall","src":"11375:30:16"},"nodeType":"YulExpressionStatement","src":"11375:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11436:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11421:3:16"},"nodeType":"YulFunctionCall","src":"11421:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11441:18:16","type":"","value":"Invalid address."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11414:6:16"},"nodeType":"YulFunctionCall","src":"11414:46:16"},"nodeType":"YulExpressionStatement","src":"11414:46:16"},{"nodeType":"YulAssignment","src":"11469:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11481:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11492:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11477:3:16"},"nodeType":"YulFunctionCall","src":"11477:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11469:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11312:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11326:4:16","type":""}],"src":"11161:340:16"},{"body":{"nodeType":"YulBlock","src":"11680:246:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11697:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11708:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11690:6:16"},"nodeType":"YulFunctionCall","src":"11690:21:16"},"nodeType":"YulExpressionStatement","src":"11690:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11731:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11742:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11727:3:16"},"nodeType":"YulFunctionCall","src":"11727:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11747:2:16","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11720:6:16"},"nodeType":"YulFunctionCall","src":"11720:30:16"},"nodeType":"YulExpressionStatement","src":"11720:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11770:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11766:3:16"},"nodeType":"YulFunctionCall","src":"11766:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11786:34:16","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11759:6:16"},"nodeType":"YulFunctionCall","src":"11759:62:16"},"nodeType":"YulExpressionStatement","src":"11759:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11841:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11852:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11837:3:16"},"nodeType":"YulFunctionCall","src":"11837:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"11857:26:16","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11830:6:16"},"nodeType":"YulFunctionCall","src":"11830:54:16"},"nodeType":"YulExpressionStatement","src":"11830:54:16"},{"nodeType":"YulAssignment","src":"11893:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11905:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11916:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11901:3:16"},"nodeType":"YulFunctionCall","src":"11901:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11893:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11657:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11671:4:16","type":""}],"src":"11506:420:16"},{"body":{"nodeType":"YulBlock","src":"12105:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12122:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12133:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12115:6:16"},"nodeType":"YulFunctionCall","src":"12115:21:16"},"nodeType":"YulExpressionStatement","src":"12115:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12156:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12167:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12152:3:16"},"nodeType":"YulFunctionCall","src":"12152:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12172:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12145:6:16"},"nodeType":"YulFunctionCall","src":"12145:30:16"},"nodeType":"YulExpressionStatement","src":"12145:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12195:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12206:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12191:3:16"},"nodeType":"YulFunctionCall","src":"12191:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12211:18:16","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12184:6:16"},"nodeType":"YulFunctionCall","src":"12184:46:16"},"nodeType":"YulExpressionStatement","src":"12184:46:16"},{"nodeType":"YulAssignment","src":"12239:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12251:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12262:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12247:3:16"},"nodeType":"YulFunctionCall","src":"12247:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12239:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12082:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12096:4:16","type":""}],"src":"11931:340:16"},{"body":{"nodeType":"YulBlock","src":"12450:171:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12467:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12478:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12460:6:16"},"nodeType":"YulFunctionCall","src":"12460:21:16"},"nodeType":"YulExpressionStatement","src":"12460:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12501:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12512:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12497:3:16"},"nodeType":"YulFunctionCall","src":"12497:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12517:2:16","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12490:6:16"},"nodeType":"YulFunctionCall","src":"12490:30:16"},"nodeType":"YulExpressionStatement","src":"12490:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12540:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12551:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12536:3:16"},"nodeType":"YulFunctionCall","src":"12536:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12556:23:16","type":"","value":"Insufficient balance."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12529:6:16"},"nodeType":"YulFunctionCall","src":"12529:51:16"},"nodeType":"YulExpressionStatement","src":"12529:51:16"},{"nodeType":"YulAssignment","src":"12589:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12601:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12612:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12597:3:16"},"nodeType":"YulFunctionCall","src":"12597:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12589:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12427:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12441:4:16","type":""}],"src":"12276:345:16"},{"body":{"nodeType":"YulBlock","src":"12800:231:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12817:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12828:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12810:6:16"},"nodeType":"YulFunctionCall","src":"12810:21:16"},"nodeType":"YulExpressionStatement","src":"12810:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12851:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12862:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12847:3:16"},"nodeType":"YulFunctionCall","src":"12847:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12867:2:16","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12840:6:16"},"nodeType":"YulFunctionCall","src":"12840:30:16"},"nodeType":"YulExpressionStatement","src":"12840:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12890:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12901:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12886:3:16"},"nodeType":"YulFunctionCall","src":"12886:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12906:34:16","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12879:6:16"},"nodeType":"YulFunctionCall","src":"12879:62:16"},"nodeType":"YulExpressionStatement","src":"12879:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12961:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12972:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12957:3:16"},"nodeType":"YulFunctionCall","src":"12957:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"12977:11:16","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12950:6:16"},"nodeType":"YulFunctionCall","src":"12950:39:16"},"nodeType":"YulExpressionStatement","src":"12950:39:16"},{"nodeType":"YulAssignment","src":"12998:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13010:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13021:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13006:3:16"},"nodeType":"YulFunctionCall","src":"13006:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12998:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12777:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12791:4:16","type":""}],"src":"12626:405:16"},{"body":{"nodeType":"YulBlock","src":"13210:236:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13227:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13238:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13220:6:16"},"nodeType":"YulFunctionCall","src":"13220:21:16"},"nodeType":"YulExpressionStatement","src":"13220:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13261:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13272:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13257:3:16"},"nodeType":"YulFunctionCall","src":"13257:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13277:2:16","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13250:6:16"},"nodeType":"YulFunctionCall","src":"13250:30:16"},"nodeType":"YulExpressionStatement","src":"13250:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13300:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13311:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13296:3:16"},"nodeType":"YulFunctionCall","src":"13296:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13316:34:16","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13289:6:16"},"nodeType":"YulFunctionCall","src":"13289:62:16"},"nodeType":"YulExpressionStatement","src":"13289:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13371:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13382:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13367:3:16"},"nodeType":"YulFunctionCall","src":"13367:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13387:16:16","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13360:6:16"},"nodeType":"YulFunctionCall","src":"13360:44:16"},"nodeType":"YulExpressionStatement","src":"13360:44:16"},{"nodeType":"YulAssignment","src":"13413:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13425:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13436:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13421:3:16"},"nodeType":"YulFunctionCall","src":"13421:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13413:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13187:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13201:4:16","type":""}],"src":"13036:410:16"},{"body":{"nodeType":"YulBlock","src":"13625:223:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13642:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13653:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13635:6:16"},"nodeType":"YulFunctionCall","src":"13635:21:16"},"nodeType":"YulExpressionStatement","src":"13635:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13676:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13687:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13672:3:16"},"nodeType":"YulFunctionCall","src":"13672:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13692:2:16","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13665:6:16"},"nodeType":"YulFunctionCall","src":"13665:30:16"},"nodeType":"YulExpressionStatement","src":"13665:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13715:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13726:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13711:3:16"},"nodeType":"YulFunctionCall","src":"13711:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13731:34:16","type":"","value":"Only keeper can upgrade contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13704:6:16"},"nodeType":"YulFunctionCall","src":"13704:62:16"},"nodeType":"YulExpressionStatement","src":"13704:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13786:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13797:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13782:3:16"},"nodeType":"YulFunctionCall","src":"13782:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"13802:3:16","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13775:6:16"},"nodeType":"YulFunctionCall","src":"13775:31:16"},"nodeType":"YulExpressionStatement","src":"13775:31:16"},{"nodeType":"YulAssignment","src":"13815:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13827:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13838:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13823:3:16"},"nodeType":"YulFunctionCall","src":"13823:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13815:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13602:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13616:4:16","type":""}],"src":"13451:397:16"},{"body":{"nodeType":"YulBlock","src":"14027:233:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14044:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14055:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:16"},"nodeType":"YulFunctionCall","src":"14037:21:16"},"nodeType":"YulExpressionStatement","src":"14037:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14078:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14089:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14074:3:16"},"nodeType":"YulFunctionCall","src":"14074:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14094:2:16","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14067:6:16"},"nodeType":"YulFunctionCall","src":"14067:30:16"},"nodeType":"YulExpressionStatement","src":"14067:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14117:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14128:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14113:3:16"},"nodeType":"YulFunctionCall","src":"14113:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14133:34:16","type":"","value":"withdraw amount must >= MIN_WITH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14106:6:16"},"nodeType":"YulFunctionCall","src":"14106:62:16"},"nodeType":"YulExpressionStatement","src":"14106:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14188:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14199:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14184:3:16"},"nodeType":"YulFunctionCall","src":"14184:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14204:13:16","type":"","value":"DRAW_AMOUNT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14177:6:16"},"nodeType":"YulFunctionCall","src":"14177:41:16"},"nodeType":"YulExpressionStatement","src":"14177:41:16"},{"nodeType":"YulAssignment","src":"14227:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14239:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14250:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14235:3:16"},"nodeType":"YulFunctionCall","src":"14235:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14227:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14004:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14018:4:16","type":""}],"src":"13853:407:16"},{"body":{"nodeType":"YulBlock","src":"14439:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14456:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14467:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14449:6:16"},"nodeType":"YulFunctionCall","src":"14449:21:16"},"nodeType":"YulExpressionStatement","src":"14449:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14490:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14501:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14486:3:16"},"nodeType":"YulFunctionCall","src":"14486:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14506:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14479:6:16"},"nodeType":"YulFunctionCall","src":"14479:30:16"},"nodeType":"YulExpressionStatement","src":"14479:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14529:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14540:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14525:3:16"},"nodeType":"YulFunctionCall","src":"14525:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14545:22:16","type":"","value":"Invalid limit value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14518:6:16"},"nodeType":"YulFunctionCall","src":"14518:50:16"},"nodeType":"YulExpressionStatement","src":"14518:50:16"},{"nodeType":"YulAssignment","src":"14577:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14589:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14600:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14585:3:16"},"nodeType":"YulFunctionCall","src":"14585:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14577:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14416:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14430:4:16","type":""}],"src":"14265:344:16"},{"body":{"nodeType":"YulBlock","src":"14788:236:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14805:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14816:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14798:6:16"},"nodeType":"YulFunctionCall","src":"14798:21:16"},"nodeType":"YulExpressionStatement","src":"14798:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14839:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14850:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14835:3:16"},"nodeType":"YulFunctionCall","src":"14835:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14855:2:16","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14828:6:16"},"nodeType":"YulFunctionCall","src":"14828:30:16"},"nodeType":"YulExpressionStatement","src":"14828:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14878:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14889:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14874:3:16"},"nodeType":"YulFunctionCall","src":"14874:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14894:34:16","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14867:6:16"},"nodeType":"YulFunctionCall","src":"14867:62:16"},"nodeType":"YulExpressionStatement","src":"14867:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14949:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14960:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14945:3:16"},"nodeType":"YulFunctionCall","src":"14945:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"14965:16:16","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14938:6:16"},"nodeType":"YulFunctionCall","src":"14938:44:16"},"nodeType":"YulExpressionStatement","src":"14938:44:16"},{"nodeType":"YulAssignment","src":"14991:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15003:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15014:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14999:3:16"},"nodeType":"YulFunctionCall","src":"14999:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14991:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14765:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14779:4:16","type":""}],"src":"14614:410:16"},{"body":{"nodeType":"YulBlock","src":"15203:235:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15220:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15231:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15213:6:16"},"nodeType":"YulFunctionCall","src":"15213:21:16"},"nodeType":"YulExpressionStatement","src":"15213:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15254:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15265:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15250:3:16"},"nodeType":"YulFunctionCall","src":"15250:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"15270:2:16","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15243:6:16"},"nodeType":"YulFunctionCall","src":"15243:30:16"},"nodeType":"YulExpressionStatement","src":"15243:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15293:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15304:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15289:3:16"},"nodeType":"YulFunctionCall","src":"15289:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"15309:34:16","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15282:6:16"},"nodeType":"YulFunctionCall","src":"15282:62:16"},"nodeType":"YulExpressionStatement","src":"15282:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15364:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15375:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15360:3:16"},"nodeType":"YulFunctionCall","src":"15360:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"15380:15:16","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15353:6:16"},"nodeType":"YulFunctionCall","src":"15353:43:16"},"nodeType":"YulExpressionStatement","src":"15353:43:16"},{"nodeType":"YulAssignment","src":"15405:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15417:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15428:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15413:3:16"},"nodeType":"YulFunctionCall","src":"15413:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15405:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15180:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15194:4:16","type":""}],"src":"15029:409:16"},{"body":{"nodeType":"YulBlock","src":"15617:182:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15645:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15627:6:16"},"nodeType":"YulFunctionCall","src":"15627:21:16"},"nodeType":"YulExpressionStatement","src":"15627:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15668:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15679:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15664:3:16"},"nodeType":"YulFunctionCall","src":"15664:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"15684:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15657:6:16"},"nodeType":"YulFunctionCall","src":"15657:30:16"},"nodeType":"YulExpressionStatement","src":"15657:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15707:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15718:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15703:3:16"},"nodeType":"YulFunctionCall","src":"15703:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"15723:34:16","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15696:6:16"},"nodeType":"YulFunctionCall","src":"15696:62:16"},"nodeType":"YulExpressionStatement","src":"15696:62:16"},{"nodeType":"YulAssignment","src":"15767:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15779:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15790:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15775:3:16"},"nodeType":"YulFunctionCall","src":"15775:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15594:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15608:4:16","type":""}],"src":"15443:356:16"},{"body":{"nodeType":"YulBlock","src":"15978:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15995:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16006:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15988:6:16"},"nodeType":"YulFunctionCall","src":"15988:21:16"},"nodeType":"YulExpressionStatement","src":"15988:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16029:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16040:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16025:3:16"},"nodeType":"YulFunctionCall","src":"16025:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16045:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16018:6:16"},"nodeType":"YulFunctionCall","src":"16018:30:16"},"nodeType":"YulExpressionStatement","src":"16018:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16068:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16079:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16064:3:16"},"nodeType":"YulFunctionCall","src":"16064:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16084:25:16","type":"","value":"Invalid keeper address."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16057:6:16"},"nodeType":"YulFunctionCall","src":"16057:53:16"},"nodeType":"YulExpressionStatement","src":"16057:53:16"},{"nodeType":"YulAssignment","src":"16119:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16131:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16142:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16127:3:16"},"nodeType":"YulFunctionCall","src":"16127:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16119:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15955:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15969:4:16","type":""}],"src":"15804:347:16"},{"body":{"nodeType":"YulBlock","src":"16330:228:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16347:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16358:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16340:6:16"},"nodeType":"YulFunctionCall","src":"16340:21:16"},"nodeType":"YulExpressionStatement","src":"16340:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16381:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16392:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16377:3:16"},"nodeType":"YulFunctionCall","src":"16377:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16397:2:16","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16370:6:16"},"nodeType":"YulFunctionCall","src":"16370:30:16"},"nodeType":"YulExpressionStatement","src":"16370:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16420:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16431:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16416:3:16"},"nodeType":"YulFunctionCall","src":"16416:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16436:34:16","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16409:6:16"},"nodeType":"YulFunctionCall","src":"16409:62:16"},"nodeType":"YulExpressionStatement","src":"16409:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16502:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16487:3:16"},"nodeType":"YulFunctionCall","src":"16487:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16507:8:16","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16480:6:16"},"nodeType":"YulFunctionCall","src":"16480:36:16"},"nodeType":"YulExpressionStatement","src":"16480:36:16"},{"nodeType":"YulAssignment","src":"16525:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16537:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16548:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16533:3:16"},"nodeType":"YulFunctionCall","src":"16533:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16525:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16307:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16321:4:16","type":""}],"src":"16156:402:16"},{"body":{"nodeType":"YulBlock","src":"16737:173:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16754:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16765:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16747:6:16"},"nodeType":"YulFunctionCall","src":"16747:21:16"},"nodeType":"YulExpressionStatement","src":"16747:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16788:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16799:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16784:3:16"},"nodeType":"YulFunctionCall","src":"16784:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"16804:2:16","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16777:6:16"},"nodeType":"YulFunctionCall","src":"16777:30:16"},"nodeType":"YulExpressionStatement","src":"16777:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16827:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16838:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16823:3:16"},"nodeType":"YulFunctionCall","src":"16823:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"16843:25:16","type":"","value":"Stake record not found."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16816:6:16"},"nodeType":"YulFunctionCall","src":"16816:53:16"},"nodeType":"YulExpressionStatement","src":"16816:53:16"},{"nodeType":"YulAssignment","src":"16878:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16890:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16901:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16886:3:16"},"nodeType":"YulFunctionCall","src":"16886:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16878:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16714:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16728:4:16","type":""}],"src":"16563:347:16"},{"body":{"nodeType":"YulBlock","src":"17089:233:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17106:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17117:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17099:6:16"},"nodeType":"YulFunctionCall","src":"17099:21:16"},"nodeType":"YulExpressionStatement","src":"17099:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17140:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17151:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17136:3:16"},"nodeType":"YulFunctionCall","src":"17136:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"17156:2:16","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17129:6:16"},"nodeType":"YulFunctionCall","src":"17129:30:16"},"nodeType":"YulExpressionStatement","src":"17129:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17179:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17190:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17175:3:16"},"nodeType":"YulFunctionCall","src":"17175:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17195:34:16","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17168:6:16"},"nodeType":"YulFunctionCall","src":"17168:62:16"},"nodeType":"YulExpressionStatement","src":"17168:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17250:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17261:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17246:3:16"},"nodeType":"YulFunctionCall","src":"17246:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17266:13:16","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17239:6:16"},"nodeType":"YulFunctionCall","src":"17239:41:16"},"nodeType":"YulExpressionStatement","src":"17239:41:16"},{"nodeType":"YulAssignment","src":"17289:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17301:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17312:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17297:3:16"},"nodeType":"YulFunctionCall","src":"17297:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17289:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17066:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17080:4:16","type":""}],"src":"16915:407:16"},{"body":{"nodeType":"YulBlock","src":"17501:230:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17518:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17529:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17511:6:16"},"nodeType":"YulFunctionCall","src":"17511:21:16"},"nodeType":"YulExpressionStatement","src":"17511:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17552:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17563:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17548:3:16"},"nodeType":"YulFunctionCall","src":"17548:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"17568:2:16","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17541:6:16"},"nodeType":"YulFunctionCall","src":"17541:30:16"},"nodeType":"YulExpressionStatement","src":"17541:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17591:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17602:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17587:3:16"},"nodeType":"YulFunctionCall","src":"17587:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17607:34:16","type":"","value":"SafeCast: value doesn't fit in a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17580:6:16"},"nodeType":"YulFunctionCall","src":"17580:62:16"},"nodeType":"YulExpressionStatement","src":"17580:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17662:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17673:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17658:3:16"},"nodeType":"YulFunctionCall","src":"17658:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"17678:10:16","type":"","value":"n int256"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17651:6:16"},"nodeType":"YulFunctionCall","src":"17651:38:16"},"nodeType":"YulExpressionStatement","src":"17651:38:16"},{"nodeType":"YulAssignment","src":"17698:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17710:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17721:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17706:3:16"},"nodeType":"YulFunctionCall","src":"17706:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17698:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17478:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17492:4:16","type":""}],"src":"17327:404:16"},{"body":{"nodeType":"YulBlock","src":"17910:168:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17927:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17938:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17920:6:16"},"nodeType":"YulFunctionCall","src":"17920:21:16"},"nodeType":"YulExpressionStatement","src":"17920:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17961:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17972:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17957:3:16"},"nodeType":"YulFunctionCall","src":"17957:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"17977:2:16","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17950:6:16"},"nodeType":"YulFunctionCall","src":"17950:30:16"},"nodeType":"YulExpressionStatement","src":"17950:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18000:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18011:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17996:3:16"},"nodeType":"YulFunctionCall","src":"17996:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18016:20:16","type":"","value":"Invalid withdrawal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17989:6:16"},"nodeType":"YulFunctionCall","src":"17989:48:16"},"nodeType":"YulExpressionStatement","src":"17989:48:16"},{"nodeType":"YulAssignment","src":"18046:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18058:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18069:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18054:3:16"},"nodeType":"YulFunctionCall","src":"18054:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18046:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17887:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17901:4:16","type":""}],"src":"17736:342:16"},{"body":{"nodeType":"YulBlock","src":"18257:230:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18274:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18285:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18267:6:16"},"nodeType":"YulFunctionCall","src":"18267:21:16"},"nodeType":"YulExpressionStatement","src":"18267:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18319:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18304:3:16"},"nodeType":"YulFunctionCall","src":"18304:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"18324:2:16","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18297:6:16"},"nodeType":"YulFunctionCall","src":"18297:30:16"},"nodeType":"YulExpressionStatement","src":"18297:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18347:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18358:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18343:3:16"},"nodeType":"YulFunctionCall","src":"18343:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18363:34:16","type":"","value":"Validator not exist or has been "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18336:6:16"},"nodeType":"YulFunctionCall","src":"18336:62:16"},"nodeType":"YulExpressionStatement","src":"18336:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18418:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18429:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18414:3:16"},"nodeType":"YulFunctionCall","src":"18414:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18434:10:16","type":"","value":"removed."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18407:6:16"},"nodeType":"YulFunctionCall","src":"18407:38:16"},"nodeType":"YulExpressionStatement","src":"18407:38:16"},{"nodeType":"YulAssignment","src":"18454:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18466:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18477:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18462:3:16"},"nodeType":"YulFunctionCall","src":"18462:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18454:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18234:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18248:4:16","type":""}],"src":"18083:404:16"},{"body":{"nodeType":"YulBlock","src":"18666:178:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18683:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18694:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18676:6:16"},"nodeType":"YulFunctionCall","src":"18676:21:16"},"nodeType":"YulExpressionStatement","src":"18676:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18717:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18728:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18713:3:16"},"nodeType":"YulFunctionCall","src":"18713:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"18733:2:16","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18706:6:16"},"nodeType":"YulFunctionCall","src":"18706:30:16"},"nodeType":"YulExpressionStatement","src":"18706:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18756:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18767:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18752:3:16"},"nodeType":"YulFunctionCall","src":"18752:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"18772:30:16","type":"","value":"Failed to send native token."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18745:6:16"},"nodeType":"YulFunctionCall","src":"18745:58:16"},"nodeType":"YulExpressionStatement","src":"18745:58:16"},{"nodeType":"YulAssignment","src":"18812:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18824:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18835:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18820:3:16"},"nodeType":"YulFunctionCall","src":"18820:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18812:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18643:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18657:4:16","type":""}],"src":"18492:352:16"},{"body":{"nodeType":"YulBlock","src":"19023:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19040:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19051:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19033:6:16"},"nodeType":"YulFunctionCall","src":"19033:21:16"},"nodeType":"YulExpressionStatement","src":"19033:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19074:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19085:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19070:3:16"},"nodeType":"YulFunctionCall","src":"19070:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"19090:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19063:6:16"},"nodeType":"YulFunctionCall","src":"19063:30:16"},"nodeType":"YulExpressionStatement","src":"19063:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19113:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19124:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19109:3:16"},"nodeType":"YulFunctionCall","src":"19109:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"19129:22:16","type":"","value":"Validators are full."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19102:6:16"},"nodeType":"YulFunctionCall","src":"19102:50:16"},"nodeType":"YulExpressionStatement","src":"19102:50:16"},{"nodeType":"YulAssignment","src":"19161:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19173:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19184:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19169:3:16"},"nodeType":"YulFunctionCall","src":"19169:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19161:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19000:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19014:4:16","type":""}],"src":"18849:344:16"},{"body":{"nodeType":"YulBlock","src":"19372:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19389:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19400:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19382:6:16"},"nodeType":"YulFunctionCall","src":"19382:21:16"},"nodeType":"YulExpressionStatement","src":"19382:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19423:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19434:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19419:3:16"},"nodeType":"YulFunctionCall","src":"19419:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"19439:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19412:6:16"},"nodeType":"YulFunctionCall","src":"19412:30:16"},"nodeType":"YulExpressionStatement","src":"19412:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19462:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19473:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19458:3:16"},"nodeType":"YulFunctionCall","src":"19458:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"19478:22:16","type":"","value":"Invalid lock period."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19451:6:16"},"nodeType":"YulFunctionCall","src":"19451:50:16"},"nodeType":"YulExpressionStatement","src":"19451:50:16"},{"nodeType":"YulAssignment","src":"19510:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19522:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19533:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19518:3:16"},"nodeType":"YulFunctionCall","src":"19518:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19510:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19349:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19363:4:16","type":""}],"src":"19198:344:16"},{"body":{"nodeType":"YulBlock","src":"19721:181:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19738:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19749:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19731:6:16"},"nodeType":"YulFunctionCall","src":"19731:21:16"},"nodeType":"YulExpressionStatement","src":"19731:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19772:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19783:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19768:3:16"},"nodeType":"YulFunctionCall","src":"19768:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"19788:2:16","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19761:6:16"},"nodeType":"YulFunctionCall","src":"19761:30:16"},"nodeType":"YulExpressionStatement","src":"19761:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19811:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19822:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19807:3:16"},"nodeType":"YulFunctionCall","src":"19807:18:16"},{"kind":"string","nodeType":"YulLiteral","src":"19827:33:16","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19800:6:16"},"nodeType":"YulFunctionCall","src":"19800:61:16"},"nodeType":"YulExpressionStatement","src":"19800:61:16"},{"nodeType":"YulAssignment","src":"19870:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19882:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19893:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19878:3:16"},"nodeType":"YulFunctionCall","src":"19878:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19870:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19698:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19712:4:16","type":""}],"src":"19547:355:16"},{"body":{"nodeType":"YulBlock","src":"20008:76:16","statements":[{"nodeType":"YulAssignment","src":"20018:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20030:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20041:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20026:3:16"},"nodeType":"YulFunctionCall","src":"20026:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20018:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20060:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"20071:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20053:6:16"},"nodeType":"YulFunctionCall","src":"20053:25:16"},"nodeType":"YulExpressionStatement","src":"20053:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19977:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19988:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19999:4:16","type":""}],"src":"19907:177:16"},{"body":{"nodeType":"YulBlock","src":"20218:119:16","statements":[{"nodeType":"YulAssignment","src":"20228:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20240:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20251:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20236:3:16"},"nodeType":"YulFunctionCall","src":"20236:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20228:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20270:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"20281:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20263:6:16"},"nodeType":"YulFunctionCall","src":"20263:25:16"},"nodeType":"YulExpressionStatement","src":"20263:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20319:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20304:3:16"},"nodeType":"YulFunctionCall","src":"20304:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"20324:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20297:6:16"},"nodeType":"YulFunctionCall","src":"20297:34:16"},"nodeType":"YulExpressionStatement","src":"20297:34:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20179:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20190:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20198:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20209:4:16","type":""}],"src":"20089:248:16"},{"body":{"nodeType":"YulBlock","src":"20527:206:16","statements":[{"nodeType":"YulAssignment","src":"20537:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20549:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20560:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20545:3:16"},"nodeType":"YulFunctionCall","src":"20545:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20537:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20580:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"20591:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20573:6:16"},"nodeType":"YulFunctionCall","src":"20573:25:16"},"nodeType":"YulExpressionStatement","src":"20573:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20618:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20629:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20614:3:16"},"nodeType":"YulFunctionCall","src":"20614:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"20634:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20607:6:16"},"nodeType":"YulFunctionCall","src":"20607:34:16"},"nodeType":"YulExpressionStatement","src":"20607:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20661:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20672:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20657:3:16"},"nodeType":"YulFunctionCall","src":"20657:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"20677:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20650:6:16"},"nodeType":"YulFunctionCall","src":"20650:34:16"},"nodeType":"YulExpressionStatement","src":"20650:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20704:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20715:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20700:3:16"},"nodeType":"YulFunctionCall","src":"20700:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"20720:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20693:6:16"},"nodeType":"YulFunctionCall","src":"20693:34:16"},"nodeType":"YulExpressionStatement","src":"20693:34:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20472:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20483:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20491:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20499:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20507:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20518:4:16","type":""}],"src":"20342:391:16"},{"body":{"nodeType":"YulBlock","src":"20837:93:16","statements":[{"nodeType":"YulAssignment","src":"20847:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20859:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20870:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20855:3:16"},"nodeType":"YulFunctionCall","src":"20855:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20847:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20889:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20904:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20912:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20900:3:16"},"nodeType":"YulFunctionCall","src":"20900:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20882:6:16"},"nodeType":"YulFunctionCall","src":"20882:42:16"},"nodeType":"YulExpressionStatement","src":"20882:42:16"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20806:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20817:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20828:4:16","type":""}],"src":"20738:192:16"},{"body":{"nodeType":"YulBlock","src":"20982:220:16","statements":[{"nodeType":"YulVariableDeclaration","src":"20992:21:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21006:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"21009:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21002:3:16"},"nodeType":"YulFunctionCall","src":"21002:11:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20996:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"21078:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21080:16:16"},"nodeType":"YulFunctionCall","src":"21080:18:16"},"nodeType":"YulExpressionStatement","src":"21080:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21036:2:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21029:6:16"},"nodeType":"YulFunctionCall","src":"21029:10:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21045:1:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21060:3:16","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"21065:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21056:3:16"},"nodeType":"YulFunctionCall","src":"21056:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"21069:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21052:3:16"},"nodeType":"YulFunctionCall","src":"21052:19:16"},{"name":"x","nodeType":"YulIdentifier","src":"21073:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21048:3:16"},"nodeType":"YulFunctionCall","src":"21048:27:16"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"21041:3:16"},"nodeType":"YulFunctionCall","src":"21041:35:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21025:3:16"},"nodeType":"YulFunctionCall","src":"21025:52:16"},"nodeType":"YulIf","src":"21022:2:16"},{"body":{"nodeType":"YulBlock","src":"21149:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21151:16:16"},"nodeType":"YulFunctionCall","src":"21151:18:16"},"nodeType":"YulExpressionStatement","src":"21151:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21116:2:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21124:1:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21135:3:16","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"21140:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21131:3:16"},"nodeType":"YulFunctionCall","src":"21131:11:16"},{"name":"x","nodeType":"YulIdentifier","src":"21144:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21127:3:16"},"nodeType":"YulFunctionCall","src":"21127:19:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21120:3:16"},"nodeType":"YulFunctionCall","src":"21120:27:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21112:3:16"},"nodeType":"YulFunctionCall","src":"21112:36:16"},"nodeType":"YulIf","src":"21109:2:16"},{"nodeType":"YulAssignment","src":"21180:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21191:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21194:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21187:3:16"},"nodeType":"YulFunctionCall","src":"21187:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21180:3:16"}]}]},"name":"checked_add_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20965:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"20968:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20974:3:16","type":""}],"src":"20935:267:16"},{"body":{"nodeType":"YulBlock","src":"21255:80:16","statements":[{"body":{"nodeType":"YulBlock","src":"21282:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21284:16:16"},"nodeType":"YulFunctionCall","src":"21284:18:16"},"nodeType":"YulExpressionStatement","src":"21284:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21271:1:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21278:1:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21274:3:16"},"nodeType":"YulFunctionCall","src":"21274:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21268:2:16"},"nodeType":"YulFunctionCall","src":"21268:13:16"},"nodeType":"YulIf","src":"21265:2:16"},{"nodeType":"YulAssignment","src":"21313:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21324:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21327:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21320:3:16"},"nodeType":"YulFunctionCall","src":"21320:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21313:3:16"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21238:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21241:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21247:3:16","type":""}],"src":"21207:128:16"},{"body":{"nodeType":"YulBlock","src":"21386:171:16","statements":[{"body":{"nodeType":"YulBlock","src":"21417:111:16","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"21438:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21445:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"21450:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21441:3:16"},"nodeType":"YulFunctionCall","src":"21441:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21431:6:16"},"nodeType":"YulFunctionCall","src":"21431:31:16"},"nodeType":"YulExpressionStatement","src":"21431:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21482:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21485:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21475:6:16"},"nodeType":"YulFunctionCall","src":"21475:15:16"},"nodeType":"YulExpressionStatement","src":"21475:15:16"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"21510:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"21513:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21503:6:16"},"nodeType":"YulFunctionCall","src":"21503:15:16"},"nodeType":"YulExpressionStatement","src":"21503:15:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21406:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21399:6:16"},"nodeType":"YulFunctionCall","src":"21399:9:16"},"nodeType":"YulIf","src":"21396:2:16"},{"nodeType":"YulAssignment","src":"21537:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21546:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21549:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21542:3:16"},"nodeType":"YulFunctionCall","src":"21542:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"21537:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21371:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21374:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"21380:1:16","type":""}],"src":"21340:217:16"},{"body":{"nodeType":"YulBlock","src":"21614:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"21673:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21675:16:16"},"nodeType":"YulFunctionCall","src":"21675:18:16"},"nodeType":"YulExpressionStatement","src":"21675:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21645:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21638:6:16"},"nodeType":"YulFunctionCall","src":"21638:9:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21631:6:16"},"nodeType":"YulFunctionCall","src":"21631:17:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21653:1:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21664:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21660:3:16"},"nodeType":"YulFunctionCall","src":"21660:6:16"},{"name":"x","nodeType":"YulIdentifier","src":"21668:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21656:3:16"},"nodeType":"YulFunctionCall","src":"21656:14:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21650:2:16"},"nodeType":"YulFunctionCall","src":"21650:21:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21627:3:16"},"nodeType":"YulFunctionCall","src":"21627:45:16"},"nodeType":"YulIf","src":"21624:2:16"},{"nodeType":"YulAssignment","src":"21704:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21719:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21722:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21715:3:16"},"nodeType":"YulFunctionCall","src":"21715:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"21704:7:16"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21593:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21596:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"21602:7:16","type":""}],"src":"21562:168:16"},{"body":{"nodeType":"YulBlock","src":"21784:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"21806:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21808:16:16"},"nodeType":"YulFunctionCall","src":"21808:18:16"},"nodeType":"YulExpressionStatement","src":"21808:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21800:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21803:1:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21797:2:16"},"nodeType":"YulFunctionCall","src":"21797:8:16"},"nodeType":"YulIf","src":"21794:2:16"},{"nodeType":"YulAssignment","src":"21837:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21849:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"21852:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21845:3:16"},"nodeType":"YulFunctionCall","src":"21845:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21837:4:16"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21766:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"21769:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21775:4:16","type":""}],"src":"21735:125:16"},{"body":{"nodeType":"YulBlock","src":"21918:205:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21928:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"21937:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21932:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"21997:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22022:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"22027:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22018:3:16"},"nodeType":"YulFunctionCall","src":"22018:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22041:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"22046:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22037:3:16"},"nodeType":"YulFunctionCall","src":"22037:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22031:5:16"},"nodeType":"YulFunctionCall","src":"22031:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22011:6:16"},"nodeType":"YulFunctionCall","src":"22011:39:16"},"nodeType":"YulExpressionStatement","src":"22011:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21958:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"21961:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21955:2:16"},"nodeType":"YulFunctionCall","src":"21955:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21969:19:16","statements":[{"nodeType":"YulAssignment","src":"21971:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21980:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"21983:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21976:3:16"},"nodeType":"YulFunctionCall","src":"21976:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21971:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"21951:3:16","statements":[]},"src":"21947:113:16"},{"body":{"nodeType":"YulBlock","src":"22086:31:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22099:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"22104:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22095:3:16"},"nodeType":"YulFunctionCall","src":"22095:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"22113:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22088:6:16"},"nodeType":"YulFunctionCall","src":"22088:27:16"},"nodeType":"YulExpressionStatement","src":"22088:27:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22075:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"22078:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22072:2:16"},"nodeType":"YulFunctionCall","src":"22072:13:16"},"nodeType":"YulIf","src":"22069:2:16"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"21896:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"21901:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"21906:6:16","type":""}],"src":"21865:258:16"},{"body":{"nodeType":"YulBlock","src":"22175:88:16","statements":[{"body":{"nodeType":"YulBlock","src":"22206:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22208:16:16"},"nodeType":"YulFunctionCall","src":"22208:18:16"},"nodeType":"YulExpressionStatement","src":"22208:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22191:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22202:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22198:3:16"},"nodeType":"YulFunctionCall","src":"22198:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22188:2:16"},"nodeType":"YulFunctionCall","src":"22188:17:16"},"nodeType":"YulIf","src":"22185:2:16"},{"nodeType":"YulAssignment","src":"22237:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22248:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"22255:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22244:3:16"},"nodeType":"YulFunctionCall","src":"22244:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22237:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22157:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22167:3:16","type":""}],"src":"22128:135:16"},{"body":{"nodeType":"YulBlock","src":"22300:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22317:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22324:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22329:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22320:3:16"},"nodeType":"YulFunctionCall","src":"22320:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22310:6:16"},"nodeType":"YulFunctionCall","src":"22310:31:16"},"nodeType":"YulExpressionStatement","src":"22310:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22357:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22360:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22350:6:16"},"nodeType":"YulFunctionCall","src":"22350:15:16"},"nodeType":"YulExpressionStatement","src":"22350:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22381:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22384:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22374:6:16"},"nodeType":"YulFunctionCall","src":"22374:15:16"},"nodeType":"YulExpressionStatement","src":"22374:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22268:127:16"},{"body":{"nodeType":"YulBlock","src":"22432:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22449:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22456:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"22461:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22452:3:16"},"nodeType":"YulFunctionCall","src":"22452:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22442:6:16"},"nodeType":"YulFunctionCall","src":"22442:31:16"},"nodeType":"YulExpressionStatement","src":"22442:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22489:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22492:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22482:6:16"},"nodeType":"YulFunctionCall","src":"22482:15:16"},"nodeType":"YulExpressionStatement","src":"22482:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22513:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22516:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22506:6:16"},"nodeType":"YulFunctionCall","src":"22506:15:16"},"nodeType":"YulExpressionStatement","src":"22506:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"22400:127:16"},{"body":{"nodeType":"YulBlock","src":"22577:86:16","statements":[{"body":{"nodeType":"YulBlock","src":"22641:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22650:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22653:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22643:6:16"},"nodeType":"YulFunctionCall","src":"22643:12:16"},"nodeType":"YulExpressionStatement","src":"22643:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22600:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22611:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22626:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"22631:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22622:3:16"},"nodeType":"YulFunctionCall","src":"22622:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"22635:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22618:3:16"},"nodeType":"YulFunctionCall","src":"22618:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22607:3:16"},"nodeType":"YulFunctionCall","src":"22607:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22597:2:16"},"nodeType":"YulFunctionCall","src":"22597:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22590:6:16"},"nodeType":"YulFunctionCall","src":"22590:50:16"},"nodeType":"YulIf","src":"22587:2:16"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22566:5:16","type":""}],"src":"22532:131:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value1)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Withdrawal_$5865_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_int128_t_int128__to_t_int128_t_int128__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(15, value0))\n        mstore(add(headStart, 32), signextend(15, value1))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_07e84d5ad352d909e43b588bbfdcb2913c61413e068fd6627612efe859770b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Invalid amount or insufficient b\")\n        mstore(add(headStart, 96), \"alance.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1be06c31b971cbeb6d6f6aa81ed12f3a1bf56ce1cdddc78551153c1a4bf1239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Cannot remove the only validator\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_200f01daf61767a614521074f6dab62e5232b7f25e8079019ed5bf7e098b8fca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Stake amount must >= MIN_STAKE_A\")\n        mstore(add(headStart, 96), \"MOUNT.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c3eb057e373cb7bad2ffd211a7c412878f3f69ce3fe9d7a0a67b26ef25a0e1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Validator had been added.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 1\")\n        mstore(add(headStart, 96), \"28 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4960eb6e65ed7c9646db77e54c5add4ba35e4e7a842cae5827c52b6368ebf36e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid reward per block.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_562fb69dfbfdde82a62c30f0e73c6944798a09c635be4887f6f42cc63bdfe0c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Insufficient withdrawable amount\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid address.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient balance.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_803726f5c981835bf9975e00bf9024038f5eae993806b8761b78dd6a892df8bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only keeper can upgrade contract\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_804c771be66ab3daa414b43801dff7b49abbedd70819e0d15198c121e274ddd9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"withdraw amount must >= MIN_WITH\")\n        mstore(add(headStart, 96), \"DRAW_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_86f1f0856f0fc5062bbb56d910fb31dad48f603df3d0c2560005fde6e840355a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid limit value.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9ebfc91e9993f36fde13f320649b68a57e42013e6a3e76176e6795a7b559c50f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid keeper address.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cfd4d3bb9686e55684954c405ab91709d22dcd0adbdf9069898bdaaf369bc219__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Stake record not found.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in a\")\n        mstore(add(headStart, 96), \"n int256\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da222c17cacd863db56208999a18697d1eb76ae4228575fbe25d7a32642c40c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid withdrawal\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dfbfbdba08db62abacff66bac2ec4f4779753331f26816a8c6a848b9b8fab706__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Validator not exist or has been \")\n        mstore(add(headStart, 96), \"removed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e222769365d31444e95d75938952abaf1d5e3135a906a84e4c0c973b805b200a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to send native token.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8c07225bc059d5fc2c1b511c5e378c999b3371cb17dff180b7956d96cfafa19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Validators are full.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e95b11bbae36808b0019daa830104325242c4eeb39d78c67c473a61ea6bbece8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid lock period.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function checked_add_t_int256(x, y) -> sum\n    {\n        let _1 := slt(x, sum)\n        if and(iszero(_1), sgt(y, sub(sub(shl(255, 1), 1), x))) { panic_error_0x11() }\n        if and(_1, slt(y, sub(shl(255, 1), x))) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"702":[{"length":32,"start":3073},{"length":32,"start":3137},{"length":32,"start":4221},{"length":32,"start":4285},{"length":32,"start":4556}],"5910":[{"length":32,"start":791},{"length":32,"start":2380}],"5912":[{"length":32,"start":1681},{"length":32,"start":9959}]},"linkReferences":{},"object":"6080604052600436106102555760003560e01c8063748747e611610139578063c2a672e0116100b6578063eaf7c9dc1161007a578063eaf7c9dc14610769578063f0544ac814610789578063f2fde38b146107a6578063f3f43703146107c6578063f489f23b146107f3578063f6a2314a1461081357600080fd5b8063c2a672e0146106d3578063d2d49c4b146106f3578063d4c6d1de14610715578063d849a50214610732578063dab316891461074957600080fd5b806394409a56116100fd57806394409a56146106275780639ced7e761461063e578063aced16611461065e578063b68578441461067f578063bb872b4a146106b357600080fd5b8063748747e6146105895780637b66394c146105a95780637ea5db42146105c95780638456cb59146105e05780638da5cb5b146105f557600080fd5b806340550a1c116101d25780634f1ef286116101965780634f1ef286146104f6578063522abc401461050957806352d1902d1461052957806357525cbc1461053e5780635c975abb1461055c578063715018a61461057457600080fd5b806340550a1c1461044a57806340a141ff1461047a57806345f7b8f41461049a578063485cc955146104b65780634d238c8e146104d657600080fd5b806329451893116102195780632945189314610339578063340c5a25146103905780633659cfe6146103da5780633f4ba83a146103fa5780633fd8b02f1461040f57600080fd5b80630d8e6e2c1461029657806319d41774146102b957806324e770d0146102d957806326476204146102f057806327ed71881461030557600080fd5b366102915760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b3480156102a257600080fd5b5060025b6040519081526020015b60405180910390f35b3480156102c557600080fd5b506102a66102d436600461310c565b610881565b3480156102e557600080fd5b506102a66101395481565b6103036102fe366004612fce565b610942565b005b34801561031157600080fd5b506102a67f000000000000000000000000000000000000000000000000000000000000000081565b34801561034557600080fd5b50610376610354366004612fce565b61013660205260009081526040902054600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016102b0565b34801561039c57600080fd5b506103c56103ab366004612fce565b610134602052600090815260409020805460019091015482565b604080519283526020830191909152016102b0565b3480156103e657600080fd5b506103036103f5366004612fce565b610bf6565b34801561040657600080fd5b50610303610cd6565b34801561041b57600080fd5b506101375461043590640100000000900463ffffffff1681565b60405163ffffffff90911681526020016102b0565b34801561045657600080fd5b5061046a610465366004612fce565b610ce8565b60405190151581526020016102b0565b34801561048657600080fd5b50610303610495366004612fce565b610cf6565b3480156104a657600080fd5b506102a6670de0b6b3a764000081565b3480156104c257600080fd5b506103036104d1366004613015565b610eeb565b3480156104e257600080fd5b506103036104f1366004612fce565b611061565b61030361050436600461304d565b611072565b34801561051557600080fd5b5061030361052436600461314e565b611143565b34801561053557600080fd5b506102a66111bf565b34801561054a57600080fd5b50610137546104359063ffffffff1681565b34801561056857600080fd5b5060655460ff1661046a565b34801561058057600080fd5b50610303611272565b34801561059557600080fd5b506103036105a4366004612fce565b611284565b3480156105b557600080fd5b506103036105c4366004612fea565b611305565b3480156105d557600080fd5b506102a66101385481565b3480156105ec57600080fd5b50610303611310565b34801561060157600080fd5b506097546001600160a01b03165b6040516001600160a01b0390911681526020016102b0565b34801561063357600080fd5b506102a661013a5481565b34801561064a57600080fd5b506102a6610659366004613015565b611320565b34801561066a57600080fd5b5061012d5461060f906001600160a01b031681565b34801561068b57600080fd5b506102a67f000000000000000000000000000000000000000000000000000000000000000081565b3480156106bf57600080fd5b506103036106ce366004613136565b611466565b3480156106df57600080fd5b506103036106ee36600461310c565b6114d1565b3480156106ff57600080fd5b50610708611801565b6040516102b0919061318e565b34801561072157600080fd5b5061013054610131546103c5919082565b34801561073e57600080fd5b506102a661013b5481565b34801561075557600080fd5b506102a6610764366004612fce565b611813565b34801561077557600080fd5b50610303610784366004613136565b61181f565b34801561079557600080fd5b5061013254610133546103c5919082565b3480156107b257600080fd5b506103036107c1366004612fce565b6119df565b3480156107d257600080fd5b506107e66107e1366004612fce565b611a55565b6040516102b091906131db565b3480156107ff57600080fd5b5061030361080e36600461314e565b611b78565b34801561081f57600080fd5b5061086161082e366004613015565b61013560209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016102b0565b6001600160a01b03821660009081526101366020526040812081806108b88354600f81810b810b600160801b909204810b900b0390565b905060005b81811015610935576000806108e66108d58785611bd9565b602081901c9163ffffffff90911690565b610137549193509150889061090990640100000000900463ffffffff16836133c9565b1115610916575050610935565b61092082866133c9565b945050508061092e90613463565b90506108bd565b5090925050505b92915050565b61094a611c54565b7f00000000000000000000000000000000000000000000000000000000000000003410156109ce5760405162461bcd60e51b815260206004820152602660248201527f5374616b6520616d6f756e74206d757374203e3d204d494e5f5354414b455f4160448201526526a7aaa72a1760d11b60648201526084015b60405180910390fd5b6109d781610ce8565b6109f35760405162461bcd60e51b81526004016109c590613340565b6000806109fe611c9a565b6001600160a01b03851660008181526000805160206134c083398151915260209081526040808320815160808082018452825482526001808401548387015260028085015484870152600394850154606080860191909152988852610135875285882033895287529685902085519283018652805483529081015495820195909552948401549285019290925291909101549282019290925292945090925090610aa88483611d3e565b610ab28382611d3e565b3482600001818151610ac491906133c9565b905250805134908290610ad89083906133c9565b905250610ae58483611d93565b610aef8382611d93565b4360608084018281529083019182526001600160a01b03871660009081526000805160206134c08339815191526020908152604080832087518155828801516001808301919091558289015160028084019190915595516003928301556101358452828520338652845282852088518155938801519084015590860151938201939093559251929091019190915561013b8054349290610b909084906133c9565b925050819055503461013a6000828254610baa91906133c9565b90915550506040513481526001600160a01b0386169033907f99039fcf0a98f484616c5196ee8b2ecfa971babf0b519848289ea4db381f85f79060200160405180910390a35050505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610c3f5760405162461bcd60e51b81526004016109c59061325d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c886000805160206134e0833981519152546001600160a01b031690565b6001600160a01b031614610cae5760405162461bcd60e51b81526004016109c5906132a9565b610cb781611dbd565b60408051600080825260208201909252610cd391839190611e22565b50565b610cde611f9c565b610ce6611ff6565b565b600061093c61012e83612048565b610cfe611f9c565b6001610d0b61012e61206d565b11610d625760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f742072656d6f766520746865206f6e6c792076616c696461746f726044820152601760f91b60648201526084016109c5565b610d6b81610ce8565b610d875760405162461bcd60e51b81526004016109c590613340565b600080610d92611c9a565b6001600160a01b03851660009081526000805160206134c0833981519152602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460608201529193509150610df98382611d3e565b610e038382611d93565b43606082019081526001600160a01b03851660009081526000805160206134c08339815191526020908152604091829020845181559084015160018201559083015160028201559051600390910155610e5e61012e85612077565b506001600160a01b03841660009081526101346020908152604082208451815590840151600190910155815161013b805491929091610e9e908490613420565b9091555050604080516001600160a01b0386168152600060208201527fd2b4a3ae4917617aaa5e6caa5541a3331944d66baa187ef6c350f1ce4012d819910160405180910390a150505050565b600054610100900460ff1615808015610f0b5750600054600160ff909116105b80610f255750303b158015610f25575060005460ff166001145b610f885760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109c5565b6000805460ff191660011790558015610fab576000805461ff0019166101001790555b610fb361208c565b610fbb6120bb565b610fc4836120ea565b610fcc61213c565b61012d80546001600160a01b03191633179055610137805463ffffffff19166015179055611001674563918244f40000612163565b61100d62093a806121c9565b61101682612220565b801561105c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b611069611f9c565b610cd381612220565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156110bb5760405162461bcd60e51b81526004016109c59061325d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166111046000805160206134e0833981519152546001600160a01b031690565b6001600160a01b03161461112a5760405162461bcd60e51b81526004016109c5906132a9565b61113382611dbd565b61113f82826001611e22565b5050565b61114b611f9c565b61115661012e61206d565b8163ffffffff1610156111a25760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103634b6b4ba103b30b63ab29760611b60448201526064016109c5565b610137805463ffffffff191663ffffffff92909216919091179055565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461125f5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016109c5565b506000805160206134e083398151915290565b61127a611f9c565b610ce660006120ea565b61128c611f9c565b6001600160a01b0381166112e25760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206b656570657220616464726573732e00000000000000000060448201526064016109c5565b61012d80546001600160a01b0319166001600160a01b0392909216919091179055565b61113f33838361238a565b611318611f9c565b610ce661253e565b6001600160a01b03828116600081815261013560209081526040808320948616835293815283822084516080810186528154815260018201548184015260028201548187015260039091015460608201528451808601909552828552908401829052909290916113dc5761139384610ce8565b156113d05750604080518082019091526101305481526101315460208201526101385461013b546113c591839161257b565b506113d08183611d3e565b5060400151905061093c565b6113e585610ce8565b1561141d5750604080518082019091526101325481526101335460208201526101395461013b5461141791839161257b565b50611450565b506001600160a01b0384166000908152610134602090815260409182902082518084019093528054835260010154908201525b61145a8183611d3e565b50604001519392505050565b61146e611f9c565b600081116114be5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207265776172642070657220626c6f636b2e0000000000000060448201526064016109c5565b6114c6611c9a565b5050610cd381612163565b600260015414156115245760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109c5565b6002600155611531611c54565b60008061153c611c9a565b6001600160a01b03861660008181526000805160206134c0833981519152602090815260408083208151608080820184528254825260018084015483870152600280850154848701526003948501546060808601919091528989526101358852868920338a5288529786902086519384018752805484529182015496830196909652948501549381019390935292015492810192909252939550919350158015906115ea5750606081015115155b6116365760405162461bcd60e51b815260206004820152601760248201527f5374616b65207265636f7264206e6f7420666f756e642e00000000000000000060448201526064016109c5565b60008061164288610ce8565b1561169d576116518685611d3e565b61165b8584611d3e565b6116668484896125fe565b90925090506116758685611d93565b61167f8584611d93565b8161013b60008282546116929190613420565b909155506116f49050565b6001600160a01b03881660009081526101346020908152604091829020825180840190935280548352600101549082015294506116da8584611d3e565b6116e58484896125fe565b90925090506116f48584611d93565b4360608086018281529085019182526001600160a01b038a1660009081526000805160206134c08339815191526020908152604080832089518155828a0151600180830191909155828b01516002808401919091559551600392830155610135845282852033865284528285208a518155938a01519084015590880151938201939093559251929091019190915561013a8054849290611795908490613420565b909155505060408051838152602081018390526001600160a01b038a169133917f18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef910160405180910390a36117f3336117ee83856133c9565b6126e5565b505060018055505050505050565b606061180e61012e61281d565b905090565b600061093c8242610881565b600260015414156118725760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109c5565b600260015561187f611c54565b6000611889611c9a565b503360008181526000805160206134c0833981519152602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460608201529192506118e590610ce8565b156118fe576118f48282611d3e565b6118fe8282611d93565b600083118015611912575080604001518311155b61196e5760405162461bcd60e51b815260206004820152602760248201527f496e76616c696420616d6f756e74206f7220696e73756666696369656e74206260448201526630b630b731b29760c91b60648201526084016109c5565b82816040018181516119809190613420565b90525043606082019081523360008181526000805160206134c083398151915260209081526040918290208551815590850151600182015590840151600282015591516003909201919091556119d690846126e5565b50506001805550565b6119e7611f9c565b6001600160a01b038116611a4c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109c5565b610cd3816120ea565b6001600160a01b038116600090815261013660205260408120606091611a8d8254600f81810b810b600160801b909204810b900b0390565b90508067ffffffffffffffff811115611ab657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611afb57816020015b6040805180820190915260008082526020820152815260200190600190039081611ad45790505b50925060005b81811015611b7057600080611b196108d58685611bd9565b91509150604051806040016040528083815260200182815250868481518110611b5257634e487b7160e01b600052603260045260246000fd5b6020026020010181905250505080611b6990613463565b9050611b01565b505050919050565b611b80611f9c565b620151808163ffffffff161015611bd05760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103637b1b5903832b934b7b21760611b60448201526064016109c5565b610cd3816121c9565b600080611c00611be88461282a565b8554611bfb9190600f90810b900b613388565b612898565b8454909150600160801b9004600f90810b810b9082900b12611c3557604051632d0483c560e21b815260040160405180910390fd5b600f90810b900b60009081526001939093016020525050604090205490565b60655460ff1615610ce65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109c5565b60408051808201909152600080825260208201526040805180820190915260008082526020820152604080518082019091526101305481526101315460208201526101385461013b54611cee92919061257b565b604080518082019091526101325481526101335460208201526101395461013b54929450611d1b9261257b565b825161013055602080840151610131558151610132558101516101335591929050565b6060810151611d4b575050565b602081015182518251670de0b6b3a764000091611d6791613401565b611d7191906133e1565b611d7b9190613420565b81604001818151611d8c91906133c9565b9052505050565b81518151670de0b6b3a764000091611daa91613401565b611db491906133e1565b60209091015250565b61012d546001600160a01b03163314610cd35760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206b65657065722063616e207570677261646520636f6e74726163746044820152601760f91b60648201526084016109c5565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611e555761105c83612927565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e8e57600080fd5b505afa925050508015611ebe575060408051601f3d908101601f19168201909252611ebb9181019061311e565b60015b611f215760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016109c5565b6000805160206134e08339815191528114611f905760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016109c5565b5061105c8383836129c3565b6097546001600160a01b03163314610ce65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109c5565b611ffe6129ee565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b600061093c825490565b6000612066836001600160a01b038416612a37565b600054610100900460ff166120b35760405162461bcd60e51b81526004016109c5906132f5565b610ce6612b54565b600054610100900460ff166120e25760405162461bcd60e51b81526004016109c5906132f5565b610ce6612b81565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ce65760405162461bcd60e51b81526004016109c5906132f5565b61216e6005826133e1565b61013881905561217e9082613420565b610139819055610138546040517f79a5349732f93288abbb68e251c3dfc325bf3ee6fde7786d919155d39733e0f5926121be928252602082015260400190565b60405180910390a150565b610137805467ffffffff00000000191664010000000063ffffffff8416908102919091179091556040519081527f401dae40edac291ec00ad4f9e16968c6c86b73fcd6faad7e35a55a27fa64d048906020016121be565b6001600160a01b0381166122695760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21030b2323932b9b99760811b60448201526064016109c5565b6101375463ffffffff1661227e61012e61206d565b106122c25760405162461bcd60e51b81526020600482015260146024820152732b30b634b230ba37b9399030b93290333ab6361760611b60448201526064016109c5565b6122cb81610ce8565b1580156122f257506001600160a01b03811660009081526101346020526040902060010154155b61233e5760405162461bcd60e51b815260206004820152601960248201527f56616c696461746f7220686164206265656e2061646465642e0000000000000060448201526064016109c5565b61234a61012e82612bb4565b50604080516001600160a01b0383168152600160208201527fd2b4a3ae4917617aaa5e6caa5541a3331944d66baa187ef6c350f1ce4012d81991016121be565b6001600160a01b038316600090815261013660205260408120905b8154600f81810b810b600160801b909204810b900b1315612487576000806123cf6108d585612bc9565b61013754919350915042906123f290640100000000900463ffffffff16836133c9565b11156123ff575050612487565b61240982846133c9565b925061241484612c27565b50848311156124805761247661243361242d8786613420565b83612caa565b85908154600f90810b60001901810b9081900b600090815260018401602052604090209190915581546001600160801b0319166001600160801b03909116179055565b8492505050612487565b50506123a5565b8281146124e05760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e7420776974686472617761626c6520616d6f756e746044820152601760f91b60648201526084016109c5565b836001600160a01b0316856001600160a01b03167fb00382203b46c3b6ad0a2d7af0268e334bd9406256a7c7ba8f7fc8bc47f8cde98560405161252591815260200190565b60405180910390a36125378484612d13565b5050505050565b612546611c54565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861202b3390565b6040805180820190915260008082526020820152816125a1575043602084015282612066565b6000838560200151436125b49190613420565b6125be9190613401565b9050826125d3670de0b6b3a764000083613401565b6125dd91906133e1565b855186906125ec9083906133c9565b90525050436020850152509192915050565b60008060008460400151856000015161261791906133c9565b9050808411156126615760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016109c5565b60408501519150836126755780935061269f565b81841161269f57838560400181815161268e9190613420565b905250600092508391506126dd9050565b600060408601526126b08285613420565b925082866000018181516126c49190613420565b9052508451839086906126d8908390613420565b905250505b935093915050565b7f00000000000000000000000000000000000000000000000000000000000000008110156127695760405162461bcd60e51b815260206004820152602b60248201527f776974686472617720616d6f756e74206d757374203e3d204d494e5f5749544860448201526a11149055d7d05353d5539560aa1b60648201526084016109c5565b6127d66127768242612caa565b6001600160a01b038416600090815261013660205260409020908154600160801b90819004600f90810b80820b820b6000908152600180870160205260409091209490945584549301900b6001600160801b039081169091029116179055565b816001600160a01b03167f6d92f7d3303f995bf21956bb0c51b388bae348eaf45c23debd2cfa3fcd9ec6468260405161281191815260200190565b60405180910390a25050565b6060600061206683612db6565b60006001600160ff1b038211156128945760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016109c5565b5090565b60006f7fffffffffffffffffffffffffffffff1982128015906128cb57506f7fffffffffffffffffffffffffffffff8213155b6128945760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016109c5565b6001600160a01b0381163b6129945760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016109c5565b6000805160206134e083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6129cc83612e12565b6000825111806129d95750805b1561105c576129e88383612e52565b50505050565b60655460ff16610ce65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109c5565b60008181526001830160205260408120548015612b4a576000612a5b600183613420565b8554909150600090612a6f90600190613420565b9050818114612af0576000866000018281548110612a9d57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110612ace57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612b0f57634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061093c565b600091505061093c565b600054610100900460ff16612b7b5760405162461bcd60e51b81526004016109c5906132f5565b60018055565b600054610100900460ff16612ba85760405162461bcd60e51b81526004016109c5906132f5565b6065805460ff19169055565b6000612066836001600160a01b038416612f46565b6000612be88254600f81810b810b600160801b909204810b900b131590565b15612c0657604051631ed9509560e11b815260040160405180910390fd5b508054600f90810b810b900b60009081526001909101602052604090205490565b6000612c468254600f81810b810b600160801b909204810b900b131590565b15612c6457604051631ed9509560e11b815260040160405180910390fd5b508054600f90810b80820b820b600090815260018085016020526040822080549290558454920190920b6001600160801b03166001600160801b03199091161790915590565b60006001600160e01b038311801590612cc7575063ffffffff8211155b612d085760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081dda5d1a191c985dd85b60721b60448201526064016109c5565b5060209190911b1790565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d60576040519150601f19603f3d011682016040523d82523d6000602084013e612d65565b606091505b505090508061105c5760405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f2073656e64206e617469766520746f6b656e2e0000000060448201526064016109c5565b606081600001805480602002602001604051908101604052809291908181526020018280548015612e0657602002820191906000526020600020905b815481526020019060010190808311612df2575b50505050509050919050565b612e1b81612927565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b612eba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016109c5565b600080846001600160a01b031684604051612ed59190613172565b600060405180830381855af49150503d8060008114612f10576040519150601f19603f3d011682016040523d82523d6000602084013e612f15565b606091505b5091509150612f3d828260405180606001604052806027815260200161350060279139612f95565b95945050505050565b6000818152600183016020526040812054612f8d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561093c565b50600061093c565b60608315612fa4575081612066565b825115612fb45782518084602001fd5b8160405162461bcd60e51b81526004016109c5919061322a565b600060208284031215612fdf578081fd5b8135612066816134aa565b60008060408385031215612ffc578081fd5b8235613007816134aa565b946020939093013593505050565b60008060408385031215613027578182fd5b8235613032816134aa565b91506020830135613042816134aa565b809150509250929050565b6000806040838503121561305f578182fd5b823561306a816134aa565b9150602083013567ffffffffffffffff80821115613086578283fd5b818501915085601f830112613099578283fd5b8135818111156130ab576130ab613494565b604051601f8201601f19908116603f011681019083821181831017156130d3576130d3613494565b816040528281528860208487010111156130eb578586fd5b82602086016020830137856020848301015280955050505050509250929050565b60008060408385031215612ffc578182fd5b60006020828403121561312f578081fd5b5051919050565b600060208284031215613147578081fd5b5035919050565b60006020828403121561315f578081fd5b813563ffffffff81168114612066578182fd5b60008251613184818460208701613437565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156131cf5783516001600160a01b0316835292840192918401916001016131aa565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561321d578151805185528601518685015292840192908501906001016131f8565b5091979650505050505050565b6020815260008251806020840152613249816040850160208701613437565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60208082526028908201527f56616c696461746f72206e6f74206578697374206f7220686173206265656e206040820152673932b6b7bb32b21760c11b606082015260800190565b600080821280156001600160ff1b03849003851316156133aa576133aa61347e565b600160ff1b83900384128116156133c3576133c361347e565b50500190565b600082198211156133dc576133dc61347e565b500190565b6000826133fc57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561341b5761341b61347e565b500290565b6000828210156134325761343261347e565b500390565b60005b8381101561345257818101518382015260200161343a565b838111156129e85750506000910152565b60006000198214156134775761347761347e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610cd357600080fdfe5b20f40cb5e9e634a90df9a72b516c11cc52281a4d1b7b67e672e2fe544ff22f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206aa2cce075230d2464b2e4142eeebf77b830d3cf4d7f9aab68802b30411786a564736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x255 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x748747E6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC2A672E0 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xEAF7C9DC GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xEAF7C9DC EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xF0544AC8 EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0xF3F43703 EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0xF489F23B EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xF6A2314A EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2A672E0 EQ PUSH2 0x6D3 JUMPI DUP1 PUSH4 0xD2D49C4B EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0xD4C6D1DE EQ PUSH2 0x715 JUMPI DUP1 PUSH4 0xD849A502 EQ PUSH2 0x732 JUMPI DUP1 PUSH4 0xDAB31689 EQ PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x94409A56 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x94409A56 EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x9CED7E76 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xB6857844 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0xBB872B4A EQ PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x748747E6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x7B66394C EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x7EA5DB42 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x522ABC40 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x57525CBC EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40550A1C EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x40A141FF EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x45F7B8F4 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x4D238C8E EQ PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29451893 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x29451893 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x340C5A25 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x19D41774 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x24E770D0 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x26476204 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x27ED7188 EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x291 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x139 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xCD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0x465 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0xEEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x4F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x304D JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x524 CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x11BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 SLOAD PUSH2 0x435 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0x46A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x138 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x1310 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x659 CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x1320 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH2 0x60F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x1466 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6EE CALLDATASIZE PUSH1 0x4 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x708 PUSH2 0x1801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x318E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 SLOAD PUSH2 0x131 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x13B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1813 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x3136 JUMP JUMPDEST PUSH2 0x181F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 SLOAD PUSH2 0x133 SLOAD PUSH2 0x3C5 SWAP2 SWAP1 DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x7C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x19DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E6 PUSH2 0x7E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FCE JUMP JUMPDEST PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x31DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x80E CALLDATASIZE PUSH1 0x4 PUSH2 0x314E JUMP JUMPDEST PUSH2 0x1B78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x861 PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x3015 JUMP JUMPDEST PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 PUSH2 0x8B8 DUP4 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 PUSH2 0x8E6 PUSH2 0x8D5 DUP8 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST PUSH1 0x20 DUP2 SWAP1 SHR SWAP2 PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP DUP9 SWAP1 PUSH2 0x909 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x916 JUMPI POP POP PUSH2 0x935 JUMP JUMPDEST PUSH2 0x920 DUP3 DUP7 PUSH2 0x33C9 JUMP JUMPDEST SWAP5 POP POP POP DUP1 PUSH2 0x92E SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BD JUMP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x94A PUSH2 0x1C54 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374203E3D204D494E5F5354414B455F41 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x26A7AAA72A17 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9FE PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP9 DUP9 MSTORE PUSH2 0x135 DUP8 MSTORE DUP6 DUP9 KECCAK256 CALLER DUP10 MSTORE DUP8 MSTORE SWAP7 DUP6 SWAP1 KECCAK256 DUP6 MLOAD SWAP3 DUP4 ADD DUP7 MSTORE DUP1 SLOAD DUP4 MSTORE SWAP1 DUP2 ADD SLOAD SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 DUP5 ADD SLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0xAA8 DUP5 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xAB2 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD CALLVALUE SWAP1 DUP3 SWAP1 PUSH2 0xAD8 SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xAE5 DUP5 DUP4 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0xAEF DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP5 ADD DUP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 MLOAD DUP2 SSTORE DUP3 DUP9 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP10 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 MLOAD DUP2 SSTORE SWAP4 DUP9 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP7 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13B DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0xB90 SWAP1 DUP5 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH2 0x13A PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x99039FCF0A98F484616C5196EE8B2ECFA971BABF0B519848289EA4DB381F85F7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC88 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0xCB7 DUP2 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1E22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x1FF6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C PUSH2 0x12E DUP4 PUSH2 0x2048 JUMP JUMPDEST PUSH2 0xCFE PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH2 0xD0B PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST GT PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656D6F766520746865206F6E6C792076616C696461746F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xD6B DUP2 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0xD87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x3340 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD92 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH2 0xDF9 DUP4 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0xE03 DUP4 DUP3 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0xE5E PUSH2 0x12E DUP6 PUSH2 0x2077 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE DUP2 MLOAD PUSH2 0x13B DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xE9E SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xF0B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xF25 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xFAB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xFB3 PUSH2 0x208C JUMP JUMPDEST PUSH2 0xFBB PUSH2 0x20BB JUMP JUMPDEST PUSH2 0xFC4 DUP4 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0xFCC PUSH2 0x213C JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0x15 OR SWAP1 SSTORE PUSH2 0x1001 PUSH8 0x4563918244F40000 PUSH2 0x2163 JUMP JUMPDEST PUSH2 0x100D PUSH3 0x93A80 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x1016 DUP3 PUSH2 0x2220 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x2220 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ ISZERO PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x325D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1104 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x112A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST PUSH2 0x1133 DUP3 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x113F DUP3 DUP3 PUSH1 0x1 PUSH2 0x1E22 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x114B PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0x1156 PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103634B6B4BA103B30B63AB297 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH1 0x0 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x128C PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206B656570657220616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x113F CALLER DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x1318 PUSH2 0x1F9C JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x135 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x80 DUP2 ADD DUP7 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP8 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP3 DUP6 MSTORE SWAP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x13DC JUMPI PUSH2 0x1393 DUP5 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x13D0 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x13C5 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x13D0 DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH2 0x93C JUMP JUMPDEST PUSH2 0x13E5 DUP6 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x141D JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1417 SWAP2 DUP4 SWAP2 PUSH2 0x257B JUMP JUMPDEST POP PUSH2 0x1450 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE JUMPDEST PUSH2 0x145A DUP2 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x40 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x146E PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265776172642070657220626C6F636B2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x14C6 PUSH2 0x1C9A JUMP JUMPDEST POP POP PUSH2 0xCD3 DUP2 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1531 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x153C PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP8 ADD MSTORE PUSH1 0x3 SWAP5 DUP6 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 DUP10 MSTORE PUSH2 0x135 DUP9 MSTORE DUP7 DUP10 KECCAK256 CALLER DUP11 MSTORE DUP9 MSTORE SWAP8 DUP7 SWAP1 KECCAK256 DUP7 MLOAD SWAP4 DUP5 ADD DUP8 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD SLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP6 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15EA JUMPI POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO JUMPDEST PUSH2 0x1636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65207265636F7264206E6F7420666F756E642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1642 DUP9 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x169D JUMPI PUSH2 0x1651 DUP7 DUP6 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x165B DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x1666 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1675 DUP7 DUP6 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x167F DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST DUP2 PUSH2 0x13B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16F4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE SWAP5 POP PUSH2 0x16DA DUP6 DUP5 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x16E5 DUP5 DUP5 DUP10 PUSH2 0x25FE JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x16F4 DUP6 DUP5 PUSH2 0x1D93 JUMP JUMPDEST NUMBER PUSH1 0x60 DUP1 DUP7 ADD DUP3 DUP2 MSTORE SWAP1 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 MLOAD DUP2 SSTORE DUP3 DUP11 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 DUP12 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x3 SWAP3 DUP4 ADD SSTORE PUSH2 0x135 DUP5 MSTORE DUP3 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 MLOAD DUP2 SSTORE SWAP4 DUP11 ADD MLOAD SWAP1 DUP5 ADD SSTORE SWAP1 DUP9 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x13A DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1795 SWAP1 DUP5 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 CALLER SWAP2 PUSH32 0x18EDD09E80386CD99DF397E2E0D87D2BB259423EAE08645E776321A36FE680EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17F3 CALLER PUSH2 0x17EE DUP4 DUP6 PUSH2 0x33C9 JUMP JUMPDEST PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x180E PUSH2 0x12E PUSH2 0x281D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 TIMESTAMP PUSH2 0x881 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x187F PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1889 PUSH2 0x1C9A JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x18E5 SWAP1 PUSH2 0xCE8 JUMP JUMPDEST ISZERO PUSH2 0x18FE JUMPI PUSH2 0x18F4 DUP3 DUP3 PUSH2 0x1D3E JUMP JUMPDEST PUSH2 0x18FE DUP3 DUP3 PUSH2 0x1D93 JUMP JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x1912 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0x196E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616D6F756E74206F7220696E73756666696369656E742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x30B630B731B297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1980 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP NUMBER PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x19D6 SWAP1 DUP5 PUSH2 0x26E5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0x1A8D DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AFB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1AD4 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B70 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1B19 PUSH2 0x8D5 DUP7 DUP6 PUSH2 0x1BD9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B52 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 PUSH2 0x1B69 SWAP1 PUSH2 0x3463 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B01 JUMP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B80 PUSH2 0x1F9C JUMP JUMPDEST PUSH3 0x15180 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1BD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103637B1B5903832B934B7B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C00 PUSH2 0x1BE8 DUP5 PUSH2 0x282A JUMP JUMPDEST DUP6 SLOAD PUSH2 0x1BFB SWAP2 SWAP1 PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH2 0x3388 JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x1C35 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x130 SLOAD DUP2 MSTORE PUSH2 0x131 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x138 SLOAD PUSH2 0x13B SLOAD PUSH2 0x1CEE SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH2 0x132 SLOAD DUP2 MSTORE PUSH2 0x133 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x139 SLOAD PUSH2 0x13B SLOAD SWAP3 SWAP5 POP PUSH2 0x1D1B SWAP3 PUSH2 0x257B JUMP JUMPDEST DUP3 MLOAD PUSH2 0x130 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH2 0x131 SSTORE DUP2 MLOAD PUSH2 0x132 SSTORE DUP2 ADD MLOAD PUSH2 0x133 SSTORE SWAP2 SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1D4B JUMPI POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP3 MLOAD DUP3 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1D67 SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1D71 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x1D7B SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x1D8C SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1DAA SWAP2 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206B65657065722063616E207570677261646520636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E55 JUMPI PUSH2 0x105C DUP4 PUSH2 0x2927 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EBE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1EBB SWAP2 DUP2 ADD SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH2 0x105C DUP4 DUP4 DUP4 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x1FFE PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2A37 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x20E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0xCE6 PUSH2 0x2B81 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH2 0x216E PUSH1 0x5 DUP3 PUSH2 0x33E1 JUMP JUMPDEST PUSH2 0x138 DUP2 SWAP1 SSTORE PUSH2 0x217E SWAP1 DUP3 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x139 DUP2 SWAP1 SSTORE PUSH2 0x138 SLOAD PUSH1 0x40 MLOAD PUSH32 0x79A5349732F93288ABBB68E251C3DFC325BF3EE6FDE7786D919155D39733E0F5 SWAP3 PUSH2 0x21BE SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x137 DUP1 SLOAD PUSH8 0xFFFFFFFF00000000 NOT AND PUSH5 0x100000000 PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x401DAE40EDAC291EC00AD4F9E16968C6C86B73FCD6FAAD7E35A55A27FA64D048 SWAP1 PUSH1 0x20 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B21030B2323932B9B997 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x137 SLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x227E PUSH2 0x12E PUSH2 0x206D JUMP JUMPDEST LT PUSH2 0x22C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2B30B634B230BA37B9399030B93290333AB63617 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x22CB DUP2 PUSH2 0xCE8 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x22F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x134 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST PUSH2 0x233E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696461746F7220686164206265656E2061646465642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x234A PUSH2 0x12E DUP3 PUSH2 0x2BB4 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xD2B4A3AE4917617AAA5E6CAA5541A3331944D66BAA187EF6C350F1CE4012D819 SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 DUP1 PUSH2 0x23CF PUSH2 0x8D5 DUP6 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x137 SLOAD SWAP2 SWAP4 POP SWAP2 POP TIMESTAMP SWAP1 PUSH2 0x23F2 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x33C9 JUMP JUMPDEST GT ISZERO PUSH2 0x23FF JUMPI POP POP PUSH2 0x2487 JUMP JUMPDEST PUSH2 0x2409 DUP3 DUP5 PUSH2 0x33C9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2414 DUP5 PUSH2 0x2C27 JUMP JUMPDEST POP DUP5 DUP4 GT ISZERO PUSH2 0x2480 JUMPI PUSH2 0x2476 PUSH2 0x2433 PUSH2 0x242D DUP8 DUP7 PUSH2 0x3420 JUMP JUMPDEST DUP4 PUSH2 0x2CAA JUMP JUMPDEST DUP6 SWAP1 DUP2 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND PUSH1 0x0 NOT ADD DUP2 SIGNEXTEND SWAP1 DUP2 SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP5 SWAP3 POP POP POP PUSH2 0x2487 JUMP JUMPDEST POP POP PUSH2 0x23A5 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x24E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420776974686472617761626C6520616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB00382203B46C3B6AD0A2D7AF0268E334BD9406256A7C7BA8F7FC8BC47F8CDE9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2525 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2537 DUP5 DUP5 PUSH2 0x2D13 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2546 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x202B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH2 0x25A1 JUMPI POP NUMBER PUSH1 0x20 DUP5 ADD MSTORE DUP3 PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 PUSH1 0x20 ADD MLOAD NUMBER PUSH2 0x25B4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x3401 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x25D3 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x3401 JUMP JUMPDEST PUSH2 0x25DD SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST DUP6 MLOAD DUP7 SWAP1 PUSH2 0x25EC SWAP1 DUP4 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 MSTORE POP POP NUMBER PUSH1 0x20 DUP6 ADD MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x33C9 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0x2661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP DUP4 PUSH2 0x2675 JUMPI DUP1 SWAP4 POP PUSH2 0x269F JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0x269F JUMPI DUP4 DUP6 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 SWAP3 POP DUP4 SWAP2 POP PUSH2 0x26DD SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x26B0 DUP3 DUP6 PUSH2 0x3420 JUMP JUMPDEST SWAP3 POP DUP3 DUP7 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x26C4 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP DUP5 MLOAD DUP4 SWAP1 DUP7 SWAP1 PUSH2 0x26D8 SWAP1 DUP4 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 MSTORE POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x2769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776974686472617720616D6F756E74206D757374203E3D204D494E5F57495448 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x11149055D7D05353D55395 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH2 0x27D6 PUSH2 0x2776 DUP3 TIMESTAMP PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x136 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP5 SLOAD SWAP4 ADD SWAP1 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MUL SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6D92F7D3303F995BF21956BB0C51B388BAE348EAF45C23DEBD2CFA3FCD9EC646 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2811 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH2 0x2DB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x28CB JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x2894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x2994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x29CC DUP4 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x29D9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x105C JUMPI PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2E52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2B4A JUMPI PUSH1 0x0 PUSH2 0x2A5B PUSH1 0x1 DUP4 PUSH2 0x3420 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2A6F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2AF0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A9D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2ACE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x2B0F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP1 PUSH2 0x32F5 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2066 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2F46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C46 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP5 SLOAD SWAP3 ADD SWAP1 SWAP3 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x2CC7 JUMPI POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO JUMPDEST PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081DDA5D1A191C985DD85B PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x105C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E64206E617469766520746F6B656E2E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2DF2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1B DUP2 PUSH2 0x2927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE PUSH2 0x2EBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2ED5 SWAP2 SWAP1 PUSH2 0x3172 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F10 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F15 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F3D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3500 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2F95 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x2F8D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x93C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2FA4 JUMPI POP DUP2 PUSH2 0x2066 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2FB4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x322A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FDF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2066 DUP2 PUSH2 0x34AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3007 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3027 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3032 DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3042 DUP2 PUSH2 0x34AA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x305F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x306A DUP2 PUSH2 0x34AA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3086 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3099 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x30AB JUMPI PUSH2 0x30AB PUSH2 0x3494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x30D3 JUMPI PUSH2 0x30D3 PUSH2 0x3494 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x30EB JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FFC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x312F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3147 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2066 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3184 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31CF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31AA JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x321D JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x31F8 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3249 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3437 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x56616C696461746F72206E6F74206578697374206F7220686173206265656E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x3932B6B7BB32B217 PUSH1 0xC1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x33AA JUMPI PUSH2 0x33AA PUSH2 0x347E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x33C3 JUMPI PUSH2 0x33C3 PUSH2 0x347E JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x33DC JUMPI PUSH2 0x33DC PUSH2 0x347E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x33FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x341B JUMPI PUSH2 0x341B PUSH2 0x347E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3432 JUMPI PUSH2 0x3432 PUSH2 0x347E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3452 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x343A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29E8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3477 JUMPI PUSH2 0x3477 PUSH2 0x347E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID JUMPDEST KECCAK256 DELEGATECALL 0xC 0xB5 0xE9 0xE6 CALLVALUE 0xA9 0xD 0xF9 0xA7 0x2B MLOAD PUSH13 0x11CC52281A4D1B7B67E672E2FE SLOAD 0x4F CALLCODE 0x2F CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212206A LOG2 0xCC 0xE0 PUSH22 0x230D2464B2E4142EEEBF77B830D3CF4D7F9AAB68802B ADDRESS COINBASE OR DUP7 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"588:15525:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3568:31;;3589:9;5940:25:16;;3577:10:15;;3568:31;;5928:2:16;5913:18;3568:31:15;;;;;;;588:15525;;;;;3612:79;;;;;;;;;;-1:-1:-1;3683:1:15;3612:79;;;5940:25:16;;;5928:2;5913:18;3612:79:15;;;;;;;;10568:550;;;;;;;;;;-1:-1:-1;10568:550:15;;;;;:::i;:::-;;:::i;1759:35::-;;;;;;;;;;;;;;;;6536:1049;;;;;;:::i;:::-;;:::i;:::-;;1922:41;;;;;;;;;;;;;;;1572:70;;;;;;;;;;-1:-1:-1;1572:70:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;1572:70:15;;;;;;;;;;6175:2:16;6164:22;;;6146:41;;6223:22;;;;6218:2;6203:18;;6196:50;6119:18;1572:70:15;6101:151:16;1405:45:15;;;;;;;;;;-1:-1:-1;1405:45:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20263:25:16;;;20319:2;20304:18;;20297:34;;;;20236:18;1405:45:15;20218:119:16;3315:197:5;;;;;;;;;;-1:-1:-1;3315:197:5;;;;;:::i;:::-;;:::i;3879:65:15:-;;;;;;;;;;;;;:::i;1684:24::-;;;;;;;;;;-1:-1:-1;1684:24:15;;;;;;;;;;;;;;20912:10:16;20900:23;;;20882:42;;20870:2;20855:18;1684:24:15;20837:93:16;11124:128:15;;;;;;;;;;-1:-1:-1;11124:128:15;;;;;:::i;:::-;;:::i;:::-;;;5767:14:16;;5760:22;5742:41;;5730:2;5715:18;11124:128:15;5697:92:16;4880:722:15;;;;;;;;;;-1:-1:-1;4880:722:15;;;;;:::i;:::-;;:::i;1876:39::-;;;;;;;;;;;;1911:4;1876:39;;2974:546;;;;;;;;;;-1:-1:-1;2974:546:15;;;;;:::i;:::-;;:::i;4745:101::-;;;;;;;;;;-1:-1:-1;4745:101:15;;;;;:::i;:::-;;:::i;3761:222:5:-;;;;;;:::i;:::-;;:::i;4547:171:15:-;;;;;;;;;;-1:-1:-1;4547:171:15;;;;;:::i;:::-;;:::i;3004:131:5:-;;;;;;;;;;;;;:::i;1649:28:15:-;;;;;;;;;;-1:-1:-1;1649:28:15;;;;;;;;1858:84:6;;;;;;;;;;-1:-1:-1;1928:7:6;;;;1858:84;;2071:101:0;;;;;;;;;;;;;:::i;4343:161:15:-;;;;;;;;;;-1:-1:-1;4343:161:15;;;;;:::i;:::-;;:::i;8994:145::-;;;;;;;;;;-1:-1:-1;8994:145:15;;;;;:::i;:::-;;:::i;1715:38::-;;;;;;;;;;;;;;;;3812:61;;;;;;;;;;;;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;-1:-1:-1;;;;;1513:6:0;1441:85;;;-1:-1:-1;;;;;3801:32:16;;;3783:51;;3771:2;3756:18;1441:85:0;3738:102:16;1801:31:15;;;;;;;;;;;;;;;;9145:784;;;;;;;;;;-1:-1:-1;9145:784:15;;;;;:::i;:::-;;:::i;1267:21::-;;;;;;;;;;-1:-1:-1;1267:21:15;;;;-1:-1:-1;;;;;1267:21:15;;;1969:44;;;;;;;;;;;;;;;3989:187;;;;;;;;;;-1:-1:-1;3989:187:15;;;;;:::i;:::-;;:::i;7642:1346::-;;;;;;;;;;-1:-1:-1;7642:1346:15;;;;;:::i;:::-;;:::i;11258:111::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1346:25::-;;;;;;;;;;-1:-1:-1;1346:25:15;;;;;;;;;1838:32;;;;;;;;;;;;;;;;10415:147;;;;;;;;;;-1:-1:-1;10415:147:15;;;;;:::i;:::-;;:::i;5761:627::-;;;;;;;;;;-1:-1:-1;5761:627:15;;;;;:::i;:::-;;:::i;1377:22::-;;;;;;;;;;-1:-1:-1;1377:22:15;;;;;;;;;2321:198:0;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;9935:474:15:-;;;;;;;;;;-1:-1:-1;9935:474:15;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4182:155::-;;;;;;;;;;-1:-1:-1;4182:155:15;;;;;:::i;:::-;;:::i;1498:67::-;;;;;;;;;;-1:-1:-1;1498:67:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20573:25:16;;;20629:2;20614:18;;20607:34;;;;20657:18;;;20650:34;20715:2;20700:18;;20693:34;20560:3;20545:19;1498:67:15;20527:206:16;10568:550:15;-1:-1:-1;;;;;10719:22:15;;10654:7;10719:22;;;:13;:22;;;;;10654:7;;10796:14;10719:22;5676:12:12;;;;;5669:20;;-1:-1:-1;;;5655:10:12;;;;;5648:18;;:41;;5344:363;10796:14:15;10779:31;;10825:9;10820:269;10844:6;10840:1;:10;10820:269;;;10872:17;;10918:30;10936:11;:5;10945:1;10936:8;:11::i;:::-;11808:2;11800:10;;;;11840:11;11832:20;;;;11642:217;10918:30;10984:10;;10871:77;;-1:-1:-1;10871:77:15;-1:-1:-1;10997:9:15;;10966:28;;10984:10;;;;;10871:77;10966:28;:::i;:::-;:40;10962:84;;;11026:5;;;;10962:84;11059:19;11069:9;11059:19;;:::i;:::-;;;10820:269;;10852:3;;;;:::i;:::-;;;10820:269;;;-1:-1:-1;11105:6:15;;-1:-1:-1;;;10568:550:15;;;;;:::o;6536:1049::-;1482:19:6;:17;:19::i;:::-;6632:16:15::1;6619:9;:29;;6611:80;;;::::0;-1:-1:-1;;;6611:80:15;;8205:2:16;6611:80:15::1;::::0;::::1;8187:21:16::0;8244:2;8224:18;;;8217:30;8283:34;8263:18;;;8256:62;-1:-1:-1;;;8334:18:16;;;8327:36;8380:19;;6611:80:15::1;;;;;;;;;6710:28;6728:9;6710:17;:28::i;:::-;6702:81;;;;-1:-1:-1::0;;;6702:81:15::1;;;;;;;:::i;:::-;6795:17;6814::::0;6835:14:::1;:12;:14::i;:::-;-1:-1:-1::0;;;;;6884:33:15;::::1;6859:22;6884:33:::0;;;-1:-1:-1;;;;;;;;;;;6884:22:15::1;:33:::0;;;:22;:33;;;6859:58;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;6952:21;;;6884:10:::1;6952:21:::0;;;;;6974:10:::1;6952:33:::0;;;;;;;;6927:58;;;;::::1;::::0;;;;;;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;;;;;;;6794:55;;-1:-1:-1;6794:55:15;;-1:-1:-1;6859:58:15;6995:28:::1;6794:55:::0;6859:58;6995:14:::1;:28::i;:::-;7033;7048:5;7055;7033:14;:28::i;:::-;7092:9;7071:5;:17;;:30;;;;;;;:::i;:::-;::::0;;-1:-1:-1;7111:30:15;;7132:9:::1;::::0;7111:5;;:30:::1;::::0;7132:9;;7111:30:::1;:::i;:::-;::::0;;-1:-1:-1;7151:31:15::1;7169:5:::0;7176;7151:17:::1;:31::i;:::-;7192;7210:5;7217;7192:17;:31::i;:::-;7253:12;7233:17;::::0;;::::1;:32:::0;;;7275:17;;::::1;:32:::0;;;-1:-1:-1;;;;;7317:33:15;::::1;-1:-1:-1::0;7317:33:15;;;-1:-1:-1;;;;;;;;;;;7317:22:15::1;:33:::0;;;:22;:33;;;:41;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;:10:::1;7368:21:::0;;;;;7390:10:::1;7368:33:::0;;;;;;;:41;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;7454:17:::1;:30:::0;;7475:9:::1;::::0;-1:-1:-1;7454:30:15::1;::::0;7475:9;;7454:30:::1;:::i;:::-;;;;;;;;7514:9;7494:16;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7539:39:15::1;::::0;7568:9:::1;5940:25:16::0;;-1:-1:-1;;;;;7539:39:15;::::1;::::0;7545:10:::1;::::0;7539:39:::1;::::0;5928:2:16;5913:18;7539:39:15::1;;;;;;;1511:1:6;;;;6536:1049:15::0;:::o;3315:197:5:-;1889:4;-1:-1:-1;;;;;1898:6:5;1881:23;;;1873:80;;;;-1:-1:-1;;;1873:80:5;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:5;:20;-1:-1:-1;;;;;;;;;;;1642:65:2;-1:-1:-1;;;;;1642:65:2;;1563:151;1971:20:5;-1:-1:-1;;;;;1971:30:5;;1963:87;;;;-1:-1:-1;;;1963:87:5;;;;;;;:::i;:::-;3398:36:::1;3416:17;3398;:36::i;:::-;3485:12;::::0;;3495:1:::1;3485:12:::0;;;::::1;::::0;::::1;::::0;;;3444:61:::1;::::0;3466:17;;3485:12;3444:21:::1;:61::i;:::-;3315:197:::0;:::o;3879:65:15:-;1334:13:0;:11;:13::i;:::-;3927:10:15::1;:8;:10::i;:::-;3879:65::o:0;11124:128::-;11191:4;11214:31;:11;11235:9;11214:20;:31::i;4880:722::-;1334:13:0;:11;:13::i;:::-;4984:1:15::1;4961:20;:11;:18;:20::i;:::-;:24;4953:70;;;::::0;-1:-1:-1;;;4953:70:15;;7803:2:16;4953:70:15::1;::::0;::::1;7785:21:16::0;7842:2;7822:18;;;7815:30;7881:34;7861:18;;;7854:62;-1:-1:-1;;;7932:18:16;;;7925:31;7973:19;;4953:70:15::1;7775:223:16::0;4953:70:15::1;5041:28;5059:9;5041:17;:28::i;:::-;5033:81;;;;-1:-1:-1::0;;;5033:81:15::1;;;;;;;:::i;:::-;5126:17;5145::::0;5166:14:::1;:12;:14::i;:::-;-1:-1:-1::0;;;;;5214:33:15;::::1;5190:21;5214:33:::0;;;-1:-1:-1;;;;;;;;;;;5214:22:15::1;:33:::0;;;:22;:33;;;;5190:57;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;;;5125:55;;-1:-1:-1;5125:55:15;-1:-1:-1;5257:27:15::1;5125:55:::0;5190:57;5257:14:::1;:27::i;:::-;5294:30;5312:5;5319:4;5294:17;:30::i;:::-;5353:12;5334:16;::::0;::::1;:31:::0;;;-1:-1:-1;;;;;5375:33:15;::::1;:22;:33:::0;;;-1:-1:-1;;;;;;;;;;;5375:22:15::1;:33:::0;;;:22;:33;;;;:40;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;5426:29:::1;:11;5398:9:::0;5426:18:::1;:29::i;:::-;-1:-1:-1::0;;;;;;5465:24:15;::::1;;::::0;;;:13:::1;:24;::::0;;;;;;:32;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;5529:16;;5508:17:::1;:37:::0;;5529:16;;5508:17;;:37:::1;::::0;5529:16;;5508:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;5561:34:15::1;::::0;;-1:-1:-1;;;;;4031:32:16;;4013:51;;5589:5:15::1;4095:2:16::0;4080:18;;4073:50;5561:34:15::1;::::0;3986:18:16;5561:34:15::1;;;;;;;1357:1:0;;;4880:722:15::0;:::o;2974:546::-;3111:19:4;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:4;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:4;1476:19:8;:23;;;3219:66:4;;-1:-1:-1;3268:12:4;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:4;;13238:2:16;3157:201:4;;;13220:21:16;13277:2;13257:18;;;13250:30;13316:34;13296:18;;;13289:62;-1:-1:-1;;;13367:18:16;;;13360:44;13421:19;;3157:201:4;13210:236:16;3157:201:4;3368:12;:16;;-1:-1:-1;;3368:16:4;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:4;;;;;3394:65;3059:24:15::1;:22;:24::i;:::-;3093:17;:15;:17::i;:::-;3120:25;3139:5;3120:18;:25::i;:::-;3155:24;:22;:24::i;:::-;3190:6;:19:::0;;-1:-1:-1;;;;;;3190:19:15::1;3199:10;3190:19;::::0;;3261:14:::1;:19:::0;;-1:-1:-1;;3261:19:15::1;3278:2;3261:19;::::0;;3338:27:::1;3357:7;3338:18;:27::i;:::-;3425:22;3440:6;3425:14;:22::i;:::-;3489:24;3503:9;3489:13;:24::i;:::-;3483:14:4::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:4;;;3553:14;;-1:-1:-1;6409:36:16;;3553:14:4;;6397:2:16;6382:18;3553:14:4;;;;;;;3479:99;2974:546:15;;;:::o;4745:101::-;1334:13:0;:11;:13::i;:::-;4815:24:15::1;4829:9;4815:13;:24::i;3761:222:5:-:0;1889:4;-1:-1:-1;;;;;1898:6:5;1881:23;;;1873:80;;;;-1:-1:-1;;;1873:80:5;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:5;:20;-1:-1:-1;;;;;;;;;;;1642:65:2;-1:-1:-1;;;;;1642:65:2;;1563:151;1971:20:5;-1:-1:-1;;;;;1971:30:5;;1963:87;;;;-1:-1:-1;;;1963:87:5;;;;;;;:::i;:::-;3878:36:::1;3896:17;3878;:36::i;:::-;3924:52;3946:17;3965:4;3971;3924:21;:52::i;:::-;3761:222:::0;;:::o;4547:171:15:-;1334:13:0;:11;:13::i;:::-;4634:20:15::1;:11;:18;:20::i;:::-;4625:5;:29;;;;4617:62;;;::::0;-1:-1:-1;;;4617:62:15;;14467:2:16;4617:62:15::1;::::0;::::1;14449:21:16::0;14506:2;14486:18;;;14479:30;-1:-1:-1;;;14525:18:16;;;14518:50;14585:18;;4617:62:15::1;14439:170:16::0;4617:62:15::1;4689:14;:22:::0;;-1:-1:-1;;4689:22:15::1;;::::0;;;::::1;::::0;;;::::1;::::0;;4547:171::o;3004:131:5:-;3082:7;2324:4;-1:-1:-1;;;;;2333:6:5;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:5;;11708:2:16;2308:92:5;;;11690:21:16;11747:2;11727:18;;;11720:30;11786:34;11766:18;;;11759:62;11857:26;11837:18;;;11830:54;11901:19;;2308:92:5;11680:246:16;2308:92:5;-1:-1:-1;;;;;;;;;;;;3004:131:5;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;4343:161:15:-:0;1334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4418:23:15;::::1;4410:59;;;::::0;-1:-1:-1;;;4410:59:15;;16006:2:16;4410:59:15::1;::::0;::::1;15988:21:16::0;16045:2;16025:18;;;16018:30;16084:25;16064:18;;;16057:53;16127:18;;4410:59:15::1;15978:173:16::0;4410:59:15::1;4479:6;:18:::0;;-1:-1:-1;;;;;;4479:18:15::1;-1:-1:-1::0;;;;;4479:18:15;;;::::1;::::0;;;::::1;::::0;;4343:161::o;8994:145::-;9082:50;9102:10;9114:9;9125:6;9082:19;:50::i;3812:61::-;1334:13:0;:11;:13::i;:::-;3858:8:15::1;:6;:8::i;9145:784::-:0;-1:-1:-1;;;;;9269:21:15;;;9226:7;9269:21;;;:10;:21;;;;;;;;:29;;;;;;;;;;;9245:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9226:7:15;;9245:53;;9334:299;;9381:25;9399:6;9381:17;:25::i;:::-;9377:207;;;-1:-1:-1;9426:20:15;;;;;;;;;9433:13;9426:20;;;;;;;;;9482:23;;9507:17;;9464:61;;9426:20;;9464:11;:61::i;:::-;;9543:26;9558:4;9564;9543:14;:26::i;:::-;-1:-1:-1;9604:18:15;;;;-1:-1:-1;9597:25:15;;9334:299;9646:28;9664:9;9646:17;:28::i;:::-;9642:210;;;-1:-1:-1;9690:17:15;;;;;;;;;9697:10;9690:17;;;;;;;;;9739:20;;9761:17;;9721:58;;9690:17;;9721:11;:58::i;:::-;;9642:210;;;-1:-1:-1;;;;;;9817:24:15;;;;;;:13;:24;;;;;;;;;9810:31;;;;;;;;;;;;;;;;;;;9642:210;9861:26;9876:4;9882;9861:14;:26::i;:::-;-1:-1:-1;9904:18:15;;;;9145:784;-1:-1:-1;;;9145:784:15:o;3989:187::-;1334:13:0;:11;:13::i;:::-;4078:1:15::1;4069:6;:10;4061:48;;;::::0;-1:-1:-1;;;4061:48:15;;10194:2:16;4061:48:15::1;::::0;::::1;10176:21:16::0;10233:2;10213:18;;;10206:30;10272:27;10252:18;;;10245:55;10317:18;;4061:48:15::1;10166:175:16::0;4061:48:15::1;4119:14;:12;:14::i;:::-;;;4143:26;4162:6;4143:18;:26::i;7642:1346::-:0;1815:1:7;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:7;;19749:2:16;2561:63:7;;;19731:21:16;19788:2;19768:18;;;19761:30;19827:33;19807:18;;;19800:61;19878:18;;2561:63:7;19721:181:16;2561:63:7;1815:1;2699:7;:18;1482:19:6::1;:17;:19::i;:::-;7741:17:15::2;7760::::0;7781:14:::2;:12;:14::i;:::-;-1:-1:-1::0;;;;;7830:33:15;::::2;7805:22;7830:33:::0;;;-1:-1:-1;;;;;;;;;;;7830:22:15::2;:33:::0;;;:22;:33;;;7805:58;;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;7898:21;;;7830:10:::2;7898:21:::0;;;;;7920:10:::2;7898:33:::0;;;;;;;;7873:58;;;;::::2;::::0;;;;;;;;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;::::2;::::0;;;;;;;;7740:55;;-1:-1:-1;7740:55:15;;-1:-1:-1;7950:23:15;;::::2;::::0;:49:::2;;-1:-1:-1::0;7977:17:15::2;::::0;::::2;::::0;:22;::::2;7950:49;7942:85;;;::::0;-1:-1:-1;;;7942:85:15;;16765:2:16;7942:85:15::2;::::0;::::2;16747:21:16::0;16804:2;16784:18;;;16777:30;16843:25;16823:18;;;16816:53;16886:18;;7942:85:15::2;16737:173:16::0;7942:85:15::2;8038:16;8064:14:::0;8093:28:::2;8111:9;8093:17;:28::i;:::-;8089:542;;;8137:28;8152:5;8159;8137:14;:28::i;:::-;8179;8194:5;8201;8179:14;:28::i;:::-;8242:30;8251:5;8258;8265:6;8242:8;:30::i;:::-;8221:51:::0;;-1:-1:-1;8221:51:15;-1:-1:-1;8286:31:15::2;8304:5:::0;8311;8286:17:::2;:31::i;:::-;8331;8349:5;8356;8331:17;:31::i;:::-;8397:8;8376:17;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8089:542:15::2;::::0;-1:-1:-1;8089:542:15::2;;-1:-1:-1::0;;;;;8444:24:15;::::2;;::::0;;;:13:::2;:24;::::0;;;;;;;;8436:32;;;;::::2;::::0;;;;;;;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;8482:28:15::2;8436:32:::0;8504:5;8482:14:::2;:28::i;:::-;8545:30;8554:5;8561;8568:6;8545:8;:30::i;:::-;8524:51:::0;;-1:-1:-1;8524:51:15;-1:-1:-1;8589:31:15::2;8607:5:::0;8614;8589:17:::2;:31::i;:::-;8661:12;8641:17;::::0;;::::2;:32:::0;;;8683:17;;::::2;:32:::0;;;-1:-1:-1;;;;;8725:33:15;::::2;-1:-1:-1::0;8725:33:15;;;-1:-1:-1;;;;;;;;;;;8725:22:15::2;:33:::0;;;:22;:33;;;:41;;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;:10:::2;8776:21:::0;;;;;8798:10:::2;8776:33:::0;;;;;;;:41;;;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;;;;;;;::::2;::::0;;;;8828:16:::2;:28:::0;;8848:8;;-1:-1:-1;8828:28:15::2;::::0;8848:8;;8828:28:::2;:::i;:::-;::::0;;;-1:-1:-1;;8872:48:15::2;::::0;;20263:25:16;;;20319:2;20304:18;;20297:34;;;-1:-1:-1;;;;;8872:48:15;::::2;::::0;8880:10:::2;::::0;8872:48:::2;::::0;20236:18:16;8872:48:15::2;;;;;;;8931:50;8951:10;8963:17;8974:6:::0;8963:8;:17:::2;:::i;:::-;8931:19;:50::i;:::-;-1:-1:-1::0;;1772:1:7;2872:22;;-1:-1:-1;;;;;;7642:1346:15:o;11258:111::-;11307:16;11342:20;:11;:18;:20::i;:::-;11335:27;;11258:111;:::o;10415:147::-;10484:7;10510:45;10530:7;10539:15;10510:19;:45::i;5761:627::-;1815:1:7;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:7;;19749:2:16;2561:63:7;;;19731:21:16;19788:2;19768:18;;;19761:30;19827:33;19807:18;;;19800:61;19878:18;;2561:63:7;19721:181:16;2561:63:7;1815:1;2699:7;:18;1482:19:6::1;:17;:19::i;:::-;5851:17:15::2;5874:14;:12;:14::i;:::-;-1:-1:-1::0;5945:10:15::2;5898:21;5922:34:::0;;;-1:-1:-1;;;;;;;;;;;5922:22:15::2;:34:::0;;;:22;:34;;;;5898:58;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;;;;;;::::2;::::0;;::::2;::::0;;;;;5850:38;;-1:-1:-1;5970:29:15::2;::::0;:17:::2;:29::i;:::-;5966:131;;;6015:27;6030:5;6037:4;6015:14;:27::i;:::-;6056:30;6074:5;6081:4;6056:17;:30::i;:::-;6124:1;6115:6;:10;:42;;;;;6139:4;:18;;;6129:6;:28;;6115:42;6107:94;;;::::0;-1:-1:-1;;;6107:94:15;;7046:2:16;6107:94:15::2;::::0;::::2;7028:21:16::0;7085:2;7065:18;;;7058:30;7124:34;7104:18;;;7097:62;-1:-1:-1;;;7175:18:16;;;7168:37;7222:19;;6107:94:15::2;7018:229:16::0;6107:94:15::2;6233:6;6211:4;:18;;:28;;;;;;;:::i;:::-;::::0;;-1:-1:-1;6268:12:15::2;6249:16;::::0;::::2;:31:::0;;;6313:10:::2;6290:22;:34:::0;;;-1:-1:-1;;;;;;;;;;;6290:22:15::2;:34:::0;;;:22;:34;;;;:41;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;;6342:39:::2;::::0;6374:6;6342:19:::2;:39::i;:::-;-1:-1:-1::0;;1772:1:7;2872:22;;-1:-1:-1;5761:627:15:o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;8612:2:16;2401:73:0::1;::::0;::::1;8594:21:16::0;8651:2;8631:18;;;8624:30;8690:34;8670:18;;;8663:62;-1:-1:-1;;;8741:18:16;;;8734:36;8787:19;;2401:73:0::1;8584:228:16::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;9935:474:15:-:0;-1:-1:-1;;;;;10092:22:15;;10046:43;10092:22;;;:13;:22;;;;;10003:31;;10141:14;10092:22;5676:12:12;;;;;5669:20;;-1:-1:-1;;;5655:10:12;;;;;5648:18;;:41;;5344:363;10141:14:15;10124:31;;10196:6;10179:24;;;;;;-1:-1:-1;;;10179:24:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;10179:24:15;;;;;;;;;;;;;;;;10165:38;;10218:9;10213:190;10237:6;10233:1;:10;10213:190;;;10265:14;;10302:30;10320:11;:5;10329:1;10320:8;:11::i;10302:30::-;10264:68;;;;10363:29;;;;;;;;10374:6;10363:29;;;;10382:9;10363:29;;;10346:11;10358:1;10346:14;;;;;;-1:-1:-1;;;10346:14:15;;;;;;;;;;;;;;:46;;;;10213:190;;10245:3;;;;:::i;:::-;;;10213:190;;;;9935:474;;;;;:::o;4182:155::-;1334:13:0;:11;:13::i;:::-;4267:6:15::1;4257;:16;;;;4249:49;;;::::0;-1:-1:-1;;;4249:49:15;;19400:2:16;4249:49:15::1;::::0;::::1;19382:21:16::0;19439:2;19419:18;;;19412:30;-1:-1:-1;;;19458:18:16;;;19451:50;19518:18;;4249:49:15::1;19372:170:16::0;4249:49:15::1;4308:22;4323:6;4308:14;:22::i;4598:324:12:-:0;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;;;4781:20;;:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:12;;;;;;4843:17;;;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:12;;;;;;;;;;;4839:43;4899:16;;;;;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:12;;;;;4598:324::o;2010:106:6:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:6;;12133:2:16;2071:38:6;;;12115:21:16;12172:2;12152:18;;;12145:30;-1:-1:-1;;;12191:18:16;;;12184:46;12247:18;;2071:38:6;12105:166:16;13027:316:15;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13125:70:15;;;;;;;;;13137:13;13125:70;;;;;;;;;13152:23;;13177:17;;13125:70;;;13152:23;13125:11;:70::i;:::-;13213:64;;;;;;;;;13225:10;13213:64;;;;;;;;;13237:20;;13259:17;;13117:78;;-1:-1:-1;13213:64:15;;:11;:64::i;:::-;13287:21;;:13;:21;;;;;;;;13318:18;;:10;:18;;;;;;13303:5;;13027:316;-1:-1:-1;13027:316:15:o;13822:247::-;13915:16;;;;13911:58;;13822:247;;:::o;13911:58::-;14047:15;;;;14020:12;;14001:16;;1911:4;;14001:31;;;:::i;:::-;14000:44;;;;:::i;:::-;:62;;;;:::i;:::-;13978:4;:18;;:84;;;;;;;:::i;:::-;;;-1:-1:-1;;;13822:247:15:o;14075:161::-;14205:12;;14186:16;;1911:4;;14186:31;;;:::i;:::-;14185:44;;;;:::i;:::-;14167:15;;;;:62;-1:-1:-1;14075:161:15:o;15951:160::-;16060:6;;-1:-1:-1;;;;;16060:6:15;16046:10;:20;16038:66;;;;-1:-1:-1;;;16038:66:15;;13653:2:16;16038:66:15;;;13635:21:16;13692:2;13672:18;;;13665:30;13731:34;13711:18;;;13704:62;-1:-1:-1;;;13782:18:16;;;13775:31;13823:19;;16038:66:15;13625:223:16;2938:974:2;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:2;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:2;;;;;;;;-1:-1:-1;;3531:63:2;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:2;;14816:2:16;3758:56:2;;;14798:21:16;14855:2;14835:18;;;14828:30;14894:34;14874:18;;;14867:62;-1:-1:-1;;;14945:18:16;;;14938:44;14999:19;;3758:56:2;14788:236:16;3527:302:2;-1:-1:-1;;;;;;;;;;;3644:28:2;;3636:82;;;;-1:-1:-1;;;3636:82:2;;12828:2:16;3636:82:2;;;12810:21:16;12867:2;12847:18;;;12840:30;12906:34;12886:18;;;12879:62;-1:-1:-1;;;12957:18:16;;;12950:39;13006:19;;3636:82:2;12800:231:16;3636:82:2;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:9;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;15645:2:16;1654:68:0;;;15627:21:16;;;15664:18;;;15657:30;15723:34;15703:18;;;15696:62;15775:18;;1654:68:0;15617:182:16;2676:117:6;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:6::1;::::0;;2764:22:::1;929:10:9::0;2773:12:6::1;2764:22;::::0;-1:-1:-1;;;;;3801:32:16;;;3783:51;;3771:2;3756:18;2764:22:6::1;;;;;;;2676:117::o:0;8583:165:13:-;-1:-1:-1;;;;;8716:23:13;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;8679:62;8583:165;-1:-1:-1;;;8583:165:13:o;8829:115::-;8892:7;8918:19;8926:3;4444:18;;4362:107;8346:156;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:13;;8442:7;:53::i;1853:111:7:-;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1923:34:7::1;:32;:34::i;1063:97:6:-:0;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1126:27:6::1;:25;:27::i;2673:187:0:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2673:187;;:::o;1042:67:5:-;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;15115:254:15:-;15204:10;15213:1;15204:6;:10;:::i;:::-;15178:23;:36;;;15247:32;;:6;:32;:::i;:::-;15224:20;:55;;;15316:23;;15294:68;;;;;;20263:25:16;;20319:2;20304:18;;20297:34;20251:2;20236:18;;20218:119;15294:68:15;;;;;;;;15115:254;:::o;15375:124::-;15433:10;:19;;-1:-1:-1;;15433:19:15;;;;;;;;;;;;;;;15467:25;;20882:42:16;;;15467:25:15;;20870:2:16;20855:18;15467:25:15;20837:93:16;15505:440:15;-1:-1:-1;;;;;15574:23:15;;15566:52;;;;-1:-1:-1;;;15566:52:15;;11363:2:16;15566:52:15;;;11345:21:16;11402:2;11382:18;;;11375:30;-1:-1:-1;;;11421:18:16;;;11414:46;11477:18;;15566:52:15;11335:166:16;15566:52:15;15659:14;;;;15636:20;:11;:18;:20::i;:::-;:37;15628:70;;;;-1:-1:-1;;;15628:70:15;;19051:2:16;15628:70:15;;;19033:21:16;19090:2;19070:18;;;19063:30;-1:-1:-1;;;19109:18:16;;;19102:50;19169:18;;15628:70:15;19023:170:16;15628:70:15;15730:28;15748:9;15730:17;:28::i;:::-;15729:29;:74;;;;-1:-1:-1;;;;;;15762:24:15;;;;;;:13;:24;;;;;:36;;;:41;15729:74;15708:146;;;;-1:-1:-1;;;15708:146:15;;9019:2:16;15708:146:15;;;9001:21:16;9058:2;9038:18;;;9031:30;9097:27;9077:18;;;9070:55;9142:18;;15708:146:15;8991:175:16;15708:146:15;15864:26;:11;15880:9;15864:15;:26::i;:::-;-1:-1:-1;15905:33:15;;;-1:-1:-1;;;;;4031:32:16;;4013:51;;15933:4:15;4095:2:16;4080:18;;4073:50;15905:33:15;;3986:18:16;15905:33:15;3968:161:16;12180:841:15;-1:-1:-1;;;;;12334:22:15;;12288:43;12334:22;;;:13;:22;;;;;;12391:454;5880:12:12;;;;;;5866:26;;-1:-1:-1;;;5866:10:12;;;;;:26;;;;12391:454:15;;12429:17;12448;12469:32;12487:13;:5;:11;:13::i;12469:32::-;12531:10;;12428:73;;-1:-1:-1;12428:73:15;-1:-1:-1;12544:15:15;;12519:22;;12531:10;;;;;12428:73;12519:22;:::i;:::-;:40;12515:84;;;12579:5;;;;12515:84;12612:16;12619:9;12612:16;;:::i;:::-;;;12642;:5;:14;:16::i;:::-;;12682:6;12676:3;:12;12672:163;;;12708:59;12724:42;12742:12;12748:6;12742:3;:12;:::i;:::-;12756:9;12724:17;:42::i;:::-;12708:5;;3023:12:12;;;;;;-1:-1:-1;;3023:16:12;3059:23;;;;;;2959:17;3059:23;;;3038:1;3059:11;;:23;;;;;:31;;;;3100:25;;-1:-1:-1;;;;;;3100:25:12;-1:-1:-1;;;;;3100:25:12;;;;;;2878:254;12708:59:15;12791:6;12785:12;;12815:5;;;;12672:163;12391:454;;;;;12869:6;12862:3;:13;12854:59;;;;-1:-1:-1;;;12854:59:15;;10961:2:16;12854:59:15;;;10943:21:16;11000:2;10980:18;;;10973:30;11039:34;11019:18;;;11012:62;-1:-1:-1;;;11090:18:16;;;11083:31;11131:19;;12854:59:15;10933:223:16;12854:59:15;12957:9;-1:-1:-1;;;;;12928:47:15;12948:7;-1:-1:-1;;;;;12928:47:15;;12968:6;12928:47;;;;5940:25:16;;5928:2;5913:18;;5895:76;12928:47:15;;;;;;;;12985:29;12996:9;13007:6;12985:10;:29::i;:::-;12180:841;;;;;:::o;2429:115:6:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:6::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:9::0;;850:96;13349:467:15;-1:-1:-1;;;;;;;;;;;;;;;;;13513:16:15;13509:103;;-1:-1:-1;13564:12:15;13545:16;;;:31;:4;13590:11;;13509:103;13621:14;13674;13654:4;:16;;;13639:12;:31;;;;:::i;:::-;13638:50;;;;:::i;:::-;13621:67;-1:-1:-1;13736:11:15;13715:17;1911:4;13621:67;13715:17;:::i;:::-;13714:33;;;;:::i;:::-;13698:49;;:4;;:49;;;;;:::i;:::-;;;-1:-1:-1;;13776:12:15;13757:16;;;:31;-1:-1:-1;13757:16:15;;13349:467;-1:-1:-1;;13349:467:15:o;14242:676::-;14377:16;14395:14;14421:17;14461:5;:19;;;14441:5;:17;;;:39;;;;:::i;:::-;14421:59;;14508:9;14498:6;:19;;14490:53;;;;-1:-1:-1;;;14490:53:15;;12478:2:16;14490:53:15;;;12460:21:16;12517:2;12497:18;;;12490:30;-1:-1:-1;;;12536:18:16;;;12529:51;12597:18;;14490:53:15;12450:171:16;14490:53:15;14562:19;;;;;-1:-1:-1;14595:11:15;14591:174;;14631:9;14622:18;;14591:174;;;14671:6;14661;:16;14657:108;;14716:6;14693:5;:19;;:29;;;;;;;:::i;:::-;;;-1:-1:-1;14744:1:15;;-1:-1:-1;14747:6:15;;-1:-1:-1;14736:18:15;;-1:-1:-1;14736:18:15;14657:108;14796:1;14774:19;;;:23;14818:15;14827:6;14818;:15;:::i;:::-;14807:26;;14864:8;14843:5;:17;;:29;;;;;;;:::i;:::-;;;-1:-1:-1;14882:29:15;;14903:8;;14882:5;;:29;;14903:8;;14882:29;:::i;:::-;;;-1:-1:-1;;14242:676:15;;;;;;;:::o;11865:309::-;11964:19;11954:6;:29;;11946:85;;;;-1:-1:-1;;;11946:85:15;;14055:2:16;11946:85:15;;;14037:21:16;14094:2;14074:18;;;14067:30;14133:34;14113:18;;;14106:62;-1:-1:-1;;;14184:18:16;;;14177:41;14235:19;;11946:85:15;14027:233:16;11946:85:15;12041:75;12073:42;12091:6;12099:15;12073:17;:42::i;:::-;-1:-1:-1;;;;;12041:22:15;;;;;;:13;:22;;;;;;2187:10:12;;-1:-1:-1;;;2187:10:12;;;;;;;;2207:22;;;;;2168:16;2207:22;;;:11;;;;:22;;;;;;:30;;;;2271:26;;2284:13;;2271:26;;-1:-1:-1;;;;;2271:26:12;;;;;;;;;;;2088:226;12041:75:15;12151:7;-1:-1:-1;;;;;12131:36:15;;12160:6;12131:36;;;;5940:25:16;;5928:2;5913:18;;5895:76;12131:36:15;;;;;;;;11865:309;;:::o;9982:300:13:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;35228:297:11:-;35284:6;-1:-1:-1;;;;;35409:5:11;:34;;35401:87;;;;-1:-1:-1;;;35401:87:11;;17529:2:16;35401:87:11;;;17511:21:16;17568:2;17548:18;;;17541:30;17607:34;17587:18;;;17580:62;-1:-1:-1;;;17658:18:16;;;17651:38;17706:19;;35401:87:11;17501:230:16;35401:87:11;-1:-1:-1;35512:5:11;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:11;;;;;:54;;-1:-1:-1;26405:16:11;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:11;;9786:2:16;26359:106:11;;;9768:21:16;9825:2;9805:18;;;9798:30;9864:34;9844:18;;;9837:62;-1:-1:-1;;;9915:18:16;;;9908:37;9962:19;;26359:106:11;9758:229:16;1805:281:2;-1:-1:-1;;;;;1476:19:8;;;1878:106:2;;;;-1:-1:-1;;;1878:106:2;;15231:2:16;1878:106:2;;;15213:21:16;15270:2;15250:18;;;15243:30;15309:34;15289:18;;;15282:62;-1:-1:-1;;;15360:18:16;;;15353:43;15413:19;;1878:106:2;15203:235:16;1878:106:2;-1:-1:-1;;;;;;;;;;;1994:85:2;;-1:-1:-1;;;;;;1994:85:2;-1:-1:-1;;;;;1994:85:2;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;:::-;;2478:288;;;:::o;2188:106:6:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:6;;7454:2:16;2246:41:6;;;7436:21:16;7493:2;7473:18;;;7466:30;-1:-1:-1;;;7512:18:16;;;7505:50;7572:18;;2246:41:6;7426:170:16;2685:1388:13;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:13;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;-1:-1:-1;;;3470:22:13;;;;;;;;;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;-1:-1:-1;;;3592:26:13;;;;;;;;;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;-1:-1:-1;;;3876:17:13;;;;;;;;;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;1970:109:7;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1772:1:7::1;2050:22:::0;;1970:109::o;1166:95:6:-;4910:13:4;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:4;;;;;;;:::i;:::-;1239:7:6::1;:15:::0;;-1:-1:-1;;1239:15:6::1;::::0;;1166:95::o;8028:150:13:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:13;;8121:4;:50::i;3751:212:12:-;3817:13;3846:12;3852:5;5880:12;;;;;5866:26;;-1:-1:-1;;;5866:10:12;;;;;:26;;;;;5777:122;3846:12;3842:32;;;3867:7;;-1:-1:-1;;;3867:7:12;;;;;;;;;;;3842:32;-1:-1:-1;3904:12:12;;;;;;3933:23;;;;3884:17;3933:23;;;3904:12;3933:11;;;:23;;;;;;;3751:212::o;3287:324::-;3351:13;3380:12;3386:5;5880:12;;;;;5866:26;;-1:-1:-1;;;5866:10:12;;;;;:26;;;;;5777:122;3380:12;3376:32;;;3401:7;;-1:-1:-1;;;3401:7:12;;;;;;;;;;;3376:32;-1:-1:-1;3438:12:12;;;;;;3468:23;;;;;3418:17;3468:23;;;3438:12;3468:11;;;:23;;;;;;;3501:30;;;3565:29;;3580:14;;3565:29;;;-1:-1:-1;;;;;3565:29:12;-1:-1:-1;;;;;;3565:29:12;;;;;;;3468:23;3287:324::o;11375:261:15:-;11460:13;-1:-1:-1;;;;;11493:27:15;;;;;:60;;-1:-1:-1;11537:16:15;11524:29;;;11493:60;11485:91;;;;-1:-1:-1;;;11485:91:15;;17938:2:16;11485:91:15;;;17920:21:16;17977:2;17957:18;;;17950:30;-1:-1:-1;;;17996:18:16;;;17989:48;18054:18;;11485:91:15;17910:168:16;11485:91:15;-1:-1:-1;11613:2:15;11603:12;;;;11602:26;;11375:261::o;14924:185::-;15000:12;15018:2;-1:-1:-1;;;;;15018:7:15;15033:6;15018:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14999:45;;;15062:7;15054:48;;;;-1:-1:-1;;;15054:48:15;;18694:2:16;15054:48:15;;;18676:21:16;18733:2;18713:18;;;18706:30;18772;18752:18;;;18745:58;18820:18;;15054:48:15;18666:178:16;5469:109:13;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;2192:152:2:-;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:2;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:8;;;7195:88:2;;;;-1:-1:-1;;;7195:88:2;;16358:2:16;7195:88:2;;;16340:21:16;16397:2;16377:18;;;16370:30;16436:34;16416:18;;;16409:62;-1:-1:-1;;;16487:18:16;;;16480:36;16533:19;;7195:88:2;16330:228:16;7195:88:2;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:2;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:2:o;2113:404:13:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:13;2488:12;;6622:742:8;6768:12;6796:7;6792:566;;;-1:-1:-1;6826:10:8;6819:17;;6792:566;6937:17;;:21;6933:415;;7181:10;7175:17;7241:15;7228:10;7224:2;7220:19;7213:44;7130:145;7320:12;7313:20;;-1:-1:-1;;;7313:20:8;;;;;;;;:::i;14:257:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:333::-;352:6;360;413:2;401:9;392:7;388:23;384:32;381:2;;;434:6;426;419:22;381:2;478:9;465:23;497:31;522:5;497:31;:::i;:::-;547:5;599:2;584:18;;;;571:32;;-1:-1:-1;;;371:238:16:o;614:398::-;682:6;690;743:2;731:9;722:7;718:23;714:32;711:2;;;764:6;756;749:22;711:2;808:9;795:23;827:31;852:5;827:31;:::i;:::-;877:5;-1:-1:-1;934:2:16;919:18;;906:32;947:33;906:32;947:33;:::i;:::-;999:7;989:17;;;701:311;;;;;:::o;1017:1101::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:2;;;1176:6;1168;1161:22;1123:2;1220:9;1207:23;1239:31;1264:5;1239:31;:::i;:::-;1289:5;-1:-1:-1;1345:2:16;1330:18;;1317:32;1368:18;1398:14;;;1395:2;;;1430:6;1422;1415:22;1395:2;1473:6;1462:9;1458:22;1448:32;;1518:7;1511:4;1507:2;1503:13;1499:27;1489:2;;1545:6;1537;1530:22;1489:2;1586;1573:16;1608:2;1604;1601:10;1598:2;;;1614:18;;:::i;:::-;1689:2;1683:9;1657:2;1743:13;;-1:-1:-1;;1739:22:16;;;1763:2;1735:31;1731:40;1719:53;;;1787:18;;;1807:22;;;1784:46;1781:2;;;1833:18;;:::i;:::-;1873:10;1869:2;1862:22;1908:2;1900:6;1893:18;1948:7;1943:2;1938;1934;1930:11;1926:20;1923:33;1920:2;;;1974:6;1966;1959:22;1920:2;2035;2030;2026;2022:11;2017:2;2009:6;2005:15;1992:46;2080:6;2075:2;2070;2062:6;2058:15;2054:24;2047:40;2106:6;2096:16;;;;;;;1113:1005;;;;;:::o;2123:325::-;2191:6;2199;2252:2;2240:9;2231:7;2227:23;2223:32;2220:2;;;2273:6;2265;2258:22;2453:194;2523:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:2;;;2597:6;2589;2582:22;2544:2;-1:-1:-1;2625:16:16;;2534:113;-1:-1:-1;2534:113:16:o;2652:190::-;2711:6;2764:2;2752:9;2743:7;2739:23;2735:32;2732:2;;;2785:6;2777;2770:22;2732:2;-1:-1:-1;2813:23:16;;2722:120;-1:-1:-1;2722:120:16:o;2847:296::-;2905:6;2958:2;2946:9;2937:7;2933:23;2929:32;2926:2;;;2979:6;2971;2964:22;2926:2;3023:9;3010:23;3073:10;3066:5;3062:22;3055:5;3052:33;3042:2;;3104:6;3096;3089:22;3148:274;3277:3;3315:6;3309:13;3331:53;3377:6;3372:3;3365:4;3357:6;3353:17;3331:53;:::i;:::-;3400:16;;;;;3285:137;-1:-1:-1;;3285:137:16:o;4134:661::-;4305:2;4357:21;;;4427:13;;4330:18;;;4449:22;;;4276:4;;4305:2;4528:15;;;;4502:2;4487:18;;;4276:4;4574:195;4588:6;4585:1;4582:13;4574:195;;;4653:13;;-1:-1:-1;;;;;4649:39:16;4637:52;;4744:15;;;;4709:12;;;;4685:1;4603:9;4574:195;;;-1:-1:-1;4786:3:16;;4285:510;-1:-1:-1;;;;;;4285:510:16:o;4800:797::-;5027:2;5079:21;;;5149:13;;5052:18;;;5171:22;;;4998:4;;5027:2;5212;;5230:18;;;;5271:15;;;4998:4;5317:254;5331:6;5328:1;5325:13;5317:254;;;5390:13;;5428:9;;5416:22;;5478:11;;5472:18;5458:12;;;5451:40;5511:12;;;;5546:15;;;;5353:1;5346:9;5317:254;;;-1:-1:-1;5588:3:16;;5007:590;-1:-1:-1;;;;;;;5007:590:16:o;6456:383::-;6605:2;6594:9;6587:21;6568:4;6637:6;6631:13;6680:6;6675:2;6664:9;6660:18;6653:34;6696:66;6755:6;6750:2;6739:9;6735:18;6730:2;6722:6;6718:15;6696:66;:::i;:::-;6823:2;6802:15;-1:-1:-1;;6798:29:16;6783:45;;;;6830:2;6779:54;;6577:262;-1:-1:-1;;6577:262:16:o;9171:408::-;9373:2;9355:21;;;9412:2;9392:18;;;9385:30;9451:34;9446:2;9431:18;;9424:62;-1:-1:-1;;;9517:2:16;9502:18;;9495:42;9569:3;9554:19;;9345:234::o;10346:408::-;10548:2;10530:21;;;10587:2;10567:18;;;10560:30;10626:34;10621:2;10606:18;;10599:62;-1:-1:-1;;;10692:2:16;10677:18;;10670:42;10744:3;10729:19;;10520:234::o;16915:407::-;17117:2;17099:21;;;17156:2;17136:18;;;17129:30;17195:34;17190:2;17175:18;;17168:62;-1:-1:-1;;;17261:2:16;17246:18;;17239:41;17312:3;17297:19;;17089:233::o;18083:404::-;18285:2;18267:21;;;18324:2;18304:18;;;18297:30;18363:34;18358:2;18343:18;;18336:62;-1:-1:-1;;;18429:2:16;18414:18;;18407:38;18477:3;18462:19;;18257:230::o;20935:267::-;20974:3;21002:11;;;21029:10;;-1:-1:-1;;;;;21048:27:16;;;21041:35;;21025:52;21022:2;;;21080:18;;:::i;:::-;-1:-1:-1;;;21127:19:16;;;21120:27;;21112:36;;21109:2;;;21151:18;;:::i;:::-;-1:-1:-1;;21187:9:16;;20982:220::o;21207:128::-;21247:3;21278:1;21274:6;21271:1;21268:13;21265:2;;;21284:18;;:::i;:::-;-1:-1:-1;21320:9:16;;21255:80::o;21340:217::-;21380:1;21406;21396:2;;-1:-1:-1;;;21431:31:16;;21485:4;21482:1;21475:15;21513:4;21438:1;21503:15;21396:2;-1:-1:-1;21542:9:16;;21386:171::o;21562:168::-;21602:7;21668:1;21664;21660:6;21656:14;21653:1;21650:21;21645:1;21638:9;21631:17;21627:45;21624:2;;;21675:18;;:::i;:::-;-1:-1:-1;21715:9:16;;21614:116::o;21735:125::-;21775:4;21803:1;21800;21797:8;21794:2;;;21808:18;;:::i;:::-;-1:-1:-1;21845:9:16;;21784:76::o;21865:258::-;21937:1;21947:113;21961:6;21958:1;21955:13;21947:113;;;22037:11;;;22031:18;22018:11;;;22011:39;21983:2;21976:10;21947:113;;;22078:6;22075:1;22072:13;22069:2;;;-1:-1:-1;;22113:1:16;22095:16;;22088:27;21918:205::o;22128:135::-;22167:3;-1:-1:-1;;22188:17:16;;22185:2;;;22208:18;;:::i;:::-;-1:-1:-1;22255:1:16;22244:13;;22175:88::o;22268:127::-;22329:10;22324:3;22320:20;22317:1;22310:31;22360:4;22357:1;22350:15;22384:4;22381:1;22374:15;22400:127;22461:10;22456:3;22452:20;22449:1;22442:31;22492:4;22489:1;22482:15;22516:4;22513:1;22506:15;22532:131;-1:-1:-1;;;;;22607:31:16;;22597:42;;22587:2;;22653:1;22650;22643:12"},"methodIdentifiers":{"AUR_PREC()":"45f7b8f4","MIN_STAKE_AMOUNT()":"27ed7188","MIN_WITHDRAW_AMOUNT()":"b6857844","activeStakeAmount()":"d849a502","activeValidators()":"d2d49c4b","addValidator(address)":"4d238c8e","completeWithdraw(address,uint256)":"7b66394c","dueWithdrawalAmount(address)":"dab31689","dueWithdrawalAmount(address,uint256)":"19d41774","getVersion()":"0d8e6e2c","inactivePools(address)":"340c5a25","initialize(address,address)":"485cc955","isActiveValidator(address)":"40550a1c","keeper()":"aced1661","lockPeriod()":"3fd8b02f","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","pendingReward(address,address)":"9ced7e76","pendingWithdrawals(address)":"f3f43703","proxiableUUID()":"52d1902d","removeValidator(address)":"40a141ff","renounceOwnership()":"715018a6","setKeeper(address)":"748747e6","setLockPeriod(uint32)":"f489f23b","setRewardPerBlock(uint256)":"bb872b4a","setValidatorLimit(uint32)":"522abc40","stake(address)":"26476204","stakeTable(address,address)":"f6a2314a","stakerPool()":"f0544ac8","stakerRewardPerBlock()":"24e770d0","totalStakeAmount()":"94409a56","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","unstake(address,uint256)":"c2a672e0","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","validatorLimit()":"57525cbc","validatorPool()":"d4c6d1de","validatorRewardPerBlock()":"7ea5db42","validatorWithdraw(uint256)":"eaf7c9dc","withdrawTable(address)":"29451893"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minWithdrawAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newLockPeriod\",\"type\":\"uint32\"}],\"name\":\"LockPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakerReward\",\"type\":\"uint256\"}],\"name\":\"RewardPerBlockChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedReward\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"ValidatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUR_PREC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_STAKE_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WITHDRAW_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeValidators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"addValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"completeWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"dueWithdrawalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"dueWithdrawalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inactivePools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastAUR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"isActiveValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct CMTStakingMock.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"removeValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newKeeper\",\"type\":\"address\"}],\"name\":\"setKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"setLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setRewardPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"limit\",\"type\":\"uint32\"}],\"name\":\"setValidatorLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeTable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastAUR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastAUR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"validatorWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawTable\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"_begin\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"_end\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/CMTStakingMock.sol\":\"CMTStakingMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfa467c53a0d60b4d09bf04aa952b1d1d44e5766fcc053aace078d7859b8419\",\"dweb:/ipfs/QmebVTZpyNxYfKYTuLMywzEJTdc1Ca8ME4xm3kR9gQgToG\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1\",\"dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/mock/CMTStakingMock.sol\":{\"keccak256\":\"0xad0e93acd7f12da39b529292d6c023824a3bf26f6bb50d5f3c5548834459f61c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://744b17826fa5b9bb7d4afd1c6e0787fbd75010e5a7c87028806acf5047e5601d\",\"dweb:/ipfs/QmasKtR45K2qqrSj2LYiBX3EXWKSdrkVsVdqB71z2bjHHs\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":527,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":530,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":948,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":992,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)49_storage"},{"astId":1277,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":828,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_paused","offset":0,"slot":"101","type":"t_bool"},{"astId":933,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":10,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_owner","offset":0,"slot":"151","type":"t_address"},{"astId":130,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":509,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"__gap","offset":0,"slot":"201","type":"t_array(t_uint256)50_storage"},{"astId":806,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":5867,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"keeper","offset":0,"slot":"301","type":"t_address"},{"astId":5870,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_validators","offset":0,"slot":"302","type":"t_struct(AddressSet)3842_storage"},{"astId":5873,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"validatorPool","offset":0,"slot":"304","type":"t_struct(Pool)5851_storage"},{"astId":5876,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"stakerPool","offset":0,"slot":"306","type":"t_struct(Pool)5851_storage"},{"astId":5881,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"inactivePools","offset":0,"slot":"308","type":"t_mapping(t_address,t_struct(Pool)5851_storage)"},{"astId":5888,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"stakeTable","offset":0,"slot":"309","type":"t_mapping(t_address,t_mapping(t_address,t_struct(StakeInfo)5860_storage))"},{"astId":5893,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"withdrawTable","offset":0,"slot":"310","type":"t_mapping(t_address,t_struct(Bytes32Deque)3208_storage)"},{"astId":5895,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"validatorLimit","offset":0,"slot":"311","type":"t_uint32"},{"astId":5897,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"lockPeriod","offset":4,"slot":"311","type":"t_uint32"},{"astId":5899,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"validatorRewardPerBlock","offset":0,"slot":"312","type":"t_uint256"},{"astId":5901,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"stakerRewardPerBlock","offset":0,"slot":"313","type":"t_uint256"},{"astId":5903,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"totalStakeAmount","offset":0,"slot":"314","type":"t_uint256"},{"astId":5905,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"activeStakeAmount","offset":0,"slot":"315","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_int128":{"encoding":"inplace","label":"int128","numberOfBytes":"16"},"t_mapping(t_address,t_mapping(t_address,t_struct(StakeInfo)5860_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => struct CMTStakingMock.StakeInfo))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(StakeInfo)5860_storage)"},"t_mapping(t_address,t_struct(Bytes32Deque)3208_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct DoubleEndedQueue.Bytes32Deque)","numberOfBytes":"32","value":"t_struct(Bytes32Deque)3208_storage"},"t_mapping(t_address,t_struct(Pool)5851_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CMTStakingMock.Pool)","numberOfBytes":"32","value":"t_struct(Pool)5851_storage"},"t_mapping(t_address,t_struct(StakeInfo)5860_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CMTStakingMock.StakeInfo)","numberOfBytes":"32","value":"t_struct(StakeInfo)5860_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_int128,t_bytes32)":{"encoding":"mapping","key":"t_int128","label":"mapping(int128 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_struct(AddressSet)3842_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":3841,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)3541_storage"}],"numberOfBytes":"64"},"t_struct(Bytes32Deque)3208_storage":{"encoding":"inplace","label":"struct DoubleEndedQueue.Bytes32Deque","members":[{"astId":3201,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_begin","offset":0,"slot":"0","type":"t_int128"},{"astId":3203,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_end","offset":16,"slot":"0","type":"t_int128"},{"astId":3207,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_data","offset":0,"slot":"1","type":"t_mapping(t_int128,t_bytes32)"}],"numberOfBytes":"64"},"t_struct(Pool)5851_storage":{"encoding":"inplace","label":"struct CMTStakingMock.Pool","members":[{"astId":5848,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"lastAUR","offset":0,"slot":"0","type":"t_uint256"},{"astId":5850,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"updateBlock","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(Set)3541_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":3536,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":3540,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(StakeInfo)5860_storage":{"encoding":"inplace","label":"struct CMTStakingMock.StakeInfo","members":[{"astId":5853,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"stakeAmount","offset":0,"slot":"0","type":"t_uint256"},{"astId":5855,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"rewardDebt","offset":0,"slot":"1","type":"t_uint256"},{"astId":5857,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"pendingReward","offset":0,"slot":"2","type":"t_uint256"},{"astId":5859,"contract":"contracts/mock/CMTStakingMock.sol:CMTStakingMock","label":"updateBlock","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}